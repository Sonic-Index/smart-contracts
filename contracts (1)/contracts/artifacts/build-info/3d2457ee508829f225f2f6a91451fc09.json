{
	"id": "3d2457ee508829f225f2f6a91451fc09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/rewardsDistributor.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.27;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/IVeSix.sol\";\r\n\r\n\r\n\r\ncontract SixRewardsDistributor is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Events\r\n    event RewardsDistributed(uint256 timestamp, uint256 amount);\r\n    event RewardsClaimed(uint256 indexed tokenId, uint256 amount, uint256 currentEpoch, uint256 maxEpoch);\r\n    \r\n    // Constants\r\n    uint256 private constant WEEK = 7 days;\r\n    uint256 private constant MAX_REWARDS_DELAY = 7 days;\r\n\r\n    // State variables\r\n    IVeSix public immutable veSix;\r\n    IERC20 public immutable rewardsToken;\r\n    \r\n    uint256 public startTime;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public timeCursor;\r\n    \r\n    mapping(uint256 => uint256) public tokenTimeCursor;\r\n    mapping(uint256 => uint256) public tokenEpoch;\r\n    mapping(uint256 => uint256) public weeklyRewards;\r\n    mapping(uint256 => uint256) public veSupplyCache;\r\n    \r\n    uint256 private rewardsBalance;\r\n\r\n    // Errors\r\n    error InvalidAddress();\r\n    error RewardsNotReady();\r\n    error NotAuthorized();\r\n    error NoRewards();\r\n\r\n    constructor(address _veSix, address _rewardsToken) Ownable(msg.sender) {\r\n        if (_veSix == address(0) || _rewardsToken == address(0)) revert InvalidAddress();\r\n        \r\n        veSix = IVeSix(_veSix);\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        \r\n        startTime = (block.timestamp / WEEK) * WEEK;\r\n        lastUpdateTime = startTime;\r\n        timeCursor = startTime;\r\n    }\r\n\r\n    function distributeRewards() external nonReentrant {\r\n        uint256 newRewards = rewardsToken.balanceOf(address(this)) - rewardsBalance;\r\n        if (newRewards == 0) revert NoRewards();\r\n\r\n        uint256 currentWeek = (block.timestamp / WEEK) * WEEK;\r\n        uint256 weeksSinceUpdate = (currentWeek - lastUpdateTime) / WEEK;\r\n        \r\n        if (weeksSinceUpdate == 0) {\r\n            // Add to current week if within same week\r\n            weeklyRewards[currentWeek] += newRewards;\r\n        } else {\r\n            // Distribute evenly across missed weeks\r\n            uint256 rewardsPerWeek = newRewards / weeksSinceUpdate;\r\n            for (uint256 t = lastUpdateTime + WEEK; t <= currentWeek; t += WEEK) {\r\n                weeklyRewards[t] += rewardsPerWeek;\r\n            }\r\n        }\r\n\r\n        rewardsBalance += newRewards;\r\n        lastUpdateTime = currentWeek;\r\n        \r\n        emit RewardsDistributed(block.timestamp, newRewards);\r\n        \r\n        _updateVeSupply();\r\n    }\r\n\r\n    function _updateVeSupply() internal {\r\n        uint256 currentTime = (block.timestamp / WEEK) * WEEK;\r\n        uint256 t = timeCursor;\r\n        \r\n        veSix.checkpoint();\r\n\r\n        for (uint256 i = 0; i < 20 && t <= currentTime; i++) {\r\n            uint256 epoch = _findEpochForTimestamp(t);\r\n            IVeSix.Point memory point = veSix.point_history(epoch);\r\n            \r\n            int128 dt = 0;\r\n            if (t > point.ts) {\r\n                dt = int128(int256(t - point.ts));\r\n            }\r\n            \r\n            uint256 supply = uint256(int256(point.bias - point.slope * dt));\r\n            if (supply < 0) supply = 0;\r\n            \r\n            veSupplyCache[t] = supply;\r\n            t += WEEK;\r\n        }\r\n        \r\n        timeCursor = t;\r\n    }\r\n\r\n    function _findEpochForTimestamp(uint256 timestamp) internal view returns (uint256) {\r\n        uint256 min = 0;\r\n        uint256 max = veSix.epoch();\r\n        \r\n        for (uint256 i = 0; i < 128; i++) {\r\n            if (min >= max) break;\r\n            \r\n            uint256 mid = (min + max + 2) / 2;\r\n            IVeSix.Point memory point = veSix.point_history(mid);\r\n            \r\n            if (point.ts <= timestamp) {\r\n                min = mid;\r\n            } else {\r\n                max = mid - 1;\r\n            }\r\n        }\r\n        \r\n        return min;\r\n    }\r\n\r\n    function claimable(uint256 tokenId) external view returns (uint256) {\r\n        uint256 currentWeek = (block.timestamp / WEEK) * WEEK;\r\n        return _calculateClaim(tokenId, currentWeek);\r\n    }\r\n\r\n    function _calculateClaim(uint256 tokenId, uint256 maxTime) internal view returns (uint256) {\r\n        uint256 userEpoch = tokenEpoch[tokenId];\r\n        if (userEpoch == 0) userEpoch = 1;\r\n        \r\n        uint256 weekCursor = tokenTimeCursor[tokenId];\r\n        if (weekCursor == 0) {\r\n            IVeSix.Point memory userPoint = veSix.user_point_history(tokenId, userEpoch);\r\n            weekCursor = ((userPoint.ts + WEEK - 1) / WEEK) * WEEK;\r\n        }\r\n        \r\n        uint256 toDistribute;\r\n        \r\n        for (uint256 i = 0; i < 50 && weekCursor <= maxTime; i++) {\r\n            uint256 balance = veSix.balanceOfNFTAt(tokenId, weekCursor);\r\n            uint256 supply = veSupplyCache[weekCursor];\r\n            \r\n            if (balance > 0 && supply > 0 && weeklyRewards[weekCursor] > 0) {\r\n                toDistribute += (balance * weeklyRewards[weekCursor]) / supply;\r\n            }\r\n            \r\n            weekCursor += WEEK;\r\n        }\r\n        \r\n        return toDistribute;\r\n    }\r\n\r\n    function claim(uint256 tokenId) external nonReentrant returns (uint256) {\r\n        if (!veSix.isApprovedOrOwner(msg.sender, tokenId)) revert NotAuthorized();\r\n\r\n        if (block.timestamp > timeCursor) {\r\n            _updateVeSupply();\r\n        }\r\n\r\n        uint256 currentWeek = (block.timestamp / WEEK) * WEEK;\r\n        uint256 amount = _calculateClaim(tokenId, currentWeek);\r\n        if (amount == 0) revert NoRewards();\r\n\r\n        // Update user state\r\n        tokenTimeCursor[tokenId] = currentWeek;\r\n        tokenEpoch[tokenId] = veSix.user_point_epoch(tokenId);\r\n        \r\n        // Update rewards balance\r\n        rewardsBalance -= amount;\r\n        \r\n        // Transfer rewards\r\n        address owner = veSix.ownerOf(tokenId);\r\n        rewardsToken.safeTransfer(owner, amount);\r\n        \r\n        emit RewardsClaimed(tokenId, amount, tokenEpoch[tokenId], veSix.user_point_epoch(tokenId));\r\n        \r\n        return amount;\r\n    }\r\n\r\n    function claimMany(uint256[] calldata tokenIds) external nonReentrant returns (bool) {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            if (veSix.isApprovedOrOwner(msg.sender, tokenIds[i])) {\r\n                try this.claim(tokenIds[i]) {} catch {}\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // View functions\r\n    function getWeeklyRewards(uint256 timestamp) external view returns (uint256) {\r\n        return weeklyRewards[(timestamp / WEEK) * WEEK];\r\n    }\r\n\r\n    function getCurrentVeSupply() external view returns (uint256) {\r\n        uint256 currentWeek = (block.timestamp / WEEK) * WEEK;\r\n        return veSupplyCache[currentWeek];\r\n    }\r\n}"
			},
			"contracts/interfaces/IVeSix.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.27;\r\n\r\ninterface IVeSix {\r\n    struct Point {\r\n        int128 bias;\r\n        int128 slope;\r\n        uint256 ts;\r\n        uint256 blk;\r\n    }\r\n    \r\n    function balanceOfNFTAt(uint256 tokenId, uint256 timestamp) external view returns (uint256);\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n    function isApprovedOrOwner(address spender, uint256 tokenId) external view returns (bool);\r\n    function deposit_for(uint256 tokenId, uint256 value) external;\r\n    function point_history(uint256 epoch) external view returns (Point memory);\r\n    function user_point_history(uint256 tokenId, uint256 loc) external view returns (Point memory);\r\n    function epoch() external view returns (uint256);\r\n    function user_point_epoch(uint256 tokenId) external view returns (uint256);\r\n    function checkpoint() external;\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df243502ada5a452e1c051b4fb49acf108693960cf457a1d04a6954a2a6bd24f64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df243502ada5a452e1c051b4fb49acf108693960cf457a1d04a6954a2a6bd24f64736f6c634300081b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x24 CALLDATALOAD MUL 0xAD 0xA5 LOG4 MSTORE 0xE1 0xC0 MLOAD 0xB4 0xFB BLOBHASH 0xAC CALL ADDMOD PUSH10 0x3960CF457A1D04A6954A 0x2A PUSH12 0xD24F64736F6C634300081B00 CALLER ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;750:8692:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df243502ada5a452e1c051b4fb49acf108693960cf457a1d04a6954a2a6bd24f64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0x24 CALLDATALOAD MUL 0xAD 0xA5 LOG4 MSTORE 0xE1 0xC0 MLOAD 0xB4 0xFB BLOBHASH 0xAC CALL ADDMOD PUSH10 0x3960CF457A1D04A6954A 0x2A PUSH12 0xD24F64736F6C634300081B00 CALLER ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df243502ada5a452e1c051b4fb49acf108693960cf457a1d04a6954a2a6bd24f64736f6c634300081b0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IVeSix.sol",
								"contracts/rewardsDistributor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b5b812cb2c967d05c75ba383a7b3124e5e29b5514258ad9099a4ecf2d108192f64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5b812cb2c967d05c75ba383a7b3124e5e29b5514258ad9099a4ecf2d108192f64736f6c634300081b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB8 SLT 0xCB 0x2C SWAP7 PUSH30 0x5C75BA383A7B3124E5E29B5514258AD9099A4ECF2D108192F64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5b812cb2c967d05c75ba383a7b3124e5e29b5514258ad9099a4ecf2d108192f64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB8 SLT 0xCB 0x2C SWAP7 PUSH30 0x5C75BA383A7B3124E5E29B5514258AD9099A4ECF2D108192F64736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5b812cb2c967d05c75ba383a7b3124e5e29b5514258ad9099a4ecf2d108192f64736f6c634300081b0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IVeSix.sol",
								"contracts/rewardsDistributor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCB 0xBF 0xCC SUB 0xC4 PUSH1 0x26 SWAP2 CREATE 0xAD PUSH6 0xDE9EC6369AEA 0xDA SWAP8 LOG4 SWAP10 REVERT 0xC5 0xD6 PUSH12 0x7E00FB39ED8564736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCB 0xBF 0xCC SUB 0xC4 PUSH1 0x26 SWAP2 CREATE 0xAD PUSH6 0xDE9EC6369AEA 0xDA SWAP8 LOG4 SWAP10 REVERT 0xC5 0xD6 PUSH12 0x7E00FB39ED8564736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IVeSix.sol",
								"contracts/rewardsDistributor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IVeSix.sol": {
				"IVeSix": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "balanceOfNFTAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkpoint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "deposit_for",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								}
							],
							"name": "point_history",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int128",
											"name": "bias",
											"type": "int128"
										},
										{
											"internalType": "int128",
											"name": "slope",
											"type": "int128"
										},
										{
											"internalType": "uint256",
											"name": "ts",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "blk",
											"type": "uint256"
										}
									],
									"internalType": "struct IVeSix.Point",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "user_point_epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "loc",
									"type": "uint256"
								}
							],
							"name": "user_point_history",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int128",
											"name": "bias",
											"type": "int128"
										},
										{
											"internalType": "int128",
											"name": "slope",
											"type": "int128"
										},
										{
											"internalType": "uint256",
											"name": "ts",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "blk",
											"type": "uint256"
										}
									],
									"internalType": "struct IVeSix.Point",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOfNFTAt(uint256,uint256)": "e0514aba",
							"checkpoint()": "c2c4c5c1",
							"deposit_for(uint256,uint256)": "ee99fe28",
							"epoch()": "900cf0cf",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"ownerOf(uint256)": "6352211e",
							"point_history(uint256)": "d1febfb9",
							"user_point_epoch(uint256)": "e441135c",
							"user_point_history(uint256,uint256)": "1376f3da"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"balanceOfNFTAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deposit_for\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"point_history\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVeSix.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"user_point_epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loc\",\"type\":\"uint256\"}],\"name\":\"user_point_history\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVeSix.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVeSix.sol\":\"IVeSix\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IVeSix.sol\":{\"keccak256\":\"0x045eed15e9b749383b87e8643d726ea9659ba28a75971d6ca25eae432be6cded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3348a0ff72be6e63e03697f131badcbd0a37c2b0f915daa2f818e02193596d3\",\"dweb:/ipfs/QmUUnkp9KZ9RUi7W4SZSCm1YSaHjFACwxQnDCpUF6ireu9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/rewardsDistributor.sol": {
				"SixRewardsDistributor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_veSix",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoRewards",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RewardsNotReady",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentEpoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxEpoch",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "claimMany",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentVeSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "getWeeklyRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeCursor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenEpoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenTimeCursor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "veSix",
							"outputs": [
								{
									"internalType": "contract IVeSix",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "veSupplyCache",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "weeklyRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/rewardsDistributor.sol\":413:7040  contract SixRewardsDistributor is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/rewardsDistributor.sol\":1438:1832  constructor(address _veSix, address _rewardsToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/rewardsDistributor.sol\":1497:1507  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/rewardsDistributor.sol\":1524:1544  _veSix == address(0) */\n  dup3\n  and\n  iszero\n  dup1\n    /* \"contracts/rewardsDistributor.sol\":1524:1575  _veSix == address(0) || _rewardsToken == address(0) */\n  tag_15\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/rewardsDistributor.sol\":1548:1575  _rewardsToken == address(0) */\n  dup2\n  and\n  iszero\n    /* \"contracts/rewardsDistributor.sol\":1524:1575  _veSix == address(0) || _rewardsToken == address(0) */\ntag_15:\n    /* \"contracts/rewardsDistributor.sol\":1520:1600  if (_veSix == address(0) || _rewardsToken == address(0)) revert InvalidAddress() */\n  iszero\n  tag_16\n  jumpi\n    /* \"contracts/rewardsDistributor.sol\":1584:1600  InvalidAddress() */\n  mload(0x40)\n  shl(0xe0, 0xe6c4247b)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/rewardsDistributor.sol\":1520:1600  if (_veSix == address(0) || _rewardsToken == address(0)) revert InvalidAddress() */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/rewardsDistributor.sol\":1621:1643  veSix = IVeSix(_veSix) */\n  dup1\n  dup4\n  and\n  0x80\n  mstore\n    /* \"contracts/rewardsDistributor.sol\":1654:1690  rewardsToken = IERC20(_rewardsToken) */\n  dup2\n  and\n  0xa0\n  mstore\n    /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n  0x093a80\n    /* \"contracts/rewardsDistributor.sol\":1724:1746  block.timestamp / WEEK */\n  tag_17\n    /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n  dup2\n    /* \"contracts/rewardsDistributor.sol\":1724:1739  block.timestamp */\n  timestamp\n    /* \"contracts/rewardsDistributor.sol\":1724:1746  block.timestamp / WEEK */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/rewardsDistributor.sol\":1723:1754  (block.timestamp / WEEK) * WEEK */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/rewardsDistributor.sol\":1711:1720  startTime */\n  0x02\n    /* \"contracts/rewardsDistributor.sol\":1711:1754  startTime = (block.timestamp / WEEK) * WEEK */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/rewardsDistributor.sol\":1765:1779  lastUpdateTime */\n  0x03\n    /* \"contracts/rewardsDistributor.sol\":1765:1791  lastUpdateTime = startTime */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/rewardsDistributor.sol\":1802:1812  timeCursor */\n  0x04\n    /* \"contracts/rewardsDistributor.sol\":1802:1824  timeCursor = startTime */\n  sstore\n  pop\n    /* \"contracts/rewardsDistributor.sol\":413:7040  contract SixRewardsDistributor is Ownable, ReentrancyGuard {... */\n  tag_24\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_23:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_28:\n    /* \"#utility.yul\":375:415   */\n  tag_29\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_30\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_23\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":702:919   */\ntag_18:\n    /* \"#utility.yul\":742:743   */\n  0x00\n    /* \"#utility.yul\":768:769   */\n  dup3\n    /* \"#utility.yul\":758:890   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":812:822   */\n  0x4e487b71\n    /* \"#utility.yul\":807:810   */\n  0xe0\n    /* \"#utility.yul\":803:823   */\n  shl\n    /* \"#utility.yul\":800:801   */\n  0x00\n    /* \"#utility.yul\":793:824   */\n  mstore\n    /* \"#utility.yul\":847:851   */\n  0x12\n    /* \"#utility.yul\":844:845   */\n  0x04\n    /* \"#utility.yul\":837:852   */\n  mstore\n    /* \"#utility.yul\":875:879   */\n  0x24\n    /* \"#utility.yul\":872:873   */\n  0x00\n    /* \"#utility.yul\":865:880   */\n  revert\n    /* \"#utility.yul\":758:890   */\ntag_33:\n  pop\n    /* \"#utility.yul\":904:913   */\n  div\n  swap1\n    /* \"#utility.yul\":702:919   */\n  jump\t// out\n    /* \"#utility.yul\":924:1189   */\ntag_20:\n    /* \"#utility.yul\":997:1006   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":1028:1037   */\n  dup2\n  iszero\n    /* \"#utility.yul\":1045:1060   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":1039:1061   */\n  dup5\n  eq\n    /* \"#utility.yul\":1025:1062   */\n  or\n    /* \"#utility.yul\":1015:1183   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1105:1115   */\n  0x4e487b71\n    /* \"#utility.yul\":1100:1103   */\n  0xe0\n    /* \"#utility.yul\":1096:1116   */\n  shl\n    /* \"#utility.yul\":1093:1094   */\n  0x00\n    /* \"#utility.yul\":1086:1117   */\n  mstore\n    /* \"#utility.yul\":1140:1144   */\n  0x11\n    /* \"#utility.yul\":1137:1138   */\n  0x04\n    /* \"#utility.yul\":1130:1145   */\n  mstore\n    /* \"#utility.yul\":1168:1172   */\n  0x24\n    /* \"#utility.yul\":1165:1166   */\n  0x00\n    /* \"#utility.yul\":1158:1173   */\n  revert\n    /* \"#utility.yul\":1015:1183   */\ntag_35:\n    /* \"#utility.yul\":924:1189   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_24:\n    /* \"contracts/rewardsDistributor.sol\":413:7040  contract SixRewardsDistributor is Ownable, ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n  0x00\n  assignImmutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/rewardsDistributor.sol\":413:7040  contract SixRewardsDistributor is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98a3f422\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd1d58b25\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd1d58b25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe6e00a8a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xeeff799a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf6dd9e43\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x98a3f422\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaf364c05\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x78e97925\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8736659b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x925489a8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x92815606\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x069bf581\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6f4a2cd0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/rewardsDistributor.sol\":6859:7037  function getCurrentVeSupply() external view returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/rewardsDistributor.sol\":6859:7037  function getCurrentVeSupply() external view returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewardsDistributor.sol\":5405:6345  function claim(uint256 tokenId) external nonReentrant returns (uint256) {... */\n    tag_4:\n      tag_24\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/rewardsDistributor.sol\":1840:2830  function distributeRewards() external nonReentrant {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_33\n      tag_36\n      jump\t// in\n        /* \"contracts/rewardsDistributor.sol\":941:965  uint256 public startTime */\n    tag_7:\n      tag_24\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":1008:1033  uint256 public timeCursor */\n    tag_8:\n      tag_24\n      sload(0x04)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_43:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":545:577   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":527:578   */\n      dup2\n      mstore\n        /* \"#utility.yul\":515:517   */\n      0x20\n        /* \"#utility.yul\":500:518   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_26\n        /* \"#utility.yul\":381:584   */\n      jump\n        /* \"contracts/rewardsDistributor.sol\":6353:6677  function claimMany(uint256[] calldata tokenIds) external nonReentrant returns (bool) {... */\n    tag_10:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1369:1383   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1362:1384   */\n      iszero\n        /* \"#utility.yul\":1344:1385   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1332:1334   */\n      0x20\n        /* \"#utility.yul\":1317:1335   */\n      add\n        /* \"contracts/rewardsDistributor.sol\":6353:6677  function claimMany(uint256[] calldata tokenIds) external nonReentrant returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":1204:1391   */\n      jump\n        /* \"contracts/rewardsDistributor.sol\":856:885  IVeSix public immutable veSix */\n    tag_11:\n      tag_43\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":1103:1148  mapping(uint256 => uint256) public tokenEpoch */\n    tag_12:\n      tag_24\n      tag_58\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_58:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":1155:1203  mapping(uint256 => uint256) public weeklyRewards */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_62:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":972:1001  uint256 public lastUpdateTime */\n    tag_14:\n      tag_24\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":892:928  IERC20 public immutable rewardsToken */\n    tag_15:\n      tag_43\n      immutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":4194:4389  function claimable(uint256 tokenId) external view returns (uint256) {... */\n    tag_16:\n      tag_24\n      tag_73\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/rewardsDistributor.sol\":1046:1096  mapping(uint256 => uint256) public tokenTimeCursor */\n    tag_17:\n      tag_24\n      tag_77\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":6708:6851  function getWeeklyRewards(uint256 timestamp) external view returns (uint256) {... */\n    tag_18:\n      tag_24\n      tag_81\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_33\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/rewardsDistributor.sol\":1210:1258  mapping(uint256 => uint256) public veSupplyCache */\n    tag_20:\n      tag_24\n      tag_89\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/rewardsDistributor.sol\":6859:7037  function getCurrentVeSupply() external view returns (uint256) {... */\n    tag_25:\n        /* \"contracts/rewardsDistributor.sol\":6912:6919  uint256 */\n      0x00\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":6955:6977  block.timestamp / WEEK */\n      tag_93\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":6955:6970  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":6955:6977  block.timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/rewardsDistributor.sol\":6954:6985  (block.timestamp / WEEK) * WEEK */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/rewardsDistributor.sol\":7003:7029  veSupplyCache[currentWeek] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":7003:7016  veSupplyCache */\n      0x08\n        /* \"contracts/rewardsDistributor.sol\":7003:7029  veSupplyCache[currentWeek] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap3\n        /* \"contracts/rewardsDistributor.sol\":6859:7037  function getCurrentVeSupply() external view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":5405:6345  function claim(uint256 tokenId) external nonReentrant returns (uint256) {... */\n    tag_31:\n        /* \"contracts/rewardsDistributor.sol\":5468:5475  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/rewardsDistributor.sol\":5493:5537  veSix.isApprovedOrOwner(msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x430c2081)\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5517:5527  msg.sender */\n      caller\n        /* \"contracts/rewardsDistributor.sol\":5493:5537  veSix.isApprovedOrOwner(msg.sender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2930:2981   */\n      mstore\n        /* \"#utility.yul\":2997:3015   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2990:3024   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5493:5498  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":5493:5516  veSix.isApprovedOrOwner */\n      and\n      swap1\n      0x430c2081\n      swap1\n        /* \"#utility.yul\":2903:2921   */\n      0x44\n      add\n        /* \"contracts/rewardsDistributor.sol\":5493:5537  veSix.isApprovedOrOwner(msg.sender, tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/rewardsDistributor.sol\":5488:5561  if (!veSix.isApprovedOrOwner(msg.sender, tokenId)) revert NotAuthorized() */\n      tag_107\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":5546:5561  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/rewardsDistributor.sol\":5488:5561  if (!veSix.isApprovedOrOwner(msg.sender, tokenId)) revert NotAuthorized() */\n    tag_107:\n        /* \"contracts/rewardsDistributor.sol\":5596:5606  timeCursor */\n      sload(0x04)\n        /* \"contracts/rewardsDistributor.sol\":5578:5593  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":5578:5606  block.timestamp > timeCursor */\n      gt\n        /* \"contracts/rewardsDistributor.sol\":5574:5652  if (block.timestamp > timeCursor) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":5623:5640  _updateVeSupply() */\n      tag_109\n        /* \"contracts/rewardsDistributor.sol\":5623:5638  _updateVeSupply */\n      tag_110\n        /* \"contracts/rewardsDistributor.sol\":5623:5640  _updateVeSupply() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/rewardsDistributor.sol\":5664:5683  uint256 currentWeek */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":5687:5709  block.timestamp / WEEK */\n      tag_111\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":5687:5702  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":5687:5709  block.timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_111:\n        /* \"contracts/rewardsDistributor.sol\":5686:5717  (block.timestamp / WEEK) * WEEK */\n      tag_112\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_112:\n        /* \"contracts/rewardsDistributor.sol\":5664:5717  uint256 currentWeek = (block.timestamp / WEEK) * WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5728:5742  uint256 amount */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":5745:5782  _calculateClaim(tokenId, currentWeek) */\n      tag_113\n        /* \"contracts/rewardsDistributor.sol\":5761:5768  tokenId */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":5770:5781  currentWeek */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":5745:5760  _calculateClaim */\n      tag_114\n        /* \"contracts/rewardsDistributor.sol\":5745:5782  _calculateClaim(tokenId, currentWeek) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/rewardsDistributor.sol\":5728:5782  uint256 amount = _calculateClaim(tokenId, currentWeek) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5797:5803  amount */\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":5807:5808  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":5797:5808  amount == 0 */\n      sub\n        /* \"contracts/rewardsDistributor.sol\":5793:5828  if (amount == 0) revert NoRewards() */\n      tag_115\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":5817:5828  NoRewards() */\n      mload(0x40)\n      shl(0xe2, 0x0fec21fd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/rewardsDistributor.sol\":5793:5828  if (amount == 0) revert NoRewards() */\n    tag_115:\n        /* \"contracts/rewardsDistributor.sol\":5871:5895  tokenTimeCursor[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5871:5886  tokenTimeCursor */\n      0x05\n        /* \"contracts/rewardsDistributor.sol\":5871:5895  tokenTimeCursor[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/rewardsDistributor.sol\":5871:5909  tokenTimeCursor[tokenId] = currentWeek */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/rewardsDistributor.sol\":5942:5973  veSix.user_point_epoch(tokenId) */\n      mload\n      shl(0xe2, 0x391044d7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5942:5947  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":5942:5964  veSix.user_point_epoch */\n      and\n      swap1\n      0xe441135c\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":5942:5973  veSix.user_point_epoch(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/rewardsDistributor.sol\":5920:5939  tokenEpoch[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5920:5930  tokenEpoch */\n      0x06\n        /* \"contracts/rewardsDistributor.sol\":5920:5939  tokenEpoch[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/rewardsDistributor.sol\":5920:5973  tokenEpoch[tokenId] = veSix.user_point_epoch(tokenId) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/rewardsDistributor.sol\":6029:6043  rewardsBalance */\n      0x09\n        /* \"contracts/rewardsDistributor.sol\":6029:6053  rewardsBalance -= amount */\n      dup1\n      sload\n        /* \"contracts/rewardsDistributor.sol\":6047:6053  amount */\n      dup4\n      swap3\n        /* \"contracts/rewardsDistributor.sol\":5920:5939  tokenEpoch[tokenId] */\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":6029:6053  rewardsBalance -= amount */\n      tag_121\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":6047:6053  amount */\n      dup5\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":6029:6053  rewardsBalance -= amount */\n      tag_122\n      jump\t// in\n    tag_121:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":6119:6141  veSix.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":6103:6116  address owner */\n      0x00\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":6119:6124  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":6119:6132  veSix.ownerOf */\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":6119:6141  veSix.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/rewardsDistributor.sol\":6103:6141  address owner = veSix.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":6152:6192  rewardsToken.safeTransfer(owner, amount) */\n      tag_128\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":6152:6164  rewardsToken */\n      immutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n        /* \"contracts/rewardsDistributor.sol\":6152:6177  rewardsToken.safeTransfer */\n      and\n        /* \"contracts/rewardsDistributor.sol\":6103:6141  address owner = veSix.ownerOf(tokenId) */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":6185:6191  amount */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":6152:6177  rewardsToken.safeTransfer */\n      tag_129\n        /* \"contracts/rewardsDistributor.sol\":6152:6192  rewardsToken.safeTransfer(owner, amount) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/rewardsDistributor.sol\":6250:6269  tokenEpoch[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":6250:6260  tokenEpoch */\n      0x06\n        /* \"contracts/rewardsDistributor.sol\":6250:6269  tokenEpoch[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":6271:6302  veSix.user_point_epoch(tokenId) */\n      swap1\n      mload\n      shl(0xe2, 0x391044d7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":6233:6240  tokenId */\n      dup7\n      swap2\n        /* \"contracts/rewardsDistributor.sol\":6218:6303  RewardsClaimed(tokenId, amount, tokenEpoch[tokenId], veSix.user_point_epoch(tokenId)) */\n      0x5ce397c9bb9806fe77f5c7c28202740f0805fc106a10f4d38821a4b65c768345\n      swap2\n        /* \"contracts/rewardsDistributor.sol\":6242:6248  amount */\n      dup6\n      swap2\n        /* \"contracts/rewardsDistributor.sol\":6250:6269  tokenEpoch[tokenId] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":6271:6276  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n        /* \"contracts/rewardsDistributor.sol\":6271:6293  veSix.user_point_epoch */\n      and\n      swap1\n      0xe441135c\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":6271:6302  veSix.user_point_epoch(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_133:\n        /* \"contracts/rewardsDistributor.sol\":6218:6303  RewardsClaimed(tokenId, amount, tokenEpoch[tokenId], veSix.user_point_epoch(tokenId)) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4143:4168   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4199:4201   */\n      0x20\n        /* \"#utility.yul\":4184:4202   */\n      dup5\n      add\n        /* \"#utility.yul\":4177:4211   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4227:4245   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4220:4254   */\n      mstore\n        /* \"#utility.yul\":4131:4133   */\n      0x60\n        /* \"#utility.yul\":4116:4134   */\n      add\n        /* \"contracts/rewardsDistributor.sol\":6218:6303  RewardsClaimed(tokenId, amount, tokenEpoch[tokenId], veSix.user_point_epoch(tokenId)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/rewardsDistributor.sol\":6331:6337  amount */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_136:\n        /* \"contracts/rewardsDistributor.sol\":5405:6345  function claim(uint256 tokenId) external nonReentrant returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":1840:2830  function distributeRewards() external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/rewardsDistributor.sol\":1963:1977  rewardsBalance */\n      sload(0x09)\n        /* \"contracts/rewardsDistributor.sol\":1923:1960  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":1954:1958  this */\n      address\n        /* \"contracts/rewardsDistributor.sol\":1923:1960  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":527:578   */\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":1902:1920  uint256 newRewards */\n      0x00\n      swap2\n        /* \"contracts/rewardsDistributor.sol\":1963:1977  rewardsBalance */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":1923:1935  rewardsToken */\n      immutable(\"0xcc80724d438a73e21efb48933a149f5b95ade624d1778284bcca17773a1c9da3\")\n        /* \"contracts/rewardsDistributor.sol\":1923:1945  rewardsToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":500:518   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":1923:1960  rewardsToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_144:\n        /* \"contracts/rewardsDistributor.sol\":1923:1977  rewardsToken.balanceOf(address(this)) - rewardsBalance */\n      tag_145\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_145:\n        /* \"contracts/rewardsDistributor.sol\":1902:1977  uint256 newRewards = rewardsToken.balanceOf(address(this)) - rewardsBalance */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":1992:2002  newRewards */\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":2006:2007  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":1992:2007  newRewards == 0 */\n      sub\n        /* \"contracts/rewardsDistributor.sol\":1988:2027  if (newRewards == 0) revert NoRewards() */\n      tag_146\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":2016:2027  NoRewards() */\n      mload(0x40)\n      shl(0xe2, 0x0fec21fd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/rewardsDistributor.sol\":1988:2027  if (newRewards == 0) revert NoRewards() */\n    tag_146:\n        /* \"contracts/rewardsDistributor.sol\":2040:2059  uint256 currentWeek */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":2063:2085  block.timestamp / WEEK */\n      tag_147\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":2063:2078  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":2063:2085  block.timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"contracts/rewardsDistributor.sol\":2062:2093  (block.timestamp / WEEK) * WEEK */\n      tag_148\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_148:\n        /* \"contracts/rewardsDistributor.sol\":2040:2093  uint256 currentWeek = (block.timestamp / WEEK) * WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2104:2128  uint256 weeksSinceUpdate */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":2146:2160  lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/rewardsDistributor.sol\":2132:2143  currentWeek */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":2132:2160  currentWeek - lastUpdateTime */\n      tag_149\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_149:\n        /* \"contracts/rewardsDistributor.sol\":2131:2168  (currentWeek - lastUpdateTime) / WEEK */\n      tag_150\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n        /* \"contracts/rewardsDistributor.sol\":2104:2168  uint256 weeksSinceUpdate = (currentWeek - lastUpdateTime) / WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2193:2209  weeksSinceUpdate */\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":2213:2214  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":2193:2214  weeksSinceUpdate == 0 */\n      sub\n        /* \"contracts/rewardsDistributor.sol\":2189:2632  if (weeksSinceUpdate == 0) {... */\n      tag_151\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":2287:2313  weeklyRewards[currentWeek] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":2287:2300  weeklyRewards */\n      0x07\n        /* \"contracts/rewardsDistributor.sol\":2287:2313  weeklyRewards[currentWeek] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/rewardsDistributor.sol\":2287:2327  weeklyRewards[currentWeek] += newRewards */\n      dup1\n      sload\n        /* \"contracts/rewardsDistributor.sol\":2317:2327  newRewards */\n      dup6\n      swap3\n        /* \"contracts/rewardsDistributor.sol\":2287:2313  weeklyRewards[currentWeek] */\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2287:2327  weeklyRewards[currentWeek] += newRewards */\n      tag_152\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2317:2327  newRewards */\n      dup5\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2287:2327  weeklyRewards[currentWeek] += newRewards */\n      tag_153\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2189:2632  if (weeksSinceUpdate == 0) {... */\n      tag_154\n      swap1\n      pop\n      jump\n    tag_151:\n        /* \"contracts/rewardsDistributor.sol\":2414:2436  uint256 rewardsPerWeek */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":2439:2468  newRewards / weeksSinceUpdate */\n      tag_155\n        /* \"contracts/rewardsDistributor.sol\":2452:2468  weeksSinceUpdate */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":2439:2449  newRewards */\n      dup6\n        /* \"contracts/rewardsDistributor.sol\":2439:2468  newRewards / weeksSinceUpdate */\n      tag_94\n      jump\t// in\n    tag_155:\n        /* \"contracts/rewardsDistributor.sol\":2414:2468  uint256 rewardsPerWeek = newRewards / weeksSinceUpdate */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2488:2497  uint256 t */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":2500:2514  lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/rewardsDistributor.sol\":2500:2521  lastUpdateTime + WEEK */\n      tag_159\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_159:\n        /* \"contracts/rewardsDistributor.sol\":2488:2521  uint256 t = lastUpdateTime + WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2483:2621  for (uint256 t = lastUpdateTime + WEEK; t <= currentWeek; t += WEEK) {... */\n    tag_156:\n        /* \"contracts/rewardsDistributor.sol\":2528:2539  currentWeek */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":2523:2524  t */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":2523:2539  t <= currentWeek */\n      gt\n        /* \"contracts/rewardsDistributor.sol\":2483:2621  for (uint256 t = lastUpdateTime + WEEK; t <= currentWeek; t += WEEK) {... */\n      tag_157\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":2571:2587  weeklyRewards[t] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":2571:2584  weeklyRewards */\n      0x07\n        /* \"contracts/rewardsDistributor.sol\":2571:2587  weeklyRewards[t] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/rewardsDistributor.sol\":2571:2605  weeklyRewards[t] += rewardsPerWeek */\n      dup1\n      sload\n        /* \"contracts/rewardsDistributor.sol\":2591:2605  rewardsPerWeek */\n      dup5\n      swap3\n        /* \"contracts/rewardsDistributor.sol\":2571:2587  weeklyRewards[t] */\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2571:2605  weeklyRewards[t] += rewardsPerWeek */\n      tag_160\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2591:2605  rewardsPerWeek */\n      dup5\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":2571:2605  weeklyRewards[t] += rewardsPerWeek */\n      tag_153\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2541:2550  t += WEEK */\n      tag_161\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":2541:2550  t += WEEK */\n      dup3\n      tag_153\n      jump\t// in\n    tag_161:\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2483:2621  for (uint256 t = lastUpdateTime + WEEK; t <= currentWeek; t += WEEK) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2345:2632  {... */\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2189:2632  if (weeksSinceUpdate == 0) {... */\n    tag_154:\n        /* \"contracts/rewardsDistributor.sol\":2662:2672  newRewards */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":2644:2658  rewardsBalance */\n      0x09\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":2644:2672  rewardsBalance += newRewards */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2683:2697  lastUpdateTime */\n      0x03\n        /* \"contracts/rewardsDistributor.sol\":2683:2711  lastUpdateTime = currentWeek */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/rewardsDistributor.sol\":2737:2784  RewardsDistributed(block.timestamp, newRewards) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/rewardsDistributor.sol\":2756:2771  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":4569:4594   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4625:4627   */\n      0x20\n        /* \"#utility.yul\":4610:4628   */\n      dup2\n      add\n        /* \"#utility.yul\":4603:4637   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":2737:2784  RewardsDistributed(block.timestamp, newRewards) */\n      0x29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c\n      swap2\n        /* \"#utility.yul\":4542:4560   */\n      add\n        /* \"contracts/rewardsDistributor.sol\":2737:2784  RewardsDistributed(block.timestamp, newRewards) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/rewardsDistributor.sol\":2805:2822  _updateVeSupply() */\n      tag_165\n        /* \"contracts/rewardsDistributor.sol\":2805:2820  _updateVeSupply */\n      tag_110\n        /* \"contracts/rewardsDistributor.sol\":2805:2822  _updateVeSupply() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/rewardsDistributor.sol\":1891:2830  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_166:\n        /* \"contracts/rewardsDistributor.sol\":1840:2830  function distributeRewards() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/rewardsDistributor.sol\":6353:6677  function claimMany(uint256[] calldata tokenIds) external nonReentrant returns (bool) {... */\n    tag_50:\n        /* \"contracts/rewardsDistributor.sol\":6432:6436  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/rewardsDistributor.sol\":6454:6463  uint256 i */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":6449:6648  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n    tag_177:\n        /* \"contracts/rewardsDistributor.sol\":6469:6488  i < tokenIds.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/rewardsDistributor.sol\":6449:6648  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":6514:6519  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":6514:6537  veSix.isApprovedOrOwner */\n      and\n      0x430c2081\n        /* \"contracts/rewardsDistributor.sol\":6538:6548  msg.sender */\n      caller\n        /* \"contracts/rewardsDistributor.sol\":6550:6558  tokenIds */\n      dup7\n      dup7\n        /* \"contracts/rewardsDistributor.sol\":6559:6560  i */\n      dup6\n        /* \"contracts/rewardsDistributor.sol\":6550:6561  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/rewardsDistributor.sol\":6514:6562  veSix.isApprovedOrOwner(msg.sender, tokenIds[i]) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup8\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2948:2980   */\n      swap1\n      swap5\n      and\n        /* \"contracts/rewardsDistributor.sol\":6514:6562  veSix.isApprovedOrOwner(msg.sender, tokenIds[i]) */\n      0x04\n      dup6\n      add\n        /* \"#utility.yul\":2930:2981   */\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":6550:6561  tokenIds[i] */\n      0x20\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      calldataload\n        /* \"#utility.yul\":2997:3015   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2990:3024   */\n      mstore\n      pop\n        /* \"#utility.yul\":2903:2921   */\n      0x44\n      add\n        /* \"contracts/rewardsDistributor.sol\":6514:6562  veSix.isApprovedOrOwner(msg.sender, tokenIds[i]) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_186:\n        /* \"contracts/rewardsDistributor.sol\":6510:6637  if (veSix.isApprovedOrOwner(msg.sender, tokenIds[i])) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":6587:6591  this */\n      address\n        /* \"contracts/rewardsDistributor.sol\":6587:6597  this.claim */\n      0x379607f5\n        /* \"contracts/rewardsDistributor.sol\":6598:6606  tokenIds */\n      dup6\n      dup6\n        /* \"contracts/rewardsDistributor.sol\":6607:6608  i */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":6598:6609  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_189\n      jumpi\n      tag_189\n      tag_182\n      jump\t// in\n    tag_189:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/rewardsDistributor.sol\":6587:6610  this.claim(tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/rewardsDistributor.sol\":6587:6610  this.claim(tokenIds[i]) */\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_191\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_192\n      swap2\n      dup2\n      add\n      swap1\n      tag_120\n      jump\t// in\n    tag_192:\n      0x01\n    tag_191:\n        /* \"contracts/rewardsDistributor.sol\":6583:6622  try this.claim(tokenIds[i]) {} catch {} */\n      iszero\n      tag_197\n      jumpi\n      pop\n    tag_197:\n        /* \"contracts/rewardsDistributor.sol\":6490:6493  i++ */\n      0x01\n      add\n        /* \"contracts/rewardsDistributor.sol\":6449:6648  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_177)\n    tag_178:\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":6665:6669  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_198:\n        /* \"contracts/rewardsDistributor.sol\":6353:6677  function claimMany(uint256[] calldata tokenIds) external nonReentrant returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":4194:4389  function claimable(uint256 tokenId) external view returns (uint256) {... */\n    tag_74:\n        /* \"contracts/rewardsDistributor.sol\":4253:4260  uint256 */\n      0x00\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":4296:4318  block.timestamp / WEEK */\n      tag_200\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":4296:4311  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":4296:4318  block.timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_200:\n        /* \"contracts/rewardsDistributor.sol\":4295:4326  (block.timestamp / WEEK) * WEEK */\n      tag_201\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_201:\n        /* \"contracts/rewardsDistributor.sol\":4273:4326  uint256 currentWeek = (block.timestamp / WEEK) * WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4344:4381  _calculateClaim(tokenId, currentWeek) */\n      tag_202\n        /* \"contracts/rewardsDistributor.sol\":4360:4367  tokenId */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":4369:4380  currentWeek */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":4344:4359  _calculateClaim */\n      tag_114\n        /* \"contracts/rewardsDistributor.sol\":4344:4381  _calculateClaim(tokenId, currentWeek) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/rewardsDistributor.sol\":4337:4381  return _calculateClaim(tokenId, currentWeek) */\n      swap4\n        /* \"contracts/rewardsDistributor.sol\":4194:4389  function claimable(uint256 tokenId) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":6708:6851  function getWeeklyRewards(uint256 timestamp) external view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/rewardsDistributor.sol\":6776:6783  uint256 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":6803:6816  weeklyRewards */\n      0x07\n        /* \"contracts/rewardsDistributor.sol\":6776:6783  uint256 */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":6818:6834  timestamp / WEEK */\n      tag_204\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":6818:6827  timestamp */\n      dup7\n        /* \"contracts/rewardsDistributor.sol\":6818:6834  timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_204:\n        /* \"contracts/rewardsDistributor.sol\":6817:6842  (timestamp / WEEK) * WEEK */\n      tag_205\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_205:\n        /* \"contracts/rewardsDistributor.sol\":6803:6843  weeklyRewards[(timestamp / WEEK) * WEEK] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":6796:6843  return weeklyRewards[(timestamp / WEEK) * WEEK] */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":6708:6851  function getWeeklyRewards(uint256 timestamp) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":527:578   */\n      mstore\n        /* \"#utility.yul\":500:518   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4982:4984   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4964:4985   */\n      mstore\n        /* \"#utility.yul\":5021:5023   */\n      0x1f\n        /* \"#utility.yul\":5001:5019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4994:5024   */\n      mstore\n        /* \"#utility.yul\":5060:5093   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5040:5058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5033:5094   */\n      mstore\n        /* \"#utility.yul\":5111:5129   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_210\n        /* \"#utility.yul\":4780:5135   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_213:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":2838:3608  function _updateVeSupply() internal {... */\n    tag_110:\n        /* \"contracts/rewardsDistributor.sol\":2885:2904  uint256 currentTime */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":2908:2930  block.timestamp / WEEK */\n      tag_217\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":2908:2923  block.timestamp */\n      timestamp\n        /* \"contracts/rewardsDistributor.sol\":2908:2930  block.timestamp / WEEK */\n      tag_94\n      jump\t// in\n    tag_217:\n        /* \"contracts/rewardsDistributor.sol\":2907:2938  (block.timestamp / WEEK) * WEEK */\n      tag_218\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_218:\n        /* \"contracts/rewardsDistributor.sol\":2885:2938  uint256 currentTime = (block.timestamp / WEEK) * WEEK */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2949:2958  uint256 t */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":2961:2971  timeCursor */\n      sload(0x04)\n        /* \"contracts/rewardsDistributor.sol\":2949:2971  uint256 t = timeCursor */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2992:2997  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":2992:3008  veSix.checkpoint */\n      and\n      0xc2c4c5c1\n        /* \"contracts/rewardsDistributor.sol\":2992:3010  veSix.checkpoint() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3028:3037  uint256 i */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3023:3566  for (uint256 i = 0; i < 20 && t <= currentTime; i++) {... */\n    tag_222:\n        /* \"contracts/rewardsDistributor.sol\":3047:3049  20 */\n      0x14\n        /* \"contracts/rewardsDistributor.sol\":3043:3044  i */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":3043:3049  i < 20 */\n      lt\n        /* \"contracts/rewardsDistributor.sol\":3043:3069  i < 20 && t <= currentTime */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3058:3069  currentTime */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":3053:3054  t */\n      dup3\n        /* \"contracts/rewardsDistributor.sol\":3053:3069  t <= currentTime */\n      gt\n      iszero\n        /* \"contracts/rewardsDistributor.sol\":3043:3069  i < 20 && t <= currentTime */\n    tag_225:\n        /* \"contracts/rewardsDistributor.sol\":3023:3566  for (uint256 i = 0; i < 20 && t <= currentTime; i++) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":3091:3104  uint256 epoch */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3107:3132  _findEpochForTimestamp(t) */\n      tag_226\n        /* \"contracts/rewardsDistributor.sol\":3130:3131  t */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":3107:3129  _findEpochForTimestamp */\n      tag_227\n        /* \"contracts/rewardsDistributor.sol\":3107:3132  _findEpochForTimestamp(t) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/rewardsDistributor.sol\":3175:3201  veSix.point_history(epoch) */\n      mload(0x40)\n      shl(0xe0, 0xd1febfb9)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":3091:3132  uint256 epoch = _findEpochForTimestamp(t) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3147:3172  IVeSix.Point memory point */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":3175:3180  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n        /* \"contracts/rewardsDistributor.sol\":3175:3194  veSix.point_history */\n      and\n      swap1\n      0xd1febfb9\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":3175:3201  veSix.point_history(epoch) */\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/rewardsDistributor.sol\":3147:3201  IVeSix.Point memory point = veSix.point_history(epoch) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3230:3239  int128 dt */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3266:3271  point */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":3266:3274  point.ts */\n      0x40\n      add\n      mload\n        /* \"contracts/rewardsDistributor.sol\":3262:3263  t */\n      dup6\n        /* \"contracts/rewardsDistributor.sol\":3262:3274  t > point.ts */\n      gt\n        /* \"contracts/rewardsDistributor.sol\":3258:3344  if (t > point.ts) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":3318:3326  point.ts */\n      0x40\n      dup3\n      add\n      mload\n        /* \"contracts/rewardsDistributor.sol\":3314:3326  t - point.ts */\n      tag_234\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":3314:3315  t */\n      dup7\n        /* \"contracts/rewardsDistributor.sol\":3314:3326  t - point.ts */\n      tag_122\n      jump\t// in\n    tag_234:\n        /* \"contracts/rewardsDistributor.sol\":3295:3328  dt = int128(int256(t - point.ts)) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3258:3344  if (t > point.ts) {... */\n    tag_233:\n        /* \"contracts/rewardsDistributor.sol\":3372:3386  uint256 supply */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3431:3433  dt */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":3417:3422  point */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":3417:3428  point.slope */\n      0x20\n      add\n      mload\n        /* \"contracts/rewardsDistributor.sol\":3417:3433  point.slope * dt */\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"contracts/rewardsDistributor.sol\":3404:3414  point.bias */\n      dup4\n      mload\n        /* \"contracts/rewardsDistributor.sol\":3404:3433  point.bias - point.slope * dt */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/rewardsDistributor.sol\":3397:3434  int256(point.bias - point.slope * dt) */\n      0x0f\n      signextend\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3505:3521  veSupplyCache[t] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":3505:3518  veSupplyCache */\n      0x08\n        /* \"contracts/rewardsDistributor.sol\":3505:3521  veSupplyCache[t] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/rewardsDistributor.sol\":3505:3530  veSupplyCache[t] = supply */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/rewardsDistributor.sol\":3545:3554  t += WEEK */\n      tag_240\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":3519:3520  t */\n      dup8\n        /* \"contracts/rewardsDistributor.sol\":3545:3554  t += WEEK */\n      tag_153\n      jump\t// in\n    tag_240:\n      swap6\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3076:3566  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3071:3074  i++ */\n      dup1\n      dup1\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3023:3566  for (uint256 i = 0; i < 20 && t <= currentTime; i++) {... */\n      jump(tag_222)\n    tag_223:\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3586:3596  timeCursor */\n      0x04\n        /* \"contracts/rewardsDistributor.sol\":3586:3600  timeCursor = t */\n      sstore\n      pop\n        /* \"contracts/rewardsDistributor.sol\":2838:3608  function _updateVeSupply() internal {... */\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":4397:5397  function _calculateClaim(uint256 tokenId, uint256 maxTime) internal view returns (uint256) {... */\n    tag_114:\n        /* \"contracts/rewardsDistributor.sol\":4479:4486  uint256 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":4519:4538  tokenEpoch[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":4519:4529  tokenEpoch */\n      0x06\n        /* \"contracts/rewardsDistributor.sol\":4519:4538  tokenEpoch[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":4553:4567  userEpoch == 0 */\n      dup1\n      dup3\n      sub\n        /* \"contracts/rewardsDistributor.sol\":4549:4582  if (userEpoch == 0) userEpoch = 1 */\n      tag_244\n      jumpi\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4581:4582  1 */\n      0x01\n        /* \"contracts/rewardsDistributor.sol\":4549:4582  if (userEpoch == 0) userEpoch = 1 */\n    tag_244:\n        /* \"contracts/rewardsDistributor.sol\":4603:4621  uint256 weekCursor */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":4624:4648  tokenTimeCursor[tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":4624:4639  tokenTimeCursor */\n      0x05\n        /* \"contracts/rewardsDistributor.sol\":4624:4648  tokenTimeCursor[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":4663:4678  weekCursor == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/rewardsDistributor.sol\":4659:4852  if (weekCursor == 0) {... */\n      tag_245\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":4727:4771  veSix.user_point_history(tokenId, userEpoch) */\n      mload(0x40)\n      shl(0xe1, 0x09bb79ed)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4569:4594   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":4610:4628   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4603:4637   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":4695:4724  IVeSix.Point memory userPoint */\n      0x00\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":4727:4732  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":4727:4751  veSix.user_point_history */\n      and\n      swap1\n      0x1376f3da\n      swap1\n        /* \"#utility.yul\":4542:4560   */\n      0x44\n      add\n        /* \"contracts/rewardsDistributor.sol\":4727:4771  veSix.user_point_history(tokenId, userEpoch) */\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_249:\n        /* \"contracts/rewardsDistributor.sol\":4695:4771  IVeSix.Point memory userPoint = veSix.user_point_history(tokenId, userEpoch) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":4823:4824  1 */\n      0x01\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":4801:4810  userPoint */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":4801:4813  userPoint.ts */\n      0x40\n      add\n      mload\n        /* \"contracts/rewardsDistributor.sol\":4801:4820  userPoint.ts + WEEK */\n      tag_250\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_250:\n        /* \"contracts/rewardsDistributor.sol\":4801:4824  userPoint.ts + WEEK - 1 */\n      tag_251\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_251:\n        /* \"contracts/rewardsDistributor.sol\":4800:4832  (userPoint.ts + WEEK - 1) / WEEK */\n      tag_252\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_252:\n        /* \"contracts/rewardsDistributor.sol\":4799:4840  ((userPoint.ts + WEEK - 1) / WEEK) * WEEK */\n      tag_253\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_253:\n        /* \"contracts/rewardsDistributor.sol\":4786:4840  weekCursor = ((userPoint.ts + WEEK - 1) / WEEK) * WEEK */\n      swap2\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4680:4852  {... */\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4659:4852  if (weekCursor == 0) {... */\n    tag_245:\n        /* \"contracts/rewardsDistributor.sol\":4872:4892  uint256 toDistribute */\n      0x00\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":4913:5350  for (uint256 i = 0; i < 50 && weekCursor <= maxTime; i++) {... */\n    tag_254:\n        /* \"contracts/rewardsDistributor.sol\":4937:4939  50 */\n      0x32\n        /* \"contracts/rewardsDistributor.sol\":4933:4934  i */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":4933:4939  i < 50 */\n      lt\n        /* \"contracts/rewardsDistributor.sol\":4933:4964  i < 50 && weekCursor <= maxTime */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4957:4964  maxTime */\n      dup6\n        /* \"contracts/rewardsDistributor.sol\":4943:4953  weekCursor */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":4943:4964  weekCursor <= maxTime */\n      gt\n      iszero\n        /* \"contracts/rewardsDistributor.sol\":4933:4964  i < 50 && weekCursor <= maxTime */\n    tag_257:\n        /* \"contracts/rewardsDistributor.sol\":4913:5350  for (uint256 i = 0; i < 50 && weekCursor <= maxTime; i++) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":5004:5045  veSix.balanceOfNFTAt(tokenId, weekCursor) */\n      mload(0x40)\n      shl(0xe1, 0x7028a55d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4569:4594   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":4610:4628   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4603:4637   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":4986:5001  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":5004:5009  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":5004:5024  veSix.balanceOfNFTAt */\n      and\n      swap1\n      0xe0514aba\n      swap1\n        /* \"#utility.yul\":4542:4560   */\n      0x44\n      add\n        /* \"contracts/rewardsDistributor.sol\":5004:5045  veSix.balanceOfNFTAt(tokenId, weekCursor) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_261:\n        /* \"contracts/rewardsDistributor.sol\":5060:5074  uint256 supply */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":5077:5102  veSupplyCache[weekCursor] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5077:5090  veSupplyCache */\n      0x08\n        /* \"contracts/rewardsDistributor.sol\":5077:5102  veSupplyCache[weekCursor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":4986:5045  uint256 balance = veSix.balanceOfNFTAt(tokenId, weekCursor) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5135:5146  balance > 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":5135:5160  balance > 0 && supply > 0 */\n      tag_262\n      jumpi\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5159:5160  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":5150:5156  supply */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":5150:5160  supply > 0 */\n      gt\n        /* \"contracts/rewardsDistributor.sol\":5135:5160  balance > 0 && supply > 0 */\n    tag_262:\n        /* \"contracts/rewardsDistributor.sol\":5135:5193  balance > 0 && supply > 0 && weeklyRewards[weekCursor] > 0 */\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5192:5193  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":5164:5189  weeklyRewards[weekCursor] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5164:5177  weeklyRewards */\n      0x07\n        /* \"contracts/rewardsDistributor.sol\":5164:5189  weeklyRewards[weekCursor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":5164:5193  weeklyRewards[weekCursor] > 0 */\n      iszero\n      iszero\n        /* \"contracts/rewardsDistributor.sol\":5135:5193  balance > 0 && supply > 0 && weeklyRewards[weekCursor] > 0 */\n    tag_263:\n        /* \"contracts/rewardsDistributor.sol\":5131:5292  if (balance > 0 && supply > 0 && weeklyRewards[weekCursor] > 0) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":5241:5266  weeklyRewards[weekCursor] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":5241:5254  weeklyRewards */\n      0x07\n        /* \"contracts/rewardsDistributor.sol\":5241:5266  weeklyRewards[weekCursor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/rewardsDistributor.sol\":5270:5276  supply */\n      dup2\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":5231:5266  balance * weeklyRewards[weekCursor] */\n      tag_265\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":5231:5238  balance */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":5231:5266  balance * weeklyRewards[weekCursor] */\n      tag_96\n      jump\t// in\n    tag_265:\n        /* \"contracts/rewardsDistributor.sol\":5230:5276  (balance * weeklyRewards[weekCursor]) / supply */\n      tag_266\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_266:\n        /* \"contracts/rewardsDistributor.sol\":5214:5276  toDistribute += (balance * weeklyRewards[weekCursor]) / supply */\n      tag_267\n      swap1\n      dup6\n      tag_153\n      jump\t// in\n    tag_267:\n      swap4\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5131:5292  if (balance > 0 && supply > 0 && weeklyRewards[weekCursor] > 0) {... */\n    tag_264:\n        /* \"contracts/rewardsDistributor.sol\":5320:5338  weekCursor += WEEK */\n      tag_268\n        /* \"contracts/rewardsDistributor.sol\":759:765  7 days */\n      0x093a80\n        /* \"contracts/rewardsDistributor.sol\":5320:5338  weekCursor += WEEK */\n      dup7\n      tag_153\n      jump\t// in\n    tag_268:\n      swap5\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4971:5350  {... */\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4966:4969  i++ */\n      dup1\n      dup1\n      tag_269\n      swap1\n      tag_242\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4913:5350  for (uint256 i = 0; i < 50 && weekCursor <= maxTime; i++) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"contracts/rewardsDistributor.sol\":5377:5389  toDistribute */\n      swap6\n        /* \"contracts/rewardsDistributor.sol\":4397:5397  function _calculateClaim(uint256 tokenId, uint256 maxTime) internal view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2948:2980   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2930:2981   */\n      mstore\n        /* \"#utility.yul\":2997:3015   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2990:3024   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2903:2921   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_271\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":527:578   */\n      mstore\n        /* \"#utility.yul\":500:518   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_210\n        /* \"#utility.yul\":381:584   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/rewardsDistributor.sol\":3616:4186  function _findEpochForTimestamp(uint256 timestamp) internal view returns (uint256) {... */\n    tag_227:\n        /* \"contracts/rewardsDistributor.sol\":3690:3697  uint256 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3710:3721  uint256 min */\n      dup1\n        /* \"contracts/rewardsDistributor.sol\":3724:3725  0 */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3710:3725  uint256 min = 0 */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3736:3747  uint256 max */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3750:3755  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":3750:3761  veSix.epoch */\n      and\n      0x900cf0cf\n        /* \"contracts/rewardsDistributor.sol\":3750:3763  veSix.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_286:\n        /* \"contracts/rewardsDistributor.sol\":3736:3763  uint256 max = veSix.epoch() */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3789:3798  uint256 i */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3784:4148  for (uint256 i = 0; i < 128; i++) {... */\n    tag_287:\n        /* \"contracts/rewardsDistributor.sol\":3808:3811  128 */\n      0x80\n        /* \"contracts/rewardsDistributor.sol\":3804:3805  i */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":3804:3811  i < 128 */\n      lt\n        /* \"contracts/rewardsDistributor.sol\":3784:4148  for (uint256 i = 0; i < 128; i++) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":3844:3847  max */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":3837:3840  min */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":3837:3847  min >= max */\n      lt\n        /* \"contracts/rewardsDistributor.sol\":3833:3854  if (min >= max) break */\n      iszero\n        /* \"contracts/rewardsDistributor.sol\":3849:3854  break */\n      tag_288\n        /* \"contracts/rewardsDistributor.sol\":3833:3854  if (min >= max) break */\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":3883:3894  uint256 mid */\n      0x00\n        /* \"contracts/rewardsDistributor.sol\":3915:3916  2 */\n      0x02\n        /* \"contracts/rewardsDistributor.sol\":3898:3907  min + max */\n      tag_291\n        /* \"contracts/rewardsDistributor.sol\":3904:3907  max */\n      dup5\n        /* \"contracts/rewardsDistributor.sol\":3898:3901  min */\n      dup7\n        /* \"contracts/rewardsDistributor.sol\":3898:3907  min + max */\n      tag_153\n      jump\t// in\n    tag_291:\n        /* \"contracts/rewardsDistributor.sol\":3898:3911  min + max + 2 */\n      tag_292\n      swap1\n        /* \"contracts/rewardsDistributor.sol\":3910:3911  2 */\n      0x02\n        /* \"contracts/rewardsDistributor.sol\":3898:3911  min + max + 2 */\n      tag_153\n      jump\t// in\n    tag_292:\n        /* \"contracts/rewardsDistributor.sol\":3897:3916  (min + max + 2) / 2 */\n      tag_293\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_293:\n        /* \"contracts/rewardsDistributor.sol\":3959:3983  veSix.point_history(mid) */\n      mload(0x40)\n      shl(0xe0, 0xd1febfb9)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/rewardsDistributor.sol\":3883:3916  uint256 mid = (min + max + 2) / 2 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3931:3956  IVeSix.Point memory point */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/rewardsDistributor.sol\":3959:3964  veSix */\n      immutable(\"0xaaab56abb195b1bec63d541c2b63fa6fa7d6a00ed6a3f98e56354ff75745157a\")\n        /* \"contracts/rewardsDistributor.sol\":3959:3978  veSix.point_history */\n      and\n      swap1\n      0xd1febfb9\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/rewardsDistributor.sol\":3959:3983  veSix.point_history(mid) */\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_297:\n        /* \"contracts/rewardsDistributor.sol\":3931:3983  IVeSix.Point memory point = veSix.point_history(mid) */\n      swap1\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4028:4037  timestamp */\n      dup7\n        /* \"contracts/rewardsDistributor.sol\":4016:4021  point */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":4016:4024  point.ts */\n      0x40\n      add\n      mload\n        /* \"contracts/rewardsDistributor.sol\":4016:4037  point.ts <= timestamp */\n      gt\n        /* \"contracts/rewardsDistributor.sol\":4012:4137  if (point.ts <= timestamp) {... */\n      tag_298\n      jumpi\n        /* \"contracts/rewardsDistributor.sol\":4064:4067  mid */\n      dup2\n        /* \"contracts/rewardsDistributor.sol\":4058:4067  min = mid */\n      swap5\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4012:4137  if (point.ts <= timestamp) {... */\n      jump(tag_299)\n    tag_298:\n        /* \"contracts/rewardsDistributor.sol\":4114:4121  mid - 1 */\n      tag_300\n        /* \"contracts/rewardsDistributor.sol\":4120:4121  1 */\n      0x01\n        /* \"contracts/rewardsDistributor.sol\":4114:4117  mid */\n      dup4\n        /* \"contracts/rewardsDistributor.sol\":4114:4121  mid - 1 */\n      tag_122\n      jump\t// in\n    tag_300:\n        /* \"contracts/rewardsDistributor.sol\":4108:4121  max = mid - 1 */\n      swap4\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4012:4137  if (point.ts <= timestamp) {... */\n    tag_299:\n      pop\n      pop\n        /* \"contracts/rewardsDistributor.sol\":3813:3816  i++ */\n      0x01\n      add\n        /* \"contracts/rewardsDistributor.sol\":3784:4148  for (uint256 i = 0; i < 128; i++) {... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"contracts/rewardsDistributor.sol\":4175:4178  min */\n      swap1\n      swap4\n        /* \"contracts/rewardsDistributor.sol\":3616:4186  function _findEpochForTimestamp(uint256 timestamp) internal view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_302:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_304)\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":545:577   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":527:578   */\n      mstore\n        /* \"#utility.yul\":500:518   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      tag_210\n        /* \"#utility.yul\":381:584   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_30:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:1199   */\n    tag_49:\n        /* \"#utility.yul\":675:681   */\n      0x00\n        /* \"#utility.yul\":683:689   */\n      dup1\n        /* \"#utility.yul\":736:738   */\n      0x20\n        /* \"#utility.yul\":724:733   */\n      dup4\n        /* \"#utility.yul\":715:722   */\n      dup6\n        /* \"#utility.yul\":711:734   */\n      sub\n        /* \"#utility.yul\":707:739   */\n      slt\n        /* \"#utility.yul\":704:756   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":752:753   */\n      0x00\n        /* \"#utility.yul\":749:750   */\n      dup1\n        /* \"#utility.yul\":742:754   */\n      revert\n        /* \"#utility.yul\":704:756   */\n    tag_317:\n        /* \"#utility.yul\":792:801   */\n      dup3\n        /* \"#utility.yul\":779:802   */\n      calldataload\n        /* \"#utility.yul\":825:843   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":817:823   */\n      dup2\n        /* \"#utility.yul\":814:844   */\n      gt\n        /* \"#utility.yul\":811:861   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":857:858   */\n      0x00\n        /* \"#utility.yul\":854:855   */\n      dup1\n        /* \"#utility.yul\":847:859   */\n      revert\n        /* \"#utility.yul\":811:861   */\n    tag_318:\n        /* \"#utility.yul\":880:902   */\n      dup4\n      add\n        /* \"#utility.yul\":933:937   */\n      0x1f\n        /* \"#utility.yul\":925:938   */\n      dup2\n      add\n        /* \"#utility.yul\":921:948   */\n      dup6\n      sgt\n        /* \"#utility.yul\":911:966   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":962:963   */\n      0x00\n        /* \"#utility.yul\":959:960   */\n      dup1\n        /* \"#utility.yul\":952:964   */\n      revert\n        /* \"#utility.yul\":911:966   */\n    tag_319:\n        /* \"#utility.yul\":1002:1004   */\n      dup1\n        /* \"#utility.yul\":989:1005   */\n      calldataload\n        /* \"#utility.yul\":1028:1046   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1020:1026   */\n      dup2\n        /* \"#utility.yul\":1017:1047   */\n      gt\n        /* \"#utility.yul\":1014:1064   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1060:1061   */\n      0x00\n        /* \"#utility.yul\":1057:1058   */\n      dup1\n        /* \"#utility.yul\":1050:1062   */\n      revert\n        /* \"#utility.yul\":1014:1064   */\n    tag_320:\n        /* \"#utility.yul\":1113:1120   */\n      dup6\n        /* \"#utility.yul\":1108:1110   */\n      0x20\n        /* \"#utility.yul\":1098:1104   */\n      dup3\n        /* \"#utility.yul\":1095:1096   */\n      0x05\n        /* \"#utility.yul\":1091:1105   */\n      shl\n        /* \"#utility.yul\":1087:1089   */\n      dup5\n        /* \"#utility.yul\":1083:1106   */\n      add\n        /* \"#utility.yul\":1079:1111   */\n      add\n        /* \"#utility.yul\":1076:1121   */\n      gt\n        /* \"#utility.yul\":1073:1138   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1134:1135   */\n      0x00\n        /* \"#utility.yul\":1131:1132   */\n      dup1\n        /* \"#utility.yul\":1124:1136   */\n      revert\n        /* \"#utility.yul\":1073:1138   */\n    tag_321:\n        /* \"#utility.yul\":1165:1167   */\n      0x20\n        /* \"#utility.yul\":1157:1168   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1187:1193   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":589:1199   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1841:1972   */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1916:1947   */\n      dup2\n      and\n        /* \"#utility.yul\":1906:1948   */\n      dup2\n      eq\n        /* \"#utility.yul\":1896:1966   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1959:1960   */\n      dup1\n        /* \"#utility.yul\":1952:1964   */\n      revert\n        /* \"#utility.yul\":1977:2224   */\n    tag_86:\n        /* \"#utility.yul\":2036:2042   */\n      0x00\n        /* \"#utility.yul\":2089:2091   */\n      0x20\n        /* \"#utility.yul\":2077:2086   */\n      dup3\n        /* \"#utility.yul\":2068:2075   */\n      dup5\n        /* \"#utility.yul\":2064:2087   */\n      sub\n        /* \"#utility.yul\":2060:2092   */\n      slt\n        /* \"#utility.yul\":2057:2109   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2105:2106   */\n      0x00\n        /* \"#utility.yul\":2102:2103   */\n      dup1\n        /* \"#utility.yul\":2095:2107   */\n      revert\n        /* \"#utility.yul\":2057:2109   */\n    tag_328:\n        /* \"#utility.yul\":2144:2153   */\n      dup2\n        /* \"#utility.yul\":2131:2154   */\n      calldataload\n        /* \"#utility.yul\":2163:2194   */\n      tag_202\n        /* \"#utility.yul\":2188:2193   */\n      dup2\n        /* \"#utility.yul\":2163:2194   */\n      tag_308\n      jump\t// in\n        /* \"#utility.yul\":2229:2356   */\n    tag_309:\n        /* \"#utility.yul\":2290:2300   */\n      0x4e487b71\n        /* \"#utility.yul\":2285:2288   */\n      0xe0\n        /* \"#utility.yul\":2281:2301   */\n      shl\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2271:2302   */\n      mstore\n        /* \"#utility.yul\":2321:2325   */\n      0x11\n        /* \"#utility.yul\":2318:2319   */\n      0x04\n        /* \"#utility.yul\":2311:2326   */\n      mstore\n        /* \"#utility.yul\":2345:2349   */\n      0x24\n        /* \"#utility.yul\":2342:2343   */\n      0x00\n        /* \"#utility.yul\":2335:2350   */\n      revert\n        /* \"#utility.yul\":2361:2578   */\n    tag_94:\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2427:2428   */\n      dup3\n        /* \"#utility.yul\":2417:2549   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2471:2481   */\n      0x4e487b71\n        /* \"#utility.yul\":2466:2469   */\n      0xe0\n        /* \"#utility.yul\":2462:2482   */\n      shl\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2452:2483   */\n      mstore\n        /* \"#utility.yul\":2506:2510   */\n      0x12\n        /* \"#utility.yul\":2503:2504   */\n      0x04\n        /* \"#utility.yul\":2496:2511   */\n      mstore\n        /* \"#utility.yul\":2534:2538   */\n      0x24\n        /* \"#utility.yul\":2531:2532   */\n      0x00\n        /* \"#utility.yul\":2524:2539   */\n      revert\n        /* \"#utility.yul\":2417:2549   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":2563:2572   */\n      div\n      swap1\n        /* \"#utility.yul\":2361:2578   */\n      jump\t// out\n        /* \"#utility.yul\":2583:2751   */\n    tag_96:\n        /* \"#utility.yul\":2656:2665   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2687:2696   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2704:2719   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2698:2720   */\n      dup5\n      eq\n        /* \"#utility.yul\":2684:2721   */\n      or\n        /* \"#utility.yul\":2674:2745   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2725:2743   */\n      tag_198\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":3035:3312   */\n    tag_106:\n        /* \"#utility.yul\":3102:3108   */\n      0x00\n        /* \"#utility.yul\":3155:3157   */\n      0x20\n        /* \"#utility.yul\":3143:3152   */\n      dup3\n        /* \"#utility.yul\":3134:3141   */\n      dup5\n        /* \"#utility.yul\":3130:3153   */\n      sub\n        /* \"#utility.yul\":3126:3158   */\n      slt\n        /* \"#utility.yul\":3123:3175   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3168:3169   */\n      dup1\n        /* \"#utility.yul\":3161:3173   */\n      revert\n        /* \"#utility.yul\":3123:3175   */\n    tag_338:\n        /* \"#utility.yul\":3203:3212   */\n      dup2\n        /* \"#utility.yul\":3197:3213   */\n      mload\n        /* \"#utility.yul\":3256:3261   */\n      dup1\n        /* \"#utility.yul\":3249:3262   */\n      iszero\n        /* \"#utility.yul\":3242:3263   */\n      iszero\n        /* \"#utility.yul\":3235:3240   */\n      dup2\n        /* \"#utility.yul\":3232:3264   */\n      eq\n        /* \"#utility.yul\":3222:3282   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":3278:3279   */\n      0x00\n        /* \"#utility.yul\":3275:3276   */\n      dup1\n        /* \"#utility.yul\":3268:3280   */\n      revert\n        /* \"#utility.yul\":3317:3547   */\n    tag_120:\n        /* \"#utility.yul\":3387:3393   */\n      0x00\n        /* \"#utility.yul\":3440:3442   */\n      0x20\n        /* \"#utility.yul\":3428:3437   */\n      dup3\n        /* \"#utility.yul\":3419:3426   */\n      dup5\n        /* \"#utility.yul\":3415:3438   */\n      sub\n        /* \"#utility.yul\":3411:3443   */\n      slt\n        /* \"#utility.yul\":3408:3460   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3456:3457   */\n      0x00\n        /* \"#utility.yul\":3453:3454   */\n      dup1\n        /* \"#utility.yul\":3446:3458   */\n      revert\n        /* \"#utility.yul\":3408:3460   */\n    tag_341:\n      pop\n        /* \"#utility.yul\":3501:3517   */\n      mload\n      swap2\n        /* \"#utility.yul\":3317:3547   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3552:3680   */\n    tag_122:\n        /* \"#utility.yul\":3619:3628   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3640:3651   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3637:3674   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3654:3672   */\n      tag_198\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":3685:3936   */\n    tag_127:\n        /* \"#utility.yul\":3755:3761   */\n      0x00\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"#utility.yul\":3796:3805   */\n      dup3\n        /* \"#utility.yul\":3787:3794   */\n      dup5\n        /* \"#utility.yul\":3783:3806   */\n      sub\n        /* \"#utility.yul\":3779:3811   */\n      slt\n        /* \"#utility.yul\":3776:3828   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3824:3825   */\n      0x00\n        /* \"#utility.yul\":3821:3822   */\n      dup1\n        /* \"#utility.yul\":3814:3826   */\n      revert\n        /* \"#utility.yul\":3776:3828   */\n    tag_346:\n        /* \"#utility.yul\":3856:3865   */\n      dup2\n        /* \"#utility.yul\":3850:3866   */\n      mload\n        /* \"#utility.yul\":3875:3906   */\n      tag_202\n        /* \"#utility.yul\":3900:3905   */\n      dup2\n        /* \"#utility.yul\":3875:3906   */\n      tag_308\n      jump\t// in\n        /* \"#utility.yul\":4265:4390   */\n    tag_153:\n        /* \"#utility.yul\":4330:4339   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4351:4361   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4348:4384   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4364:4382   */\n      tag_198\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":4648:4775   */\n    tag_182:\n        /* \"#utility.yul\":4709:4719   */\n      0x4e487b71\n        /* \"#utility.yul\":4704:4707   */\n      0xe0\n        /* \"#utility.yul\":4700:4720   */\n      shl\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4690:4721   */\n      mstore\n        /* \"#utility.yul\":4740:4744   */\n      0x32\n        /* \"#utility.yul\":4737:4738   */\n      0x04\n        /* \"#utility.yul\":4730:4745   */\n      mstore\n        /* \"#utility.yul\":4764:4768   */\n      0x24\n        /* \"#utility.yul\":4761:4762   */\n      0x00\n        /* \"#utility.yul\":4754:4769   */\n      revert\n        /* \"#utility.yul\":5140:5306   */\n    tag_310:\n        /* \"#utility.yul\":5218:5231   */\n      dup1\n      mload\n        /* \"#utility.yul\":5271:5273   */\n      0x0f\n        /* \"#utility.yul\":5260:5281   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":5250:5282   */\n      dup2\n      eq\n        /* \"#utility.yul\":5240:5300   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":5296:5297   */\n      0x00\n        /* \"#utility.yul\":5293:5294   */\n      dup1\n        /* \"#utility.yul\":5286:5298   */\n      revert\n        /* \"#utility.yul\":5311:6212   */\n    tag_232:\n        /* \"#utility.yul\":5404:5410   */\n      0x00\n        /* \"#utility.yul\":5464:5467   */\n      0x80\n        /* \"#utility.yul\":5452:5461   */\n      dup3\n        /* \"#utility.yul\":5443:5450   */\n      dup5\n        /* \"#utility.yul\":5439:5462   */\n      sub\n        /* \"#utility.yul\":5435:5468   */\n      slt\n        /* \"#utility.yul\":5480:5482   */\n      dup1\n        /* \"#utility.yul\":5477:5499   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5495:5496   */\n      0x00\n        /* \"#utility.yul\":5492:5493   */\n      dup1\n        /* \"#utility.yul\":5485:5497   */\n      revert\n        /* \"#utility.yul\":5477:5499   */\n    tag_358:\n        /* \"#utility.yul\":5514:5515   */\n      0x00\n        /* \"#utility.yul\":5508:5515   */\n      swap1\n      pop\n        /* \"#utility.yul\":5544:5546   */\n      0x40\n        /* \"#utility.yul\":5538:5547   */\n      mload\n        /* \"#utility.yul\":5586:5589   */\n      0x80\n        /* \"#utility.yul\":5578:5584   */\n      dup2\n        /* \"#utility.yul\":5574:5590   */\n      add\n        /* \"#utility.yul\":5656:5662   */\n      dup2\n        /* \"#utility.yul\":5644:5654   */\n      dup2\n        /* \"#utility.yul\":5641:5663   */\n      lt\n        /* \"#utility.yul\":5620:5638   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5608:5618   */\n      dup3\n        /* \"#utility.yul\":5605:5639   */\n      gt\n        /* \"#utility.yul\":5602:5664   */\n      or\n        /* \"#utility.yul\":5599:5786   */\n      iszero\n      tag_359\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5687:5719   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5742:5746   */\n      0x41\n        /* \"#utility.yul\":5739:5740   */\n      0x04\n        /* \"#utility.yul\":5732:5747   */\n      mstore\n        /* \"#utility.yul\":5771:5775   */\n      0x24\n        /* \"#utility.yul\":5694:5696   */\n      dup4\n        /* \"#utility.yul\":5760:5776   */\n      revert\n        /* \"#utility.yul\":5599:5786   */\n    tag_359:\n        /* \"#utility.yul\":5802:5804   */\n      0x40\n        /* \"#utility.yul\":5795:5817   */\n      mstore\n        /* \"#utility.yul\":5841:5880   */\n      tag_360\n        /* \"#utility.yul\":5870:5879   */\n      dup5\n        /* \"#utility.yul\":5841:5880   */\n      tag_310\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5833:5839   */\n      dup2\n        /* \"#utility.yul\":5826:5881   */\n      mstore\n        /* \"#utility.yul\":5914:5962   */\n      tag_361\n        /* \"#utility.yul\":5958:5960   */\n      0x20\n        /* \"#utility.yul\":5947:5956   */\n      dup6\n        /* \"#utility.yul\":5943:5961   */\n      add\n        /* \"#utility.yul\":5914:5962   */\n      tag_310\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5909:5911   */\n      0x20\n        /* \"#utility.yul\":5897:5912   */\n      dup3\n      add\n        /* \"#utility.yul\":5890:5963   */\n      mstore\n        /* \"#utility.yul\":6026:6028   */\n      0x40\n        /* \"#utility.yul\":6011:6029   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":6005:6030   */\n      mload\n        /* \"#utility.yul\":6046:6061   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6039:6069   */\n      mstore\n        /* \"#utility.yul\":6136:6138   */\n      0x60\n        /* \"#utility.yul\":6121:6139   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":6115:6140   */\n      mload\n        /* \"#utility.yul\":6156:6171   */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":6149:6181   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":5901:5907   */\n      swap1\n      swap3\n        /* \"#utility.yul\":5311:6212   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6458   */\n    tag_236:\n        /* \"#utility.yul\":6256:6263   */\n      0x00\n        /* \"#utility.yul\":6335:6336   */\n      dup3\n        /* \"#utility.yul\":6331:6333   */\n      0x0f\n        /* \"#utility.yul\":6320:6337   */\n      signextend\n        /* \"#utility.yul\":6316:6317   */\n      dup3\n        /* \"#utility.yul\":6312:6314   */\n      0x0f\n        /* \"#utility.yul\":6301:6318   */\n      signextend\n        /* \"#utility.yul\":6297:6338   */\n      mul\n        /* \"#utility.yul\":6373:6384   */\n      dup1\n        /* \"#utility.yul\":6369:6371   */\n      0x0f\n        /* \"#utility.yul\":6358:6385   */\n      signextend\n        /* \"#utility.yul\":6347:6385   */\n      swap2\n      pop\n        /* \"#utility.yul\":6416:6427   */\n      dup1\n        /* \"#utility.yul\":6407:6414   */\n      dup3\n        /* \"#utility.yul\":6404:6428   */\n      eq\n        /* \"#utility.yul\":6394:6452   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":6432:6450   */\n      tag_364\n      tag_309\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6394:6452   */\n      pop\n        /* \"#utility.yul\":6217:6458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6712   */\n    tag_238:\n        /* \"#utility.yul\":6563:6565   */\n      0x0f\n        /* \"#utility.yul\":6552:6569   */\n      dup3\n      dup2\n      signextend\n        /* \"#utility.yul\":6533:6550   */\n      swap1\n      dup3\n      swap1\n      signextend\n        /* \"#utility.yul\":6529:6570   */\n      sub\n      not(0x7fffffffffffffffffffffffffffffff)\n        /* \"#utility.yul\":6585:6635   */\n      dup2\n      slt\n        /* \"#utility.yul\":6647:6681   */\n      0x7fffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6637:6682   */\n      dup3\n      sgt\n        /* \"#utility.yul\":6582:6683   */\n      or\n        /* \"#utility.yul\":6579:6706   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":6686:6704   */\n      tag_198\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":6717:6852   */\n    tag_242:\n        /* \"#utility.yul\":6756:6759   */\n      0x00\n        /* \"#utility.yul\":6777:6794   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6774:6817   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6797:6815   */\n      tag_370\n      tag_309\n      jump\t// in\n    tag_370:\n      pop\n        /* \"#utility.yul\":6844:6845   */\n      0x01\n        /* \"#utility.yul\":6833:6846   */\n      add\n      swap1\n        /* \"#utility.yul\":6717:6852   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205eac481c53f47676afc425a1b96a5e54985d4eab7cb3cb92dcba9e140abfa79a64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1329": {
									"entryPoint": null,
									"id": 1329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 222,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1191:13",
										"nodeType": "YulBlock",
										"src": "0:1191:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:13",
													"nodeType": "YulBlock",
													"src": "74:117:13",
													"statements": [
														{
															"nativeSrc": "84:22:13",
															"nodeType": "YulAssignment",
															"src": "84:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:13"
																},
																"nativeSrc": "93:13:13",
																"nodeType": "YulFunctionCall",
																"src": "93:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:13",
																"nodeType": "YulBlock",
																"src": "169:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:13",
																					"nodeType": "YulLiteral",
																					"src": "178:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:13",
																					"nodeType": "YulLiteral",
																					"src": "181:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:13"
																			},
																			"nativeSrc": "171:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:13"
																		},
																		"nativeSrc": "171:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:13",
																										"nodeType": "YulLiteral",
																										"src": "154:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:13",
																										"nodeType": "YulLiteral",
																										"src": "159:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:13"
																								},
																								"nativeSrc": "150:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:13",
																								"nodeType": "YulLiteral",
																								"src": "163:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:13"
																						},
																						"nativeSrc": "146:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:13"
																				},
																				"nativeSrc": "135:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:13"
																		},
																		"nativeSrc": "125:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:13"
																},
																"nativeSrc": "118:50:13",
																"nodeType": "YulFunctionCall",
																"src": "118:50:13"
															},
															"nativeSrc": "115:70:13",
															"nodeType": "YulIf",
															"src": "115:70:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:13",
														"nodeType": "YulTypedName",
														"src": "53:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:13",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nativeSrc": "294:195:13",
													"nodeType": "YulBlock",
													"src": "294:195:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:13",
																"nodeType": "YulBlock",
																"src": "340:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:13",
																					"nodeType": "YulLiteral",
																					"src": "349:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:13",
																					"nodeType": "YulLiteral",
																					"src": "352:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:13"
																			},
																			"nativeSrc": "342:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:13"
																		},
																		"nativeSrc": "342:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:13"
																		},
																		"nativeSrc": "311:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:13",
																		"nodeType": "YulLiteral",
																		"src": "336:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:13"
																},
																"nativeSrc": "307:32:13",
																"nodeType": "YulFunctionCall",
																"src": "307:32:13"
															},
															"nativeSrc": "304:52:13",
															"nodeType": "YulIf",
															"src": "304:52:13"
														},
														{
															"nativeSrc": "365:50:13",
															"nodeType": "YulAssignment",
															"src": "365:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:13"
																},
																"nativeSrc": "375:40:13",
																"nodeType": "YulFunctionCall",
																"src": "375:40:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:13"
																}
															]
														},
														{
															"nativeSrc": "424:59:13",
															"nodeType": "YulAssignment",
															"src": "424:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:13",
																				"nodeType": "YulLiteral",
																				"src": "479:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:13"
																		},
																		"nativeSrc": "464:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:13"
																},
																"nativeSrc": "434:49:13",
																"nodeType": "YulFunctionCall",
																"src": "434:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:13",
														"nodeType": "YulTypedName",
														"src": "252:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:13",
														"nodeType": "YulTypedName",
														"src": "263:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:13",
														"nodeType": "YulTypedName",
														"src": "275:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:13",
														"nodeType": "YulTypedName",
														"src": "283:6:13",
														"type": ""
													}
												],
												"src": "196:293:13"
											},
											{
												"body": {
													"nativeSrc": "595:102:13",
													"nodeType": "YulBlock",
													"src": "595:102:13",
													"statements": [
														{
															"nativeSrc": "605:26:13",
															"nodeType": "YulAssignment",
															"src": "605:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:13",
																		"nodeType": "YulLiteral",
																		"src": "628:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:13"
																},
																"nativeSrc": "613:18:13",
																"nodeType": "YulFunctionCall",
																"src": "613:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:13",
																								"nodeType": "YulLiteral",
																								"src": "678:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:13",
																								"nodeType": "YulLiteral",
																								"src": "683:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:13"
																						},
																						"nativeSrc": "674:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:13",
																						"nodeType": "YulLiteral",
																						"src": "687:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:13"
																				},
																				"nativeSrc": "670:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:13"
																		},
																		"nativeSrc": "658:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:13"
																},
																"nativeSrc": "640:51:13",
																"nodeType": "YulFunctionCall",
																"src": "640:51:13"
															},
															"nativeSrc": "640:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:13",
														"nodeType": "YulTypedName",
														"src": "564:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:13",
														"nodeType": "YulTypedName",
														"src": "586:4:13",
														"type": ""
													}
												],
												"src": "494:203:13"
											},
											{
												"body": {
													"nativeSrc": "748:171:13",
													"nodeType": "YulBlock",
													"src": "748:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "779:111:13",
																"nodeType": "YulBlock",
																"src": "779:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "800:1:13",
																					"nodeType": "YulLiteral",
																					"src": "800:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "807:3:13",
																							"nodeType": "YulLiteral",
																							"src": "807:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "812:10:13",
																							"nodeType": "YulLiteral",
																							"src": "812:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "803:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "803:3:13"
																					},
																					"nativeSrc": "803:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "803:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "793:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:13"
																			},
																			"nativeSrc": "793:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "793:31:13"
																		},
																		"nativeSrc": "793:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "793:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "844:1:13",
																					"nodeType": "YulLiteral",
																					"src": "844:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "847:4:13",
																					"nodeType": "YulLiteral",
																					"src": "847:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "837:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "837:6:13"
																			},
																			"nativeSrc": "837:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "837:15:13"
																		},
																		"nativeSrc": "837:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "837:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "872:1:13",
																					"nodeType": "YulLiteral",
																					"src": "872:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "875:4:13",
																					"nodeType": "YulLiteral",
																					"src": "875:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "865:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:13"
																			},
																			"nativeSrc": "865:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "865:15:13"
																		},
																		"nativeSrc": "865:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "865:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "768:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:13"
																},
																"nativeSrc": "761:9:13",
																"nodeType": "YulFunctionCall",
																"src": "761:9:13"
															},
															"nativeSrc": "758:132:13",
															"nodeType": "YulIf",
															"src": "758:132:13"
														},
														{
															"nativeSrc": "899:14:13",
															"nodeType": "YulAssignment",
															"src": "899:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "908:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "908:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "911:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "911:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "904:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "904:3:13"
																},
																"nativeSrc": "904:9:13",
																"nodeType": "YulFunctionCall",
																"src": "904:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "899:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "899:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "702:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "733:1:13",
														"nodeType": "YulTypedName",
														"src": "733:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "736:1:13",
														"nodeType": "YulTypedName",
														"src": "736:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "742:1:13",
														"nodeType": "YulTypedName",
														"src": "742:1:13",
														"type": ""
													}
												],
												"src": "702:217:13"
											},
											{
												"body": {
													"nativeSrc": "976:213:13",
													"nodeType": "YulBlock",
													"src": "976:213:13",
													"statements": [
														{
															"nativeSrc": "986:20:13",
															"nodeType": "YulAssignment",
															"src": "986:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1001:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1001:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1004:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1004:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "997:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "997:3:13"
																},
																"nativeSrc": "997:9:13",
																"nodeType": "YulFunctionCall",
																"src": "997:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "986:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "986:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1072:111:13",
																"nodeType": "YulBlock",
																"src": "1072:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1093:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1100:3:13",
																							"nodeType": "YulLiteral",
																							"src": "1100:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1105:10:13",
																							"nodeType": "YulLiteral",
																							"src": "1105:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1096:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1096:3:13"
																					},
																					"nativeSrc": "1096:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1096:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1086:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1086:6:13"
																			},
																			"nativeSrc": "1086:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:31:13"
																		},
																		"nativeSrc": "1086:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1086:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1137:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1137:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1140:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1140:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1130:6:13"
																			},
																			"nativeSrc": "1130:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1130:15:13"
																		},
																		"nativeSrc": "1130:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1130:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1165:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1168:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1168:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:13"
																			},
																			"nativeSrc": "1158:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1158:15:13"
																		},
																		"nativeSrc": "1158:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1035:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "1035:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1028:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1028:6:13"
																				},
																				"nativeSrc": "1028:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1028:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1042:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "1042:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1049:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "1049:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1058:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "1058:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1045:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1045:3:13"
																						},
																						"nativeSrc": "1045:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1045:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1039:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "1039:2:13"
																				},
																				"nativeSrc": "1039:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1039:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1025:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1025:2:13"
																		},
																		"nativeSrc": "1025:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1018:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:13"
																},
																"nativeSrc": "1018:45:13",
																"nodeType": "YulFunctionCall",
																"src": "1018:45:13"
															},
															"nativeSrc": "1015:168:13",
															"nodeType": "YulIf",
															"src": "1015:168:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "924:265:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "955:1:13",
														"nodeType": "YulTypedName",
														"src": "955:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "958:1:13",
														"nodeType": "YulTypedName",
														"src": "958:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "964:7:13",
														"nodeType": "YulTypedName",
														"src": "964:7:13",
														"type": ""
													}
												],
												"src": "924:265:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x171B CODESIZE SUB DUP1 PUSH2 0x171B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14A JUMP JUMPDEST CALLER DUP1 PUSH2 0x55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E DUP2 PUSH2 0xDE JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x80 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x9E JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x80 MSTORE DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x93A80 PUSH2 0xBF DUP2 TIMESTAMP PUSH2 0x17D JUMP JUMPDEST PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x19F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE POP PUSH2 0x1CA SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166 DUP4 PUSH2 0x12E JUMP JUMPDEST SWAP2 POP PUSH2 0x174 PUSH1 0x20 DUP5 ADD PUSH2 0x12E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x14D1 PUSH2 0x24A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x22A ADD MSTORE DUP2 DUP2 PUSH2 0x566 ADD MSTORE PUSH2 0x6A9 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1BA ADD MSTORE DUP2 DUP2 PUSH2 0x31B ADD MSTORE DUP2 DUP2 PUSH2 0x42F ADD MSTORE DUP2 DUP2 PUSH2 0x4E4 ADD MSTORE DUP2 DUP2 PUSH2 0x5E2 ADD MSTORE DUP2 DUP2 PUSH2 0x8A8 ADD MSTORE DUP2 DUP2 PUSH2 0xB1A ADD MSTORE DUP2 DUP2 PUSH2 0xBD2 ADD MSTORE DUP2 DUP2 PUSH2 0xD11 ADD MSTORE DUP2 DUP2 PUSH2 0xDFB ADD MSTORE DUP2 DUP2 PUSH2 0xFEC ADD MSTORE PUSH2 0x10C9 ADD MSTORE PUSH2 0x14D1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98A3F422 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1D58B25 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1D58B25 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xE6E00A8A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEEFF799A EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF6DD9E43 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98A3F422 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xAF364C05 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E97925 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8736659B EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x925489A8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x92815606 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69BF581 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x6F4A2CD0 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x123 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x17A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x93A80 PUSH2 0x2D6 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x3CD DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E5 DUP5 DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFEC21FD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH4 0x391044D7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE441135C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4C6 SWAP1 DUP5 SWAP1 PUSH2 0x132D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP PUSH2 0x58D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x391044D7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE DUP7 SWAP2 PUSH32 0x5CE397C9BB9806FE77F5C7C28202740F0805FC106A10F4D38821A4B65C768345 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE441135C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 POP POP PUSH2 0x678 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFEC21FD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x751 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93A80 PUSH1 0x3 SLOAD DUP4 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7AE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x7A3 SWAP1 DUP5 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x814 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP3 DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93A80 PUSH1 0x3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x811 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7F7 SWAP1 DUP5 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x80A SWAP1 POP PUSH3 0x93A80 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP PUSH2 0x7D2 JUMP JUMPDEST POP POP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x29E98BA00D07F171959C4DDCD2F3020DEBC7C52CF537A034D7E664340D098C6C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x871 PUSH2 0xAF5 JUMP JUMPDEST POP POP POP PUSH2 0x87D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x887 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x87D PUSH1 0x0 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9EA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x430C2081 CALLER DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x8E8 JUMPI PUSH2 0x8E8 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST ISZERO PUSH2 0x9E2 JUMPI ADDRESS PUSH4 0x379607F5 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x9E2 JUMPI POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x89E JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 DUP1 SSTORE JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x93A80 PUSH2 0xA09 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH2 0xA1F DUP4 DUP3 PUSH2 0xCC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP2 PUSH3 0x93A80 PUSH2 0xA39 DUP2 DUP7 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xF91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xB05 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2C4C5C1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT DUP1 ISZERO PUSH2 0xB9E JUMPI POP DUP3 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 PUSH2 0xBAE DUP4 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1FEBFB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD1FEBFB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD DUP6 GT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC5C SWAP1 DUP7 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST DUP4 MLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xCA0 PUSH3 0x93A80 DUP8 PUSH2 0x135D JUMP JUMPDEST SWAP6 POP POP POP POP POP DUP1 DUP1 PUSH2 0xCB1 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB8E JUMP JUMPDEST POP PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP3 SUB PUSH2 0xCDA JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BB79ED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1376F3DA SWAP1 PUSH1 0x44 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP PUSH3 0x93A80 DUP1 PUSH1 0x1 PUSH3 0x93A80 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xDA0 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x32 DUP2 LT DUP1 ISZERO PUSH2 0xDD6 JUMPI POP DUP6 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7028A55D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE0514ABA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE8F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0xEA8 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xEC8 SWAP1 DUP5 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xEDC SWAP1 DUP6 PUSH2 0x135D JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0xEEC PUSH3 0x93A80 DUP7 PUSH2 0x135D JUMP JUMPDEST SWAP5 POP POP POP DUP1 DUP1 PUSH2 0xEFB SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC6 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0x116A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1048 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106C SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP4 LT ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0x1090 DUP5 DUP7 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x109B SWAP1 PUSH1 0x2 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1FEBFB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD1FEBFB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1134 SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 PUSH1 0x40 ADD MLOAD GT PUSH2 0x1149 JUMPI DUP2 SWAP5 POP PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x1154 PUSH1 0x1 DUP4 PUSH2 0x132D JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1071 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x118D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x11A5 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA1F DUP2 PUSH2 0x1271 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA1F DUP2 PUSH2 0x1271 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x13EA DUP5 PUSH2 0x1386 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x13F8 PUSH1 0x20 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP5 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND DUP3 PUSH1 0xF SIGNEXTEND MUL DUP1 PUSH1 0xF SIGNEXTEND SWAP2 POP DUP1 DUP3 EQ PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x12A3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT OR ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1494 JUMPI PUSH2 0x1494 PUSH2 0x12A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xAC BASEFEE SHR MSTORE8 DELEGATECALL PUSH23 0x76AFC425A1B96A5E54985D4EAB7CB3CB92DCBA9E140ABF 0xA7 SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "413:6627:12:-:0;;;1438:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1497:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:13;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:4;1821:22;;-1:-1:-1;;;;;1524:20:12;::::1;::::0;;:51:::1;;-1:-1:-1::0;;;;;;1548:27:12;::::1;::::0;1524:51:::1;1520:80;;;1584:16;;-1:-1:-1::0;;;1584:16:12::1;;;;;;;;;;;1520:80;-1:-1:-1::0;;;;;1621:22:12;;::::1;;::::0;1654:36;::::1;;::::0;759:6:::1;1724:22;759:6:::0;1724:15:::1;:22;:::i;:::-;1723:31;;;;:::i;:::-;1711:9;:43:::0;;;1765:14:::1;:26:::0;;;1802:10:::1;:22:::0;-1:-1:-1;413:6627:12;;-1:-1:-1;413:6627:12;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:13:-;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:217::-;742:1;768;758:132;;812:10;807:3;803:20;800:1;793:31;847:4;844:1;837:15;875:4;872:1;865:15;758:132;-1:-1:-1;904:9:13;;702:217::o;924:265::-;997:9;;;1028;;1045:15;;;1039:22;;1025:37;1015:168;;1105:10;1100:3;1096:20;1093:1;1086:31;1140:4;1137:1;1130:15;1168:4;1165:1;1158:15;1015:168;924:265;;;;:::o;:::-;413:6627:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaim_1769": {
									"entryPoint": 3264,
									"id": 1769,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_749": {
									"entryPoint": 4458,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3940,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_findEpochForTimestamp_1620": {
									"entryPoint": 4065,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1062": {
									"entryPoint": null,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": null,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2716,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3985,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateVeSupply_1545": {
									"entryPoint": 2805,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimMany_1917": {
									"entryPoint": 2193,
									"id": 1917,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_1870": {
									"entryPoint": 757,
									"id": 1870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimable_1643": {
									"entryPoint": 2552,
									"id": 1643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@distributeRewards_1429": {
									"entryPoint": 1661,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentVeSupply_1954": {
									"entryPoint": 709,
									"id": 1954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWeeklyRewards_1934": {
									"entryPoint": 2598,
									"id": 1934,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastUpdateTime_1242": {
									"entryPoint": null,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2175,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1238": {
									"entryPoint": null,
									"id": 1238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_427": {
									"entryPoint": 3853,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startTime_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timeCursor_1244": {
									"entryPoint": null,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenEpoch_1252": {
									"entryPoint": null,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenTimeCursor_1248": {
									"entryPoint": null,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2649,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@veSix_1235": {
									"entryPoint": null,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@veSupplyCache_1260": {
									"entryPoint": null,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weeklyRewards_1256": {
									"entryPoint": null,
									"id": 1256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_int128_fromMemory": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Point_$1125_memory_ptr_fromMemory": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVeSix_$1191__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int128": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int128": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6854:13",
										"nodeType": "YulBlock",
										"src": "0:6854:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:13",
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nativeSrc": "125:26:13",
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:13",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nativeSrc": "133:18:13",
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nativeSrc": "160:25:13",
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nativeSrc": "160:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:13",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:13",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:13",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nativeSrc": "266:110:13",
													"nodeType": "YulBlock",
													"src": "266:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:13",
																"nodeType": "YulBlock",
																"src": "312:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:13",
																					"nodeType": "YulLiteral",
																					"src": "321:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:13",
																					"nodeType": "YulLiteral",
																					"src": "324:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:13"
																			},
																			"nativeSrc": "314:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:13"
																		},
																		"nativeSrc": "314:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:13"
																		},
																		"nativeSrc": "283:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:13",
																		"nodeType": "YulLiteral",
																		"src": "308:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:13"
																},
																"nativeSrc": "279:32:13",
																"nodeType": "YulFunctionCall",
																"src": "279:32:13"
															},
															"nativeSrc": "276:52:13",
															"nodeType": "YulIf",
															"src": "276:52:13"
														},
														{
															"nativeSrc": "337:33:13",
															"nodeType": "YulAssignment",
															"src": "337:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "347:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:13"
																},
																"nativeSrc": "347:23:13",
																"nodeType": "YulFunctionCall",
																"src": "347:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "337:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:13",
														"nodeType": "YulTypedName",
														"src": "232:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:13",
														"nodeType": "YulTypedName",
														"src": "243:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:13",
														"nodeType": "YulTypedName",
														"src": "255:6:13",
														"type": ""
													}
												],
												"src": "196:180:13"
											},
											{
												"body": {
													"nativeSrc": "482:102:13",
													"nodeType": "YulBlock",
													"src": "482:102:13",
													"statements": [
														{
															"nativeSrc": "492:26:13",
															"nodeType": "YulAssignment",
															"src": "492:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "504:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "504:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:2:13",
																		"nodeType": "YulLiteral",
																		"src": "515:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:13"
																},
																"nativeSrc": "500:18:13",
																"nodeType": "YulFunctionCall",
																"src": "500:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "492:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "492:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "534:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "534:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "549:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "565:3:13",
																								"nodeType": "YulLiteral",
																								"src": "565:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "570:1:13",
																								"nodeType": "YulLiteral",
																								"src": "570:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "561:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "561:3:13"
																						},
																						"nativeSrc": "561:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "561:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "574:1:13",
																						"nodeType": "YulLiteral",
																						"src": "574:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "557:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "557:3:13"
																				},
																				"nativeSrc": "557:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "557:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "545:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:13"
																		},
																		"nativeSrc": "545:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "545:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "527:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:13"
																},
																"nativeSrc": "527:51:13",
																"nodeType": "YulFunctionCall",
																"src": "527:51:13"
															},
															"nativeSrc": "527:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "527:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "381:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "451:9:13",
														"nodeType": "YulTypedName",
														"src": "451:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "462:6:13",
														"nodeType": "YulTypedName",
														"src": "462:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "473:4:13",
														"nodeType": "YulTypedName",
														"src": "473:4:13",
														"type": ""
													}
												],
												"src": "381:203:13"
											},
											{
												"body": {
													"nativeSrc": "694:505:13",
													"nodeType": "YulBlock",
													"src": "694:505:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "740:16:13",
																"nodeType": "YulBlock",
																"src": "740:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:13",
																					"nodeType": "YulLiteral",
																					"src": "749:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "752:1:13",
																					"nodeType": "YulLiteral",
																					"src": "752:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "742:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "742:6:13"
																			},
																			"nativeSrc": "742:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "742:12:13"
																		},
																		"nativeSrc": "742:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "742:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "715:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "715:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "711:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "711:3:13"
																		},
																		"nativeSrc": "711:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "711:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:2:13",
																		"nodeType": "YulLiteral",
																		"src": "736:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "707:3:13"
																},
																"nativeSrc": "707:32:13",
																"nodeType": "YulFunctionCall",
																"src": "707:32:13"
															},
															"nativeSrc": "704:52:13",
															"nodeType": "YulIf",
															"src": "704:52:13"
														},
														{
															"nativeSrc": "765:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "765:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "792:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "792:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "779:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "779:12:13"
																},
																"nativeSrc": "779:23:13",
																"nodeType": "YulFunctionCall",
																"src": "779:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "769:6:13",
																	"nodeType": "YulTypedName",
																	"src": "769:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "845:16:13",
																"nodeType": "YulBlock",
																"src": "845:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "854:1:13",
																					"nodeType": "YulLiteral",
																					"src": "854:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "857:1:13",
																					"nodeType": "YulLiteral",
																					"src": "857:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "847:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:13"
																			},
																			"nativeSrc": "847:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:13"
																		},
																		"nativeSrc": "847:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "817:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "817:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "825:18:13",
																		"nodeType": "YulLiteral",
																		"src": "825:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "814:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "814:2:13"
																},
																"nativeSrc": "814:30:13",
																"nodeType": "YulFunctionCall",
																"src": "814:30:13"
															},
															"nativeSrc": "811:50:13",
															"nodeType": "YulIf",
															"src": "811:50:13"
														},
														{
															"nativeSrc": "870:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "870:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "884:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "884:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "895:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "895:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "880:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "880:3:13"
																},
																"nativeSrc": "880:22:13",
																"nodeType": "YulFunctionCall",
																"src": "880:22:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "874:2:13",
																	"nodeType": "YulTypedName",
																	"src": "874:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "950:16:13",
																"nodeType": "YulBlock",
																"src": "950:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "959:1:13",
																					"nodeType": "YulLiteral",
																					"src": "959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "962:1:13",
																					"nodeType": "YulLiteral",
																					"src": "962:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "952:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:13"
																			},
																			"nativeSrc": "952:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "952:12:13"
																		},
																		"nativeSrc": "952:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "952:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "929:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "929:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "933:4:13",
																						"nodeType": "YulLiteral",
																						"src": "933:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "925:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "925:3:13"
																				},
																				"nativeSrc": "925:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "925:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "940:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "940:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "921:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "921:3:13"
																		},
																		"nativeSrc": "921:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "921:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "914:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:13"
																},
																"nativeSrc": "914:35:13",
																"nodeType": "YulFunctionCall",
																"src": "914:35:13"
															},
															"nativeSrc": "911:55:13",
															"nodeType": "YulIf",
															"src": "911:55:13"
														},
														{
															"nativeSrc": "975:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "975:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1002:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1002:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "989:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "989:12:13"
																},
																"nativeSrc": "989:16:13",
																"nodeType": "YulFunctionCall",
																"src": "989:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "979:6:13",
																	"nodeType": "YulTypedName",
																	"src": "979:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1048:16:13",
																"nodeType": "YulBlock",
																"src": "1048:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:13"
																			},
																			"nativeSrc": "1050:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:13"
																		},
																		"nativeSrc": "1050:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1020:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1028:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1028:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1017:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1017:2:13"
																},
																"nativeSrc": "1017:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1017:30:13"
															},
															"nativeSrc": "1014:50:13",
															"nodeType": "YulIf",
															"src": "1014:50:13"
														},
														{
															"body": {
																"nativeSrc": "1122:16:13",
																"nodeType": "YulBlock",
																"src": "1122:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1134:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1124:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1124:6:13"
																			},
																			"nativeSrc": "1124:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1124:12:13"
																		},
																		"nativeSrc": "1124:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1124:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1087:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1087:2:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1095:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1095:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1098:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "1098:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1091:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:13"
																						},
																						"nativeSrc": "1091:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1091:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1083:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1083:3:13"
																				},
																				"nativeSrc": "1083:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1083:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1108:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1108:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1079:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1079:3:13"
																		},
																		"nativeSrc": "1079:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1079:32:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1113:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1076:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1076:2:13"
																},
																"nativeSrc": "1076:45:13",
																"nodeType": "YulFunctionCall",
																"src": "1076:45:13"
															},
															"nativeSrc": "1073:65:13",
															"nodeType": "YulIf",
															"src": "1073:65:13"
														},
														{
															"nativeSrc": "1147:21:13",
															"nodeType": "YulAssignment",
															"src": "1147:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1161:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1161:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1165:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1165:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1157:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1157:3:13"
																},
																"nativeSrc": "1157:11:13",
																"nodeType": "YulFunctionCall",
																"src": "1157:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1147:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:13"
																}
															]
														},
														{
															"nativeSrc": "1177:16:13",
															"nodeType": "YulAssignment",
															"src": "1177:16:13",
															"value": {
																"name": "length",
																"nativeSrc": "1187:6:13",
																"nodeType": "YulIdentifier",
																"src": "1187:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1177:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "589:610:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "652:9:13",
														"nodeType": "YulTypedName",
														"src": "652:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "663:7:13",
														"nodeType": "YulTypedName",
														"src": "663:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "675:6:13",
														"nodeType": "YulTypedName",
														"src": "675:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "683:6:13",
														"nodeType": "YulTypedName",
														"src": "683:6:13",
														"type": ""
													}
												],
												"src": "589:610:13"
											},
											{
												"body": {
													"nativeSrc": "1299:92:13",
													"nodeType": "YulBlock",
													"src": "1299:92:13",
													"statements": [
														{
															"nativeSrc": "1309:26:13",
															"nodeType": "YulAssignment",
															"src": "1309:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1321:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1321:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1332:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1317:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1317:3:13"
																},
																"nativeSrc": "1317:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1317:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1309:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1309:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1351:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1376:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1376:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1369:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1369:6:13"
																				},
																				"nativeSrc": "1369:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1362:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1362:6:13"
																		},
																		"nativeSrc": "1362:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1362:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1344:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:13"
																},
																"nativeSrc": "1344:41:13",
																"nodeType": "YulFunctionCall",
																"src": "1344:41:13"
															},
															"nativeSrc": "1344:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "1344:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1204:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1268:9:13",
														"nodeType": "YulTypedName",
														"src": "1268:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1279:6:13",
														"nodeType": "YulTypedName",
														"src": "1279:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1290:4:13",
														"nodeType": "YulTypedName",
														"src": "1290:4:13",
														"type": ""
													}
												],
												"src": "1204:187:13"
											},
											{
												"body": {
													"nativeSrc": "1512:102:13",
													"nodeType": "YulBlock",
													"src": "1512:102:13",
													"statements": [
														{
															"nativeSrc": "1522:26:13",
															"nodeType": "YulAssignment",
															"src": "1522:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1534:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1545:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1545:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:13"
																},
																"nativeSrc": "1530:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1530:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1522:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1522:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1564:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1564:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1579:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1595:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1595:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1600:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1600:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1591:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:13"
																						},
																						"nativeSrc": "1591:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1604:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1604:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1587:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1587:3:13"
																				},
																				"nativeSrc": "1587:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1587:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1575:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:13"
																		},
																		"nativeSrc": "1575:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1575:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1557:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:13"
																},
																"nativeSrc": "1557:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1557:51:13"
															},
															"nativeSrc": "1557:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1557:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVeSix_$1191__to_t_address__fromStack_reversed",
												"nativeSrc": "1396:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1481:9:13",
														"nodeType": "YulTypedName",
														"src": "1481:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1492:6:13",
														"nodeType": "YulTypedName",
														"src": "1492:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1503:4:13",
														"nodeType": "YulTypedName",
														"src": "1503:4:13",
														"type": ""
													}
												],
												"src": "1396:218:13"
											},
											{
												"body": {
													"nativeSrc": "1734:102:13",
													"nodeType": "YulBlock",
													"src": "1734:102:13",
													"statements": [
														{
															"nativeSrc": "1744:26:13",
															"nodeType": "YulAssignment",
															"src": "1744:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1756:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1756:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1752:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:13"
																},
																"nativeSrc": "1752:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1752:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1744:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1744:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1786:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1786:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1801:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1801:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1817:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1817:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1822:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1822:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1813:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1813:3:13"
																						},
																						"nativeSrc": "1813:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1813:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1826:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1826:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1809:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1809:3:13"
																				},
																				"nativeSrc": "1809:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1809:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1797:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1797:3:13"
																		},
																		"nativeSrc": "1797:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1779:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:13"
																},
																"nativeSrc": "1779:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1779:51:13"
															},
															"nativeSrc": "1779:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1779:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "1619:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1703:9:13",
														"nodeType": "YulTypedName",
														"src": "1703:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1714:6:13",
														"nodeType": "YulTypedName",
														"src": "1714:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1725:4:13",
														"nodeType": "YulTypedName",
														"src": "1725:4:13",
														"type": ""
													}
												],
												"src": "1619:217:13"
											},
											{
												"body": {
													"nativeSrc": "1886:86:13",
													"nodeType": "YulBlock",
													"src": "1886:86:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1950:16:13",
																"nodeType": "YulBlock",
																"src": "1950:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1962:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1952:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:13"
																			},
																			"nativeSrc": "1952:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1952:12:13"
																		},
																		"nativeSrc": "1952:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1909:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1909:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1920:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1920:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1935:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1935:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1940:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1940:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1931:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1931:3:13"
																								},
																								"nativeSrc": "1931:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1931:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1944:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1944:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1927:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1927:3:13"
																						},
																						"nativeSrc": "1927:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1927:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1916:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1916:3:13"
																				},
																				"nativeSrc": "1916:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1916:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1906:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1906:2:13"
																		},
																		"nativeSrc": "1906:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1906:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1899:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:13"
																},
																"nativeSrc": "1899:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1899:50:13"
															},
															"nativeSrc": "1896:70:13",
															"nodeType": "YulIf",
															"src": "1896:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1841:131:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1875:5:13",
														"nodeType": "YulTypedName",
														"src": "1875:5:13",
														"type": ""
													}
												],
												"src": "1841:131:13"
											},
											{
												"body": {
													"nativeSrc": "2047:177:13",
													"nodeType": "YulBlock",
													"src": "2047:177:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2093:16:13",
																"nodeType": "YulBlock",
																"src": "2093:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2102:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2102:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2105:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2105:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2095:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:13"
																			},
																			"nativeSrc": "2095:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2095:12:13"
																		},
																		"nativeSrc": "2095:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2095:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2068:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2064:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:13"
																		},
																		"nativeSrc": "2064:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2089:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2089:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2060:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2060:3:13"
																},
																"nativeSrc": "2060:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2060:32:13"
															},
															"nativeSrc": "2057:52:13",
															"nodeType": "YulIf",
															"src": "2057:52:13"
														},
														{
															"nativeSrc": "2118:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2118:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2144:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2144:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2131:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2131:12:13"
																},
																"nativeSrc": "2131:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2131:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2122:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2122:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2188:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2188:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2163:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "2163:24:13"
																},
																"nativeSrc": "2163:31:13",
																"nodeType": "YulFunctionCall",
																"src": "2163:31:13"
															},
															"nativeSrc": "2163:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "2163:31:13"
														},
														{
															"nativeSrc": "2203:15:13",
															"nodeType": "YulAssignment",
															"src": "2203:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2213:5:13",
																"nodeType": "YulIdentifier",
																"src": "2213:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2203:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1977:247:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2013:9:13",
														"nodeType": "YulTypedName",
														"src": "2013:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2024:7:13",
														"nodeType": "YulTypedName",
														"src": "2024:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2036:6:13",
														"nodeType": "YulTypedName",
														"src": "2036:6:13",
														"type": ""
													}
												],
												"src": "1977:247:13"
											},
											{
												"body": {
													"nativeSrc": "2261:95:13",
													"nodeType": "YulBlock",
													"src": "2261:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2285:3:13",
																				"nodeType": "YulLiteral",
																				"src": "2285:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2290:10:13",
																				"nodeType": "YulLiteral",
																				"src": "2290:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2281:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:13"
																		},
																		"nativeSrc": "2281:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2281:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:13"
																},
																"nativeSrc": "2271:31:13",
																"nodeType": "YulFunctionCall",
																"src": "2271:31:13"
															},
															"nativeSrc": "2271:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "2271:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2318:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2318:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2321:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2321:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2311:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2311:6:13"
																},
																"nativeSrc": "2311:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2311:15:13"
															},
															"nativeSrc": "2311:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2311:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2342:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2342:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2345:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2345:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2335:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:13"
																},
																"nativeSrc": "2335:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2335:15:13"
															},
															"nativeSrc": "2335:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2335:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2229:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2229:127:13"
											},
											{
												"body": {
													"nativeSrc": "2407:171:13",
													"nodeType": "YulBlock",
													"src": "2407:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:111:13",
																"nodeType": "YulBlock",
																"src": "2438:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2459:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2459:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2466:3:13",
																							"nodeType": "YulLiteral",
																							"src": "2466:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2471:10:13",
																							"nodeType": "YulLiteral",
																							"src": "2471:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2462:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2462:3:13"
																					},
																					"nativeSrc": "2462:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2462:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2452:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:13"
																			},
																			"nativeSrc": "2452:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2452:31:13"
																		},
																		"nativeSrc": "2452:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2452:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2506:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2506:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2496:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2496:6:13"
																			},
																			"nativeSrc": "2496:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2496:15:13"
																		},
																		"nativeSrc": "2496:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2496:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2531:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2531:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2534:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2534:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2524:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:13"
																			},
																			"nativeSrc": "2524:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2524:15:13"
																		},
																		"nativeSrc": "2524:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2524:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2427:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2427:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2420:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:13"
																},
																"nativeSrc": "2420:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2420:9:13"
															},
															"nativeSrc": "2417:132:13",
															"nodeType": "YulIf",
															"src": "2417:132:13"
														},
														{
															"nativeSrc": "2558:14:13",
															"nodeType": "YulAssignment",
															"src": "2558:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2567:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2567:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2570:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2570:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2563:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2563:3:13"
																},
																"nativeSrc": "2563:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2563:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2558:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2558:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2361:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2392:1:13",
														"nodeType": "YulTypedName",
														"src": "2392:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2395:1:13",
														"nodeType": "YulTypedName",
														"src": "2395:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2401:1:13",
														"nodeType": "YulTypedName",
														"src": "2401:1:13",
														"type": ""
													}
												],
												"src": "2361:217:13"
											},
											{
												"body": {
													"nativeSrc": "2635:116:13",
													"nodeType": "YulBlock",
													"src": "2635:116:13",
													"statements": [
														{
															"nativeSrc": "2645:20:13",
															"nodeType": "YulAssignment",
															"src": "2645:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2660:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2660:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2663:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2663:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:13"
																},
																"nativeSrc": "2656:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2656:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2645:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2645:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2723:22:13",
																"nodeType": "YulBlock",
																"src": "2723:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2725:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2725:16:13"
																			},
																			"nativeSrc": "2725:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2725:18:13"
																		},
																		"nativeSrc": "2725:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2725:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2694:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "2694:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2687:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2687:6:13"
																				},
																				"nativeSrc": "2687:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2687:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2701:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "2701:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2708:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "2708:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2717:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "2717:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2704:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2704:3:13"
																						},
																						"nativeSrc": "2704:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2704:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2698:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2698:2:13"
																				},
																				"nativeSrc": "2698:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2698:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2684:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2684:2:13"
																		},
																		"nativeSrc": "2684:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2677:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:13"
																},
																"nativeSrc": "2677:45:13",
																"nodeType": "YulFunctionCall",
																"src": "2677:45:13"
															},
															"nativeSrc": "2674:71:13",
															"nodeType": "YulIf",
															"src": "2674:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2583:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2614:1:13",
														"nodeType": "YulTypedName",
														"src": "2614:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2617:1:13",
														"nodeType": "YulTypedName",
														"src": "2617:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2623:7:13",
														"nodeType": "YulTypedName",
														"src": "2623:7:13",
														"type": ""
													}
												],
												"src": "2583:168:13"
											},
											{
												"body": {
													"nativeSrc": "2885:145:13",
													"nodeType": "YulBlock",
													"src": "2885:145:13",
													"statements": [
														{
															"nativeSrc": "2895:26:13",
															"nodeType": "YulAssignment",
															"src": "2895:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2907:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2907:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2918:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2918:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2903:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2903:3:13"
																},
																"nativeSrc": "2903:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2903:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2895:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2895:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2937:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2937:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2952:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2952:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2968:3:13",
																								"nodeType": "YulLiteral",
																								"src": "2968:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2973:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2973:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2964:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2964:3:13"
																						},
																						"nativeSrc": "2964:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2964:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2977:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2977:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2960:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2960:3:13"
																				},
																				"nativeSrc": "2960:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2960:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2948:3:13"
																		},
																		"nativeSrc": "2948:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2930:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:13"
																},
																"nativeSrc": "2930:51:13",
																"nodeType": "YulFunctionCall",
																"src": "2930:51:13"
															},
															"nativeSrc": "2930:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "2930:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3001:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3001:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3012:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3012:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2997:3:13"
																		},
																		"nativeSrc": "2997:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2997:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3017:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3017:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2990:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:13"
																},
																"nativeSrc": "2990:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2990:34:13"
															},
															"nativeSrc": "2990:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2990:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2756:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2846:9:13",
														"nodeType": "YulTypedName",
														"src": "2846:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2857:6:13",
														"nodeType": "YulTypedName",
														"src": "2857:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2865:6:13",
														"nodeType": "YulTypedName",
														"src": "2865:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2876:4:13",
														"nodeType": "YulTypedName",
														"src": "2876:4:13",
														"type": ""
													}
												],
												"src": "2756:274:13"
											},
											{
												"body": {
													"nativeSrc": "3113:199:13",
													"nodeType": "YulBlock",
													"src": "3113:199:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3159:16:13",
																"nodeType": "YulBlock",
																"src": "3159:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3168:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3168:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3171:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3171:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3161:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3161:6:13"
																			},
																			"nativeSrc": "3161:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3161:12:13"
																		},
																		"nativeSrc": "3161:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3161:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3134:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3134:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3143:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3143:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3130:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3130:3:13"
																		},
																		"nativeSrc": "3130:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3130:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3155:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3126:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3126:3:13"
																},
																"nativeSrc": "3126:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3126:32:13"
															},
															"nativeSrc": "3123:52:13",
															"nodeType": "YulIf",
															"src": "3123:52:13"
														},
														{
															"nativeSrc": "3184:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3184:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3203:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3203:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3197:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3197:5:13"
																},
																"nativeSrc": "3197:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3197:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3188:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3266:16:13",
																"nodeType": "YulBlock",
																"src": "3266:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3275:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3275:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3278:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3278:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3268:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3268:6:13"
																			},
																			"nativeSrc": "3268:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3268:12:13"
																		},
																		"nativeSrc": "3268:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3268:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3235:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3235:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3256:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "3256:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3249:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3249:6:13"
																						},
																						"nativeSrc": "3249:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3249:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3242:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3242:6:13"
																				},
																				"nativeSrc": "3242:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3242:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3232:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3232:2:13"
																		},
																		"nativeSrc": "3232:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:13"
																},
																"nativeSrc": "3225:40:13",
																"nodeType": "YulFunctionCall",
																"src": "3225:40:13"
															},
															"nativeSrc": "3222:60:13",
															"nodeType": "YulIf",
															"src": "3222:60:13"
														},
														{
															"nativeSrc": "3291:15:13",
															"nodeType": "YulAssignment",
															"src": "3291:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3301:5:13",
																"nodeType": "YulIdentifier",
																"src": "3301:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3291:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3035:277:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3079:9:13",
														"nodeType": "YulTypedName",
														"src": "3079:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3090:7:13",
														"nodeType": "YulTypedName",
														"src": "3090:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3102:6:13",
														"nodeType": "YulTypedName",
														"src": "3102:6:13",
														"type": ""
													}
												],
												"src": "3035:277:13"
											},
											{
												"body": {
													"nativeSrc": "3398:149:13",
													"nodeType": "YulBlock",
													"src": "3398:149:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3444:16:13",
																"nodeType": "YulBlock",
																"src": "3444:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3453:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3453:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3456:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3456:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3446:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3446:6:13"
																			},
																			"nativeSrc": "3446:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3446:12:13"
																		},
																		"nativeSrc": "3446:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3446:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3419:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3419:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3428:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3428:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:13"
																		},
																		"nativeSrc": "3415:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3440:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:13"
																},
																"nativeSrc": "3411:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3411:32:13"
															},
															"nativeSrc": "3408:52:13",
															"nodeType": "YulIf",
															"src": "3408:52:13"
														},
														{
															"nativeSrc": "3469:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3469:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:13",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3473:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3473:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3492:25:13",
															"nodeType": "YulAssignment",
															"src": "3492:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3507:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3507:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3501:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3501:5:13"
																},
																"nativeSrc": "3501:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3501:16:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3492:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3492:5:13"
																}
															]
														},
														{
															"nativeSrc": "3526:15:13",
															"nodeType": "YulAssignment",
															"src": "3526:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3536:5:13",
																"nodeType": "YulIdentifier",
																"src": "3536:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3526:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3526:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3317:230:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3364:9:13",
														"nodeType": "YulTypedName",
														"src": "3364:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3375:7:13",
														"nodeType": "YulTypedName",
														"src": "3375:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3387:6:13",
														"nodeType": "YulTypedName",
														"src": "3387:6:13",
														"type": ""
													}
												],
												"src": "3317:230:13"
											},
											{
												"body": {
													"nativeSrc": "3601:79:13",
													"nodeType": "YulBlock",
													"src": "3601:79:13",
													"statements": [
														{
															"nativeSrc": "3611:17:13",
															"nodeType": "YulAssignment",
															"src": "3611:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3623:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3623:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3626:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3626:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3619:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:13"
																},
																"nativeSrc": "3619:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3619:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3611:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3652:22:13",
																"nodeType": "YulBlock",
																"src": "3652:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3654:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3654:16:13"
																			},
																			"nativeSrc": "3654:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3654:18:13"
																		},
																		"nativeSrc": "3654:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3654:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3643:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3643:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3649:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3649:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3640:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3640:2:13"
																},
																"nativeSrc": "3640:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3640:11:13"
															},
															"nativeSrc": "3637:37:13",
															"nodeType": "YulIf",
															"src": "3637:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3552:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3583:1:13",
														"nodeType": "YulTypedName",
														"src": "3583:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3586:1:13",
														"nodeType": "YulTypedName",
														"src": "3586:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3592:4:13",
														"nodeType": "YulTypedName",
														"src": "3592:4:13",
														"type": ""
													}
												],
												"src": "3552:128:13"
											},
											{
												"body": {
													"nativeSrc": "3766:170:13",
													"nodeType": "YulBlock",
													"src": "3766:170:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3812:16:13",
																"nodeType": "YulBlock",
																"src": "3812:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3821:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3821:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3824:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3824:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3814:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3814:6:13"
																			},
																			"nativeSrc": "3814:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3814:12:13"
																		},
																		"nativeSrc": "3814:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3814:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3787:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3787:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3796:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3796:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3783:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:13"
																		},
																		"nativeSrc": "3783:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3808:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3779:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3779:3:13"
																},
																"nativeSrc": "3779:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3779:32:13"
															},
															"nativeSrc": "3776:52:13",
															"nodeType": "YulIf",
															"src": "3776:52:13"
														},
														{
															"nativeSrc": "3837:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3837:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3856:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3856:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3850:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3850:5:13"
																},
																"nativeSrc": "3850:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3850:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3841:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3841:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3900:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3900:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3875:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "3875:24:13"
																},
																"nativeSrc": "3875:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3875:31:13"
															},
															"nativeSrc": "3875:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3875:31:13"
														},
														{
															"nativeSrc": "3915:15:13",
															"nodeType": "YulAssignment",
															"src": "3915:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3925:5:13",
																"nodeType": "YulIdentifier",
																"src": "3925:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3915:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3685:251:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3732:9:13",
														"nodeType": "YulTypedName",
														"src": "3732:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3743:7:13",
														"nodeType": "YulTypedName",
														"src": "3743:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3755:6:13",
														"nodeType": "YulTypedName",
														"src": "3755:6:13",
														"type": ""
													}
												],
												"src": "3685:251:13"
											},
											{
												"body": {
													"nativeSrc": "4098:162:13",
													"nodeType": "YulBlock",
													"src": "4098:162:13",
													"statements": [
														{
															"nativeSrc": "4108:26:13",
															"nodeType": "YulAssignment",
															"src": "4108:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4120:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4120:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4131:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4131:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4116:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4116:3:13"
																},
																"nativeSrc": "4116:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4116:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4108:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4108:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4150:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4150:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4161:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4161:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4143:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:13"
																},
																"nativeSrc": "4143:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4143:25:13"
															},
															"nativeSrc": "4143:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "4143:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4199:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4199:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4184:3:13"
																		},
																		"nativeSrc": "4184:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4204:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4204:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4177:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:13"
																},
																"nativeSrc": "4177:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4177:34:13"
															},
															"nativeSrc": "4177:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "4177:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4231:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4231:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4242:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4242:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4227:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:13"
																		},
																		"nativeSrc": "4227:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4227:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4247:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4247:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:13"
																},
																"nativeSrc": "4220:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4220:34:13"
															},
															"nativeSrc": "4220:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "4220:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3941:319:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4051:9:13",
														"nodeType": "YulTypedName",
														"src": "4051:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4062:6:13",
														"nodeType": "YulTypedName",
														"src": "4062:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4070:6:13",
														"nodeType": "YulTypedName",
														"src": "4070:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4078:6:13",
														"nodeType": "YulTypedName",
														"src": "4078:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4089:4:13",
														"nodeType": "YulTypedName",
														"src": "4089:4:13",
														"type": ""
													}
												],
												"src": "3941:319:13"
											},
											{
												"body": {
													"nativeSrc": "4313:77:13",
													"nodeType": "YulBlock",
													"src": "4313:77:13",
													"statements": [
														{
															"nativeSrc": "4323:16:13",
															"nodeType": "YulAssignment",
															"src": "4323:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4334:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4334:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4337:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4337:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:13"
																},
																"nativeSrc": "4330:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4330:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4323:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4362:22:13",
																"nodeType": "YulBlock",
																"src": "4362:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4364:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4364:16:13"
																			},
																			"nativeSrc": "4364:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4364:18:13"
																		},
																		"nativeSrc": "4364:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4364:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4354:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4354:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4357:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4357:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4351:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4351:2:13"
																},
																"nativeSrc": "4351:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4351:10:13"
															},
															"nativeSrc": "4348:36:13",
															"nodeType": "YulIf",
															"src": "4348:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4265:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4296:1:13",
														"nodeType": "YulTypedName",
														"src": "4296:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4299:1:13",
														"nodeType": "YulTypedName",
														"src": "4299:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4305:3:13",
														"nodeType": "YulTypedName",
														"src": "4305:3:13",
														"type": ""
													}
												],
												"src": "4265:125:13"
											},
											{
												"body": {
													"nativeSrc": "4524:119:13",
													"nodeType": "YulBlock",
													"src": "4524:119:13",
													"statements": [
														{
															"nativeSrc": "4534:26:13",
															"nodeType": "YulAssignment",
															"src": "4534:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4546:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4546:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4557:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4557:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4542:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:13"
																},
																"nativeSrc": "4542:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4542:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4534:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4534:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4576:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4576:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4587:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4587:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4569:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:13"
																},
																"nativeSrc": "4569:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4569:25:13"
															},
															"nativeSrc": "4569:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "4569:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4614:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4625:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:13"
																		},
																		"nativeSrc": "4610:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4630:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:13"
																},
																"nativeSrc": "4603:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4603:34:13"
															},
															"nativeSrc": "4603:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "4603:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4395:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4485:9:13",
														"nodeType": "YulTypedName",
														"src": "4485:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4496:6:13",
														"nodeType": "YulTypedName",
														"src": "4496:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4504:6:13",
														"nodeType": "YulTypedName",
														"src": "4504:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4515:4:13",
														"nodeType": "YulTypedName",
														"src": "4515:4:13",
														"type": ""
													}
												],
												"src": "4395:248:13"
											},
											{
												"body": {
													"nativeSrc": "4680:95:13",
													"nodeType": "YulBlock",
													"src": "4680:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4697:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4697:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4704:3:13",
																				"nodeType": "YulLiteral",
																				"src": "4704:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4709:10:13",
																				"nodeType": "YulLiteral",
																				"src": "4709:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:13"
																		},
																		"nativeSrc": "4700:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4700:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:13"
																},
																"nativeSrc": "4690:31:13",
																"nodeType": "YulFunctionCall",
																"src": "4690:31:13"
															},
															"nativeSrc": "4690:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "4690:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4737:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4737:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4740:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4730:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:13"
																},
																"nativeSrc": "4730:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4730:15:13"
															},
															"nativeSrc": "4730:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4730:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4761:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4764:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4764:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4754:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:13"
																},
																"nativeSrc": "4754:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4754:15:13"
															},
															"nativeSrc": "4754:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4754:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4648:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4648:127:13"
											},
											{
												"body": {
													"nativeSrc": "4954:181:13",
													"nodeType": "YulBlock",
													"src": "4954:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4971:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4971:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4982:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4982:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4964:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4964:6:13"
																},
																"nativeSrc": "4964:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4964:21:13"
															},
															"nativeSrc": "4964:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4964:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5005:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5005:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5016:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5016:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5001:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:13"
																		},
																		"nativeSrc": "5001:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5001:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5021:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4994:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4994:6:13"
																},
																"nativeSrc": "4994:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4994:30:13"
															},
															"nativeSrc": "4994:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4994:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5055:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5055:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:13"
																		},
																		"nativeSrc": "5040:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "5060:33:13",
																		"nodeType": "YulLiteral",
																		"src": "5060:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:13"
																},
																"nativeSrc": "5033:61:13",
																"nodeType": "YulFunctionCall",
																"src": "5033:61:13"
															},
															"nativeSrc": "5033:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "5033:61:13"
														},
														{
															"nativeSrc": "5103:26:13",
															"nodeType": "YulAssignment",
															"src": "5103:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5115:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5115:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5126:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5111:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5111:3:13"
																},
																"nativeSrc": "5111:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5111:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5103:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5103:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4780:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4931:9:13",
														"nodeType": "YulTypedName",
														"src": "4931:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4945:4:13",
														"nodeType": "YulTypedName",
														"src": "4945:4:13",
														"type": ""
													}
												],
												"src": "4780:355:13"
											},
											{
												"body": {
													"nativeSrc": "5199:107:13",
													"nodeType": "YulBlock",
													"src": "5199:107:13",
													"statements": [
														{
															"nativeSrc": "5209:22:13",
															"nodeType": "YulAssignment",
															"src": "5209:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5218:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5218:5:13"
																},
																"nativeSrc": "5218:13:13",
																"nodeType": "YulFunctionCall",
																"src": "5218:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5209:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5209:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5284:16:13",
																"nodeType": "YulBlock",
																"src": "5284:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5293:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5293:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5296:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5296:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5286:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5286:6:13"
																			},
																			"nativeSrc": "5286:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5286:12:13"
																		},
																		"nativeSrc": "5286:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5286:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5253:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5253:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5271:2:13",
																						"nodeType": "YulLiteral",
																						"src": "5271:2:13",
																						"type": "",
																						"value": "15"
																					},
																					{
																						"name": "value",
																						"nativeSrc": "5275:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5275:5:13"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nativeSrc": "5260:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5260:10:13"
																				},
																				"nativeSrc": "5260:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5260:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5250:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5250:2:13"
																		},
																		"nativeSrc": "5250:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5250:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5243:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:13"
																},
																"nativeSrc": "5243:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5243:40:13"
															},
															"nativeSrc": "5240:60:13",
															"nodeType": "YulIf",
															"src": "5240:60:13"
														}
													]
												},
												"name": "abi_decode_int128_fromMemory",
												"nativeSrc": "5140:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5178:6:13",
														"nodeType": "YulTypedName",
														"src": "5178:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5189:5:13",
														"nodeType": "YulTypedName",
														"src": "5189:5:13",
														"type": ""
													}
												],
												"src": "5140:166:13"
											},
											{
												"body": {
													"nativeSrc": "5415:797:13",
													"nodeType": "YulBlock",
													"src": "5415:797:13",
													"statements": [
														{
															"nativeSrc": "5425:43:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5425:43:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5443:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5443:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5452:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:13"
																		},
																		"nativeSrc": "5439:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5464:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5464:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5435:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:13"
																},
																"nativeSrc": "5435:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5435:33:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5429:2:13",
																	"nodeType": "YulTypedName",
																	"src": "5429:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5483:16:13",
																"nodeType": "YulBlock",
																"src": "5483:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5492:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5492:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5495:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5495:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5485:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5485:6:13"
																			},
																			"nativeSrc": "5485:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5485:12:13"
																		},
																		"nativeSrc": "5485:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5485:12:13"
																	}
																]
															},
															"condition": {
																"name": "_1",
																"nativeSrc": "5480:2:13",
																"nodeType": "YulIdentifier",
																"src": "5480:2:13"
															},
															"nativeSrc": "5477:22:13",
															"nodeType": "YulIf",
															"src": "5477:22:13"
														},
														{
															"nativeSrc": "5508:7:13",
															"nodeType": "YulAssignment",
															"src": "5508:7:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5514:1:13",
																"nodeType": "YulLiteral",
																"src": "5514:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "_1",
																	"nativeSrc": "5508:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5508:2:13"
																}
															]
														},
														{
															"nativeSrc": "5524:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5524:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5538:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5538:5:13"
																},
																"nativeSrc": "5538:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5538:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5528:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5528:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5556:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5556:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5578:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5578:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5586:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5586:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5574:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:13"
																},
																"nativeSrc": "5574:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5574:16:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5560:10:13",
																	"nodeType": "YulTypedName",
																	"src": "5560:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5673:113:13",
																"nodeType": "YulBlock",
																"src": "5673:113:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "5694:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5694:2:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5702:3:13",
																							"nodeType": "YulLiteral",
																							"src": "5702:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5707:10:13",
																							"nodeType": "YulLiteral",
																							"src": "5707:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5698:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5698:3:13"
																					},
																					"nativeSrc": "5698:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5698:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5687:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5687:6:13"
																			},
																			"nativeSrc": "5687:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5687:32:13"
																		},
																		"nativeSrc": "5687:32:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5687:32:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5739:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5739:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5742:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5742:4:13",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5732:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5732:6:13"
																			},
																			"nativeSrc": "5732:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5732:15:13"
																		},
																		"nativeSrc": "5732:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5732:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "5767:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5767:2:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5771:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5771:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5760:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5760:6:13"
																			},
																			"nativeSrc": "5760:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5760:16:13"
																		},
																		"nativeSrc": "5760:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5760:16:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5608:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5608:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5620:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5620:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5605:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5605:2:13"
																		},
																		"nativeSrc": "5605:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5644:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5644:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5656:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5656:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5641:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5641:2:13"
																		},
																		"nativeSrc": "5641:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5641:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5602:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5602:2:13"
																},
																"nativeSrc": "5602:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5602:62:13"
															},
															"nativeSrc": "5599:187:13",
															"nodeType": "YulIf",
															"src": "5599:187:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5802:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5802:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5806:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5806:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:13"
																},
																"nativeSrc": "5795:22:13",
																"nodeType": "YulFunctionCall",
																"src": "5795:22:13"
															},
															"nativeSrc": "5795:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "5795:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5833:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5870:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_int128_fromMemory",
																			"nativeSrc": "5841:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "5841:28:13"
																		},
																		"nativeSrc": "5841:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5841:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5826:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5826:6:13"
																},
																"nativeSrc": "5826:55:13",
																"nodeType": "YulFunctionCall",
																"src": "5826:55:13"
															},
															"nativeSrc": "5826:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "5826:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5901:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5901:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5897:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5897:3:13"
																		},
																		"nativeSrc": "5897:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5897:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5947:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5947:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5958:2:13",
																						"nodeType": "YulLiteral",
																						"src": "5958:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5943:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5943:3:13"
																				},
																				"nativeSrc": "5943:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5943:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_int128_fromMemory",
																			"nativeSrc": "5914:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "5914:28:13"
																		},
																		"nativeSrc": "5914:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5914:48:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5890:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:13"
																},
																"nativeSrc": "5890:73:13",
																"nodeType": "YulFunctionCall",
																"src": "5890:73:13"
															},
															"nativeSrc": "5890:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "5890:73:13"
														},
														{
															"nativeSrc": "5972:15:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5972:15:13",
															"value": {
																"name": "_1",
																"nativeSrc": "5985:2:13",
																"nodeType": "YulIdentifier",
																"src": "5985:2:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5976:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5976:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5996:34:13",
															"nodeType": "YulAssignment",
															"src": "5996:34:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6015:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6015:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6026:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6011:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6011:3:13"
																		},
																		"nativeSrc": "6011:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6011:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6005:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6005:5:13"
																},
																"nativeSrc": "6005:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6005:25:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5996:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5996:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6050:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6050:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6058:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6058:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6046:3:13"
																		},
																		"nativeSrc": "6046:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:15:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6063:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6063:5:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6039:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6039:6:13"
																},
																"nativeSrc": "6039:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6039:30:13"
															},
															"nativeSrc": "6039:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6039:30:13"
														},
														{
															"nativeSrc": "6078:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6078:17:13",
															"value": {
																"name": "_1",
																"nativeSrc": "6093:2:13",
																"nodeType": "YulIdentifier",
																"src": "6093:2:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6082:7:13",
																	"nodeType": "YulTypedName",
																	"src": "6082:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6104:36:13",
															"nodeType": "YulAssignment",
															"src": "6104:36:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6125:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6125:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6136:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6136:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6121:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6121:3:13"
																		},
																		"nativeSrc": "6121:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6121:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6115:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6115:5:13"
																},
																"nativeSrc": "6115:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6115:25:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "6104:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6104:7:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6160:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6160:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6168:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6168:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6156:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6156:3:13"
																		},
																		"nativeSrc": "6156:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6156:15:13"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "6173:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6173:7:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6149:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:13"
																},
																"nativeSrc": "6149:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6149:32:13"
															},
															"nativeSrc": "6149:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "6149:32:13"
														},
														{
															"nativeSrc": "6190:16:13",
															"nodeType": "YulAssignment",
															"src": "6190:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "6200:6:13",
																"nodeType": "YulIdentifier",
																"src": "6200:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Point_$1125_memory_ptr_fromMemory",
												"nativeSrc": "5311:901:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5381:9:13",
														"nodeType": "YulTypedName",
														"src": "5381:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5392:7:13",
														"nodeType": "YulTypedName",
														"src": "5392:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5404:6:13",
														"nodeType": "YulTypedName",
														"src": "5404:6:13",
														"type": ""
													}
												],
												"src": "5311:901:13"
											},
											{
												"body": {
													"nativeSrc": "6268:190:13",
													"nodeType": "YulBlock",
													"src": "6268:190:13",
													"statements": [
														{
															"nativeSrc": "6278:60:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6278:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6312:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6312:2:13",
																				"type": "",
																				"value": "15"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "6316:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6316:1:13"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "6301:10:13",
																			"nodeType": "YulIdentifier",
																			"src": "6301:10:13"
																		},
																		"nativeSrc": "6301:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6331:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6331:2:13",
																				"type": "",
																				"value": "15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6335:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6335:1:13"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "6320:10:13",
																			"nodeType": "YulIdentifier",
																			"src": "6320:10:13"
																		},
																		"nativeSrc": "6320:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6320:17:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6297:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6297:3:13"
																},
																"nativeSrc": "6297:41:13",
																"nodeType": "YulFunctionCall",
																"src": "6297:41:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6282:11:13",
																	"nodeType": "YulTypedName",
																	"src": "6282:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6347:38:13",
															"nodeType": "YulAssignment",
															"src": "6347:38:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:13",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "product_raw",
																		"nativeSrc": "6373:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "6373:11:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "6358:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "6358:10:13"
																},
																"nativeSrc": "6358:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6358:27:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6347:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6347:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6430:22:13",
																"nodeType": "YulBlock",
																"src": "6430:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6432:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6432:16:13"
																			},
																			"nativeSrc": "6432:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6432:18:13"
																		},
																		"nativeSrc": "6432:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6432:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "6407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6407:7:13"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "6416:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6416:11:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6404:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6404:2:13"
																		},
																		"nativeSrc": "6404:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:24:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6397:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6397:6:13"
																},
																"nativeSrc": "6397:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6397:32:13"
															},
															"nativeSrc": "6394:58:13",
															"nodeType": "YulIf",
															"src": "6394:58:13"
														}
													]
												},
												"name": "checked_mul_t_int128",
												"nativeSrc": "6217:241:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6247:1:13",
														"nodeType": "YulTypedName",
														"src": "6247:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6250:1:13",
														"nodeType": "YulTypedName",
														"src": "6250:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6256:7:13",
														"nodeType": "YulTypedName",
														"src": "6256:7:13",
														"type": ""
													}
												],
												"src": "6217:241:13"
											},
											{
												"body": {
													"nativeSrc": "6511:201:13",
													"nodeType": "YulBlock",
													"src": "6511:201:13",
													"statements": [
														{
															"nativeSrc": "6521:49:13",
															"nodeType": "YulAssignment",
															"src": "6521:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6544:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:13",
																				"type": "",
																				"value": "15"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "6548:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:13"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "6533:10:13",
																			"nodeType": "YulIdentifier",
																			"src": "6533:10:13"
																		},
																		"nativeSrc": "6533:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6563:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6563:2:13",
																				"type": "",
																				"value": "15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6567:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6567:1:13"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "6552:10:13",
																			"nodeType": "YulIdentifier",
																			"src": "6552:10:13"
																		},
																		"nativeSrc": "6552:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6552:17:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6529:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:13"
																},
																"nativeSrc": "6529:41:13",
																"nodeType": "YulFunctionCall",
																"src": "6529:41:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6521:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6521:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6684:22:13",
																"nodeType": "YulBlock",
																"src": "6684:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6686:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6686:16:13"
																			},
																			"nativeSrc": "6686:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:18:13"
																		},
																		"nativeSrc": "6686:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "6589:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6589:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6599:34:13",
																						"nodeType": "YulLiteral",
																						"src": "6599:34:13",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6595:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6595:3:13"
																				},
																				"nativeSrc": "6595:39:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6595:39:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6585:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:13"
																		},
																		"nativeSrc": "6585:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6585:50:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "6641:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6641:4:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6647:34:13",
																				"nodeType": "YulLiteral",
																				"src": "6647:34:13",
																				"type": "",
																				"value": "0x7fffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "6637:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6637:3:13"
																		},
																		"nativeSrc": "6637:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6637:45:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6582:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6582:2:13"
																},
																"nativeSrc": "6582:101:13",
																"nodeType": "YulFunctionCall",
																"src": "6582:101:13"
															},
															"nativeSrc": "6579:127:13",
															"nodeType": "YulIf",
															"src": "6579:127:13"
														}
													]
												},
												"name": "checked_sub_t_int128",
												"nativeSrc": "6463:249:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6493:1:13",
														"nodeType": "YulTypedName",
														"src": "6493:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6496:1:13",
														"nodeType": "YulTypedName",
														"src": "6496:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6502:4:13",
														"nodeType": "YulTypedName",
														"src": "6502:4:13",
														"type": ""
													}
												],
												"src": "6463:249:13"
											},
											{
												"body": {
													"nativeSrc": "6764:88:13",
													"nodeType": "YulBlock",
													"src": "6764:88:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6795:22:13",
																"nodeType": "YulBlock",
																"src": "6795:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6797:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6797:16:13"
																			},
																			"nativeSrc": "6797:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6797:18:13"
																		},
																		"nativeSrc": "6797:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6797:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6780:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6780:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6791:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6791:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6787:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:13"
																		},
																		"nativeSrc": "6787:6:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6777:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6777:2:13"
																},
																"nativeSrc": "6777:17:13",
																"nodeType": "YulFunctionCall",
																"src": "6777:17:13"
															},
															"nativeSrc": "6774:43:13",
															"nodeType": "YulIf",
															"src": "6774:43:13"
														},
														{
															"nativeSrc": "6826:20:13",
															"nodeType": "YulAssignment",
															"src": "6826:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6837:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6837:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6844:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6844:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6833:3:13"
																},
																"nativeSrc": "6833:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6833:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6826:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6826:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6717:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6746:5:13",
														"nodeType": "YulTypedName",
														"src": "6746:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6756:3:13",
														"nodeType": "YulTypedName",
														"src": "6756:3:13",
														"type": ""
													}
												],
												"src": "6717:135:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IVeSix_$1191__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_int128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(15, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Point_$1125_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := slt(sub(dataEnd, headStart), 128)\n        if _1 { revert(0, 0) }\n        _1 := 0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(_1, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(_1, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_int128_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_int128_fromMemory(add(headStart, 32)))\n        let value := _1\n        value := mload(add(headStart, 64))\n        mstore(add(memPtr, 64), value)\n        let value_1 := _1\n        value_1 := mload(add(headStart, 96))\n        mstore(add(memPtr, 96), value_1)\n        value0 := memPtr\n    }\n    function checked_mul_t_int128(x, y) -> product\n    {\n        let product_raw := mul(signextend(15, x), signextend(15, y))\n        product := signextend(15, product_raw)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_sub_t_int128(x, y) -> diff\n    {\n        diff := sub(signextend(15, x), signextend(15, y))\n        if or(slt(diff, not(0x7fffffffffffffffffffffffffffffff)), sgt(diff, 0x7fffffffffffffffffffffffffffffff)) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1235": [
									{
										"length": 32,
										"start": 442
									},
									{
										"length": 32,
										"start": 795
									},
									{
										"length": 32,
										"start": 1071
									},
									{
										"length": 32,
										"start": 1252
									},
									{
										"length": 32,
										"start": 1506
									},
									{
										"length": 32,
										"start": 2216
									},
									{
										"length": 32,
										"start": 2842
									},
									{
										"length": 32,
										"start": 3026
									},
									{
										"length": 32,
										"start": 3345
									},
									{
										"length": 32,
										"start": 3579
									},
									{
										"length": 32,
										"start": 4076
									},
									{
										"length": 32,
										"start": 4297
									}
								],
								"1238": [
									{
										"length": 32,
										"start": 554
									},
									{
										"length": 32,
										"start": 1382
									},
									{
										"length": 32,
										"start": 1705
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c806398a3f422116100a2578063d1d58b2511610071578063d1d58b251461024c578063e6e00a8a1461025f578063eeff799a1461027f578063f2fde38b14610292578063f6dd9e43146102a557600080fd5b806398a3f422146101dc578063af364c05146101fc578063c8f33c911461021c578063d1af0c7d1461022557600080fd5b806378e97925116100e957806378e979251461015b5780638736659b146101645780638da5cb5b1461016d578063925489a81461019257806392815606146101b557600080fd5b8063069bf5811461011b578063379607f5146101365780636f4a2cd014610149578063715018a614610153575b600080fd5b6101236102c5565b6040519081526020015b60405180910390f35b6101236101443660046111e1565b6102f5565b61015161067d565b005b61015161087f565b61012360025481565b61012360045481565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161012d565b6101a56101a03660046111fa565b610891565b604051901515815260200161012d565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b6101236101ea3660046111e1565b60066020526000908152604090205481565b61012361020a3660046111e1565b60076020526000908152604090205481565b61012360035481565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b61012361025a3660046111e1565b6109f8565b61012361026d3660046111e1565b60056020526000908152604090205481565b61012361028d3660046111e1565b610a26565b6101516102a0366004611286565b610a59565b6101236102b33660046111e1565b60086020526000908152604090205481565b60008062093a806102d681426112b9565b6102e091906112db565b60009081526008602052604090205492915050565b60006102ff610a9c565b60405163430c208160e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e91906112f2565b6103ab5760405163ea8e4eb560e01b815260040160405180910390fd5b6004544211156103bd576103bd610af5565b600062093a806103cd81426112b9565b6103d791906112db565b905060006103e58483610cc0565b90508060000361040857604051630fec21fd60e21b815260040160405180910390fd5b600084815260056020526040908190208390555163391044d760e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e441135c90602401602060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a29190611314565b600085815260066020526040812091909155600980548392906104c690849061132d565b90915550506040516331a9108f60e11b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105579190611340565b905061058d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284610f0d565b6000858152600660205260409081902054905163391044d760e21b81526004810187905286917f5ce397c9bb9806fe77f5c7c28202740f0805fc106a10f4d38821a4b65c768345918591906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e441135c90602401602060405180830381865afa158015610629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064d9190611314565b6040805193845260208401929092529082015260600160405180910390a25091505061067860018055565b919050565b610685610a9c565b6009546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107149190611314565b61071e919061132d565b90508060000361074157604051630fec21fd60e21b815260040160405180910390fd5b600062093a8061075181426112b9565b61075b91906112db565b9050600062093a8060035483610771919061132d565b61077b91906112b9565b9050806000036107ae57600082815260076020526040812080548592906107a390849061135d565b909155506108149050565b60006107ba82856112b9565b9050600062093a806003546107cf919061135d565b90505b83811161081157600081815260076020526040812080548492906107f790849061135d565b9091555061080a905062093a808261135d565b90506107d2565b50505b8260096000828254610826919061135d565b9091555050600382905560408051428152602081018590527f29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c910160405180910390a1610871610af5565b50505061087d60018055565b565b610887610f64565b61087d6000610f91565b600061089b610a9c565b60005b828110156109ea577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663430c2081338686858181106108e8576108e8611370565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401602060405180830381865afa15801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e91906112f2565b156109e2573063379607f585858481811061097b5761097b611370565b905060200201356040518263ffffffff1660e01b81526004016109a091815260200190565b6020604051808303816000875af19250505080156109db575060408051601f3d908101601f191682019092526109d891810190611314565b60015b156109e257505b60010161089e565b505060018080555b92915050565b60008062093a80610a0981426112b9565b610a1391906112db565b9050610a1f8382610cc0565b9392505050565b600060078162093a80610a3981866112b9565b610a4391906112db565b8152602001908152602001600020549050919050565b610a61610f64565b6001600160a01b038116610a9057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610a9981610f91565b50565b600260015403610aee5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a87565b6002600155565b600062093a80610b0581426112b9565b610b0f91906112db565b9050600060045490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c2c4c5c16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b7357600080fd5b505af1158015610b87573d6000803e3d6000fd5b5050505060005b601481108015610b9e5750828211155b15610cb9576000610bae83610fe1565b60405163d1febfb960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d1febfb990602401608060405180830381865afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611398565b905060008160400151851115610c5f576040820151610c5c908661132d565b90505b6000818360200151610c71919061141c565b8351610c7d9190611443565b600f0b90506000868152600860205260409020819055610ca062093a808761135d565b9550505050508080610cb190611482565b915050610b8e565b5060045550565b600082815260066020526040812054808203610cda575060015b60008481526005602052604081205490819003610dc2576040516309bb79ed60e11b815260048101869052602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631376f3da90604401608060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611398565b905062093a8080600162093a808460400151610da0919061135d565b610daa919061132d565b610db491906112b9565b610dbe91906112db565b9150505b6000805b603281108015610dd65750858311155b15610f0357604051637028a55d60e11b815260048101889052602481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e0514aba90604401602060405180830381865afa158015610e4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6e9190611314565b6000858152600860205260409020549091508115801590610e8f5750600081115b8015610ea8575060008581526007602052604090205415155b15610edf576000858152600760205260409020548190610ec890846112db565b610ed291906112b9565b610edc908561135d565b93505b610eec62093a808661135d565b945050508080610efb90611482565b915050610dc6565b5095945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f5f90849061116a565b505050565b6000546001600160a01b0316331461087d5760405163118cdaa760e01b8152336004820152602401610a87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c9190611314565b905060005b608081101561116157818310156111615760006002611090848661135d565b61109b90600261135d565b6110a591906112b9565b60405163d1febfb960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d1febfb990602401608060405180830381865afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611398565b90508681604001511161114957819450611157565b61115460018361132d565b93505b5050600101611071565b50909392505050565b600080602060008451602086016000885af18061118d576040513d6000823e3d81fd5b50506000513d915081156111a55780600114156111b2565b6001600160a01b0384163b155b156111db57604051635274afe760e01b81526001600160a01b0385166004820152602401610a87565b50505050565b6000602082840312156111f357600080fd5b5035919050565b6000806020838503121561120d57600080fd5b823567ffffffffffffffff81111561122457600080fd5b8301601f8101851361123557600080fd5b803567ffffffffffffffff81111561124c57600080fd5b8560208260051b840101111561126157600080fd5b6020919091019590945092505050565b6001600160a01b0381168114610a9957600080fd5b60006020828403121561129857600080fd5b8135610a1f81611271565b634e487b7160e01b600052601160045260246000fd5b6000826112d657634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176109f2576109f26112a3565b60006020828403121561130457600080fd5b81518015158114610a1f57600080fd5b60006020828403121561132657600080fd5b5051919050565b818103818111156109f2576109f26112a3565b60006020828403121561135257600080fd5b8151610a1f81611271565b808201808211156109f2576109f26112a3565b634e487b7160e01b600052603260045260246000fd5b8051600f81900b811461067857600080fd5b600060808284031280156113ab57600080fd5b600090506040516080810181811067ffffffffffffffff821117156113de57634e487b7160e01b83526041600452602483fd5b6040526113ea84611386565b81526113f860208501611386565b60208201526040848101519082015260609384015193810193909352509092915050565b600082600f0b82600f0b0280600f0b915080821461143c5761143c6112a3565b5092915050565b600f82810b9082900b036f7fffffffffffffffffffffffffffffff1981126f7fffffffffffffffffffffffffffffff821317156109f2576109f26112a3565b600060018201611494576114946112a3565b506001019056fea26469706673582212205eac481c53f47676afc425a1b96a5e54985d4eab7cb3cb92dcba9e140abfa79a64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98A3F422 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1D58B25 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1D58B25 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xE6E00A8A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEEFF799A EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF6DD9E43 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98A3F422 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xAF364C05 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E97925 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8736659B EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x925489A8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x92815606 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69BF581 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x6F4A2CD0 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x123 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x17A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x93A80 PUSH2 0x2D6 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BD PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x3CD DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E5 DUP5 DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFEC21FD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH4 0x391044D7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE441135C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4C6 SWAP1 DUP5 SWAP1 PUSH2 0x132D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP PUSH2 0x58D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x391044D7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE DUP7 SWAP2 PUSH32 0x5CE397C9BB9806FE77F5C7C28202740F0805FC106A10F4D38821A4B65C768345 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE441135C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 POP POP PUSH2 0x678 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFEC21FD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0x751 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93A80 PUSH1 0x3 SLOAD DUP4 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7AE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x7A3 SWAP1 DUP5 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x814 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP3 DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93A80 PUSH1 0x3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x811 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7F7 SWAP1 DUP5 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x80A SWAP1 POP PUSH3 0x93A80 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP PUSH2 0x7D2 JUMP JUMPDEST POP POP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x29E98BA00D07F171959C4DDCD2F3020DEBC7C52CF537A034D7E664340D098C6C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x871 PUSH2 0xAF5 JUMP JUMPDEST POP POP POP PUSH2 0x87D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x887 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x87D PUSH1 0x0 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9EA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x430C2081 CALLER DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x8E8 JUMPI PUSH2 0x8E8 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST ISZERO PUSH2 0x9E2 JUMPI ADDRESS PUSH4 0x379607F5 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x9E2 JUMPI POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x89E JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 DUP1 SSTORE JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x93A80 PUSH2 0xA09 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH2 0xA1F DUP4 DUP3 PUSH2 0xCC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP2 PUSH3 0x93A80 PUSH2 0xA39 DUP2 DUP7 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xF91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xB05 DUP2 TIMESTAMP PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2C4C5C1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT DUP1 ISZERO PUSH2 0xB9E JUMPI POP DUP3 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 PUSH2 0xBAE DUP4 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1FEBFB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD1FEBFB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD DUP6 GT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC5C SWAP1 DUP7 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST DUP4 MLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xCA0 PUSH3 0x93A80 DUP8 PUSH2 0x135D JUMP JUMPDEST SWAP6 POP POP POP POP POP DUP1 DUP1 PUSH2 0xCB1 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB8E JUMP JUMPDEST POP PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP3 SUB PUSH2 0xCDA JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BB79ED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1376F3DA SWAP1 PUSH1 0x44 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP PUSH3 0x93A80 DUP1 PUSH1 0x1 PUSH3 0x93A80 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xDA0 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x32 DUP2 LT DUP1 ISZERO PUSH2 0xDD6 JUMPI POP DUP6 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7028A55D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE0514ABA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE8F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0xEA8 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xEC8 SWAP1 DUP5 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xEDC SWAP1 DUP6 PUSH2 0x135D JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0xEEC PUSH3 0x93A80 DUP7 PUSH2 0x135D JUMP JUMPDEST SWAP5 POP POP POP DUP1 DUP1 PUSH2 0xEFB SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC6 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0x116A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1048 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106C SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1161 JUMPI DUP2 DUP4 LT ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0x1090 DUP5 DUP7 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x109B SWAP1 PUSH1 0x2 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD1FEBFB9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xD1FEBFB9 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1134 SWAP2 SWAP1 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 PUSH1 0x40 ADD MLOAD GT PUSH2 0x1149 JUMPI DUP2 SWAP5 POP PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x1154 PUSH1 0x1 DUP4 PUSH2 0x132D JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1071 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x118D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x11A5 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA1F DUP2 PUSH2 0x1271 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA1F DUP2 PUSH2 0x1271 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT DUP1 ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x13EA DUP5 PUSH2 0x1386 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x13F8 PUSH1 0x20 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP5 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND DUP3 PUSH1 0xF SIGNEXTEND MUL DUP1 PUSH1 0xF SIGNEXTEND SWAP2 POP DUP1 DUP3 EQ PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x12A3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT OR ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1494 JUMPI PUSH2 0x1494 PUSH2 0x12A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xAC BASEFEE SHR MSTORE8 DELEGATECALL PUSH23 0x76AFC425A1B96A5E54985D4EAB7CB3CB92DCBA9E140ABF 0xA7 SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "413:6627:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6859:178;;;:::i;:::-;;;160:25:13;;;148:2;133:18;6859:178:12;;;;;;;;5405:940;;;;;;:::i;:::-;;:::i;1840:990::-;;;:::i;:::-;;2293:101:0;;;:::i;941:24:12:-;;;;;;1008:25;;;;;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;545:32:13;;;527:51;;515:2;500:18;1638:85:0;381:203:13;6353:324:12;;;;;;:::i;:::-;;:::i;:::-;;;1369:14:13;;1362:22;1344:41;;1332:2;1317:18;6353:324:12;1204:187:13;856:29:12;;;;;1103:45;;;;;;:::i;:::-;;;;;;;;;;;;;;1155:48;;;;;;:::i;:::-;;;;;;;;;;;;;;972:29;;;;;;892:36;;;;;4194:195;;;;;;:::i;:::-;;:::i;1046:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6708:143;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1210:48:12:-;;;;;;:::i;:::-;;;;;;;;;;;;;;6859:178;6912:7;;759:6;6955:22;759:6;6955:15;:22;:::i;:::-;6954:31;;;;:::i;:::-;7003:26;;;;:13;:26;;;;;;;6859:178;-1:-1:-1;;6859:178:12:o;5405:940::-;5468:7;2261:21:4;:19;:21::i;:::-;5493:44:12::1;::::0;-1:-1:-1;;;5493:44:12;;5517:10:::1;5493:44;::::0;::::1;2930:51:13::0;2997:18;;;2990:34;;;5493:5:12::1;-1:-1:-1::0;;;;;5493:23:12::1;::::0;::::1;::::0;2903:18:13;;5493:44:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5488:73;;5546:15;;-1:-1:-1::0;;;5546:15:12::1;;;;;;;;;;;5488:73;5596:10;;5578:15;:28;5574:78;;;5623:17;:15;:17::i;:::-;5664:19;759:6;5687:22;759:6:::0;5687:15:::1;:22;:::i;:::-;5686:31;;;;:::i;:::-;5664:53;;5728:14;5745:37;5761:7;5770:11;5745:15;:37::i;:::-;5728:54;;5797:6;5807:1;5797:11:::0;5793:35:::1;;5817:11;;-1:-1:-1::0;;;5817:11:12::1;;;;;;;;;;;5793:35;5871:24;::::0;;;:15:::1;:24;::::0;;;;;;:38;;;5942:31;-1:-1:-1;;;5942:31:12;;::::1;::::0;::::1;160:25:13::0;;;5942:5:12::1;-1:-1:-1::0;;;;;5942:22:12::1;::::0;::::1;::::0;133:18:13;;5942:31:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5920:19;::::0;;;:10:::1;:19;::::0;;;;:53;;;;6029:14:::1;:24:::0;;6047:6;;5920:19;6029:24:::1;::::0;6047:6;;6029:24:::1;:::i;:::-;::::0;;;-1:-1:-1;;6119:22:12::1;::::0;-1:-1:-1;;;6119:22:12;;::::1;::::0;::::1;160:25:13::0;;;6103:13:12::1;::::0;6119:5:::1;-1:-1:-1::0;;;;;6119:13:12::1;::::0;::::1;::::0;133:18:13;;6119:22:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6103:38:::0;-1:-1:-1;6152:40:12::1;-1:-1:-1::0;;;;;6152:12:12::1;:25;6103:38:::0;6185:6;6152:25:::1;:40::i;:::-;6250:19;::::0;;;:10:::1;:19;::::0;;;;;;;6271:31;;-1:-1:-1;;;6271:31:12;;::::1;::::0;::::1;160:25:13::0;;;6233:7:12;;6218:85:::1;::::0;6242:6;;6250:19;-1:-1:-1;;;;;6271:5:12::1;:22;::::0;::::1;::::0;133:18:13;;6271:31:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6218:85;::::0;;4143:25:13;;;4199:2;4184:18;;4177:34;;;;4227:18;;;4220:34;4131:2;4116:18;6218:85:12::1;;;;;;;-1:-1:-1::0;6331:6:12;-1:-1:-1;;2303:20:4;1716:1;2809:22;;2629:209;2303:20;5405:940:12;;;:::o;1840:990::-;2261:21:4;:19;:21::i;:::-;1963:14:12::1;::::0;1923:37:::1;::::0;-1:-1:-1;;;1923:37:12;;1954:4:::1;1923:37;::::0;::::1;527:51:13::0;1902:18:12::1;::::0;1963:14;-1:-1:-1;;;;;1923:12:12::1;:22;::::0;::::1;::::0;500:18:13;;1923:37:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;;;:::i;:::-;1902:75;;1992:10;2006:1;1992:15:::0;1988:39:::1;;2016:11;;-1:-1:-1::0;;;2016:11:12::1;;;;;;;;;;;1988:39;2040:19;759:6;2063:22;759:6:::0;2063:15:::1;:22;:::i;:::-;2062:31;;;;:::i;:::-;2040:53;;2104:24;759:6;2146:14;;2132:11;:28;;;;:::i;:::-;2131:37;;;;:::i;:::-;2104:64;;2193:16;2213:1;2193:21:::0;2189:443:::1;;2287:26;::::0;;;:13:::1;:26;::::0;;;;:40;;2317:10;;2287:26;:40:::1;::::0;2317:10;;2287:40:::1;:::i;:::-;::::0;;;-1:-1:-1;2189:443:12::1;::::0;-1:-1:-1;2189:443:12::1;;2414:22;2439:29;2452:16:::0;2439:10;:29:::1;:::i;:::-;2414:54;;2488:9;759:6;2500:14;;:21;;;;:::i;:::-;2488:33;;2483:138;2528:11;2523:1;:16;2483:138;;2571:16;::::0;;;:13:::1;:16;::::0;;;;:34;;2591:14;;2571:16;:34:::1;::::0;2591:14;;2571:34:::1;:::i;:::-;::::0;;;-1:-1:-1;2541:9:12::1;::::0;-1:-1:-1;759:6:12::1;2541:9:::0;::::1;:::i;:::-;;;2483:138;;;;2345:287;2189:443;2662:10;2644:14;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2683:14:12::1;:28:::0;;;2737:47:::1;::::0;;2756:15:::1;4569:25:13::0;;4625:2;4610:18;;4603:34;;;2737:47:12::1;::::0;4542:18:13;2737:47:12::1;;;;;;;2805:17;:15;:17::i;:::-;1891:939;;;2303:20:4::0;1716:1;2809:22;;2629:209;2303:20;1840:990:12:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;6353:324:12:-:0;6432:4;2261:21:4;:19;:21::i;:::-;6454:9:12::1;6449:199;6469:19:::0;;::::1;6449:199;;;6514:5;-1:-1:-1::0;;;;;6514:23:12::1;;6538:10;6550:8;;6559:1;6550:11;;;;;;;:::i;:::-;6514:48;::::0;-1:-1:-1;;;;;;6514:48:12::1;::::0;;;;;;-1:-1:-1;;;;;2948:32:13;;;6514:48:12::1;::::0;::::1;2930:51:13::0;6550:11:12::1;;::::0;;;::::1;;2997:18:13::0;;;2990:34;-1:-1:-1;2903:18:13;;6514:48:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6510:127;;;6587:4;:10;6598:8:::0;;6607:1;6598:11;;::::1;;;;;:::i;:::-;;;;;;;6587:23;;;;;;;;;;;;;160:25:13::0;;148:2;133:18;;14:177;6587:23:12::1;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6587:23:12::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;6587:23:12::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;6583:39:::0;::::1;;;;6490:3;;6449:199;;;-1:-1:-1::0;;6665:4:12::1;2809:22:4::0;;;2303:20;6353:324:12;;;;:::o;4194:195::-;4253:7;;759:6;4296:22;759:6;4296:15;:22;:::i;:::-;4295:31;;;;:::i;:::-;4273:53;;4344:37;4360:7;4369:11;4344:15;:37::i;:::-;4337:44;4194:195;-1:-1:-1;;;4194:195:12:o;6708:143::-;6776:7;6803:13;6776:7;759:6;6818:16;759:6;6818:9;:16;:::i;:::-;6817:25;;;;:::i;:::-;6803:40;;;;;;;;;;;;6796:47;;6708:143;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;527:51:13::0;500:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:4;;4982:2:13;2460:63:4;;;4964:21:13;5021:2;5001:18;;;4994:30;5060:33;5040:18;;;5033:61;5111:18;;2460:63:4;4780:355:13;2460:63:4;1759:1;2598:7;:18;2336:287::o;2838:770:12:-;2885:19;759:6;2908:22;759:6;2908:15;:22;:::i;:::-;2907:31;;;;:::i;:::-;2885:53;;2949:9;2961:10;;2949:22;;2992:5;-1:-1:-1;;;;;2992:16:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3028:9;3023:543;3047:2;3043:1;:6;:26;;;;;3058:11;3053:1;:16;;3043:26;3023:543;;;3091:13;3107:25;3130:1;3107:22;:25::i;:::-;3175:26;;-1:-1:-1;;;3175:26:12;;;;;160:25:13;;;3091:41:12;;-1:-1:-1;3147:25:12;;-1:-1:-1;;;;;3175:5:12;:19;;;;133:18:13;;3175:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3147:54;;3230:9;3266:5;:8;;;3262:1;:12;3258:86;;;3318:8;;;;3314:12;;:1;:12;:::i;:::-;3295:33;;3258:86;3372:14;3431:2;3417:5;:11;;;:16;;;;:::i;:::-;3404:10;;:29;;;;:::i;:::-;3397:37;;;-1:-1:-1;3505:16:12;;;;:13;:16;;;;;:25;;;3545:9;759:6;3519:1;3545:9;:::i;:::-;;;3076:490;;;;3071:3;;;;;:::i;:::-;;;;3023:543;;;-1:-1:-1;3586:10:12;:14;-1:-1:-1;2838:770:12:o;4397:1000::-;4479:7;4519:19;;;:10;:19;;;;;;4553:14;;;4549:33;;-1:-1:-1;4581:1:12;4549:33;4603:18;4624:24;;;:15;:24;;;;;;;4663:15;;;4659:193;;4727:44;;-1:-1:-1;;;4727:44:12;;;;;4569:25:13;;;4610:18;;;4603:34;;;4695:29:12;;4727:5;-1:-1:-1;;;;;4727:24:12;;;;4542:18:13;;4727:44:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4695:76;;759:6;;4823:1;759:6;4801:9;:12;;;:19;;;;:::i;:::-;:23;;;;:::i;:::-;4800:32;;;;:::i;:::-;4799:41;;;;:::i;:::-;4786:54;;4680:172;4659:193;4872:20;;4913:437;4937:2;4933:1;:6;:31;;;;;4957:7;4943:10;:21;;4933:31;4913:437;;;5004:41;;-1:-1:-1;;;5004:41:12;;;;;4569:25:13;;;4610:18;;;4603:34;;;4986:15:12;;5004:5;-1:-1:-1;;;;;5004:20:12;;;;4542:18:13;;5004:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5060:14;5077:25;;;:13;:25;;;;;;4986:59;;-1:-1:-1;5135:11:12;;;;;:25;;;5159:1;5150:6;:10;5135:25;:58;;;;-1:-1:-1;5192:1:12;5164:25;;;:13;:25;;;;;;:29;;5135:58;5131:161;;;5241:25;;;;:13;:25;;;;;;5270:6;;5231:35;;:7;:35;:::i;:::-;5230:46;;;;:::i;:::-;5214:62;;;;:::i;:::-;;;5131:161;5320:18;759:6;5320:18;;:::i;:::-;;;4971:379;;4966:3;;;;;:::i;:::-;;;;4913:437;;;-1:-1:-1;5377:12:12;4397:1000;-1:-1:-1;;;;;4397:1000:12:o;1271:160:6:-;1380:43;;;-1:-1:-1;;;;;2948:32:13;;1380:43:6;;;2930:51:13;2997:18;;;;2990:34;;;1380:43:6;;;;;;;;;;2903:18:13;;;;1380:43:6;;;;;;;;-1:-1:-1;;;;;1380:43:6;-1:-1:-1;;;1380:43:6;;;1353:71;;1373:5;;1353:19;:71::i;:::-;1271:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;527:51:13;500:18;;1901:40:0;381:203:13;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3616:570:12:-;3690:7;3710:11;3724:1;3710:15;;3736:11;3750:5;-1:-1:-1;;;;;3750:11:12;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3736:27;;3789:9;3784:364;3808:3;3804:1;:7;3784:364;;;3844:3;3837;:10;3833:21;3849:5;3833:21;3883:11;3915:1;3898:9;3904:3;3898;:9;:::i;:::-;:13;;3910:1;3898:13;:::i;:::-;3897:19;;;;:::i;:::-;3959:24;;-1:-1:-1;;;3959:24:12;;;;;160:25:13;;;3883:33:12;;-1:-1:-1;3931:25:12;;-1:-1:-1;;;;;3959:5:12;:19;;;;133:18:13;;3959:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3931:52;;4028:9;4016:5;:8;;;:21;4012:125;;4064:3;4058:9;;4012:125;;;4114:7;4120:1;4114:3;:7;:::i;:::-;4108:13;;4012:125;-1:-1:-1;;3813:3:12;;3784:364;;;-1:-1:-1;4175:3:12;;3616:570;-1:-1:-1;;;3616:570:12:o;7738:720:6:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;-1:-1:-1;;8284:1:6;8278:8;8234:16;;-1:-1:-1;8310:15:6;;:68;;8362:11;8377:1;8362:16;;8310:68;;;-1:-1:-1;;;;;8328:26:6;;;:31;8310:68;8306:146;;;8401:40;;-1:-1:-1;;;8401:40:6;;-1:-1:-1;;;;;545:32:13;;8401:40:6;;;527:51:13;500:18;;8401:40:6;381:203:13;8306:146:6;7808:650;;7738:720;;:::o;196:180:13:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:13;;196:180;-1:-1:-1;196:180:13:o;589:610::-;675:6;683;736:2;724:9;715:7;711:23;707:32;704:52;;;752:1;749;742:12;704:52;792:9;779:23;825:18;817:6;814:30;811:50;;;857:1;854;847:12;811:50;880:22;;933:4;925:13;;921:27;-1:-1:-1;911:55:13;;962:1;959;952:12;911:55;1002:2;989:16;1028:18;1020:6;1017:30;1014:50;;;1060:1;1057;1050:12;1014:50;1113:7;1108:2;1098:6;1095:1;1091:14;1087:2;1083:23;1079:32;1076:45;1073:65;;;1134:1;1131;1124:12;1073:65;1165:2;1157:11;;;;;1187:6;;-1:-1:-1;589:610:13;-1:-1:-1;;;589:610:13:o;1841:131::-;-1:-1:-1;;;;;1916:31:13;;1906:42;;1896:70;;1962:1;1959;1952:12;1977:247;2036:6;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2144:9;2131:23;2163:31;2188:5;2163:31;:::i;2229:127::-;2290:10;2285:3;2281:20;2278:1;2271:31;2321:4;2318:1;2311:15;2345:4;2342:1;2335:15;2361:217;2401:1;2427;2417:132;;2471:10;2466:3;2462:20;2459:1;2452:31;2506:4;2503:1;2496:15;2534:4;2531:1;2524:15;2417:132;-1:-1:-1;2563:9:13;;2361:217::o;2583:168::-;2656:9;;;2687;;2704:15;;;2698:22;;2684:37;2674:71;;2725:18;;:::i;3035:277::-;3102:6;3155:2;3143:9;3134:7;3130:23;3126:32;3123:52;;;3171:1;3168;3161:12;3123:52;3203:9;3197:16;3256:5;3249:13;3242:21;3235:5;3232:32;3222:60;;3278:1;3275;3268:12;3317:230;3387:6;3440:2;3428:9;3419:7;3415:23;3411:32;3408:52;;;3456:1;3453;3446:12;3408:52;-1:-1:-1;3501:16:13;;3317:230;-1:-1:-1;3317:230:13:o;3552:128::-;3619:9;;;3640:11;;;3637:37;;;3654:18;;:::i;3685:251::-;3755:6;3808:2;3796:9;3787:7;3783:23;3779:32;3776:52;;;3824:1;3821;3814:12;3776:52;3856:9;3850:16;3875:31;3900:5;3875:31;:::i;4265:125::-;4330:9;;;4351:10;;;4348:36;;;4364:18;;:::i;4648:127::-;4709:10;4704:3;4700:20;4697:1;4690:31;4740:4;4737:1;4730:15;4764:4;4761:1;4754:15;5140:166;5218:13;;5271:2;5260:21;;;5250:32;;5240:60;;5296:1;5293;5286:12;5311:901;5404:6;5464:3;5452:9;5443:7;5439:23;5435:33;5480:2;5477:22;;;5495:1;5492;5485:12;5477:22;5514:1;5508:7;;5544:2;5538:9;5586:3;5578:6;5574:16;5656:6;5644:10;5641:22;5620:18;5608:10;5605:34;5602:62;5599:187;;;-1:-1:-1;;;5687:32:13;;5742:4;5739:1;5732:15;5771:4;5694:2;5760:16;5599:187;5802:2;5795:22;5841:39;5870:9;5841:39;:::i;:::-;5833:6;5826:55;5914:48;5958:2;5947:9;5943:18;5914:48;:::i;:::-;5909:2;5897:15;;5890:73;6026:2;6011:18;;;6005:25;6046:15;;;6039:30;6136:2;6121:18;;;6115:25;6156:15;;;6149:32;;;;-1:-1:-1;5901:6:13;;5311:901;-1:-1:-1;;5311:901:13:o;6217:241::-;6256:7;6335:1;6331:2;6320:17;6316:1;6312:2;6301:17;6297:41;6373:11;6369:2;6358:27;6347:38;;6416:11;6407:7;6404:24;6394:58;;6432:18;;:::i;:::-;6394:58;6217:241;;;;:::o;6463:249::-;6563:2;6552:17;;;6533;;;;6529:41;-1:-1:-1;;6585:50:13;;6647:34;6637:45;;6582:101;6579:127;;;6686:18;;:::i;6717:135::-;6756:3;6777:17;;;6774:43;;6797:18;;:::i;:::-;-1:-1:-1;6844:1:13;6833:13;;6717:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1065800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim(uint256)": "infinite",
								"claimMany(uint256[])": "infinite",
								"claimable(uint256)": "infinite",
								"distributeRewards()": "infinite",
								"getCurrentVeSupply()": "2552",
								"getWeeklyRewards(uint256)": "2681",
								"lastUpdateTime()": "2351",
								"owner()": "2387",
								"renounceOwnership()": "infinite",
								"rewardsToken()": "infinite",
								"startTime()": "2307",
								"timeCursor()": "2329",
								"tokenEpoch(uint256)": "2450",
								"tokenTimeCursor(uint256)": "2471",
								"transferOwnership(address)": "infinite",
								"veSix()": "infinite",
								"veSupplyCache(uint256)": "2537",
								"weeklyRewards(uint256)": "2472"
							},
							"internal": {
								"_calculateClaim(uint256,uint256)": "infinite",
								"_findEpochForTimestamp(uint256)": "infinite",
								"_updateVeSupply()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1438,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1438,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1507,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1507,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1524,
									"end": 1544,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1544,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1544,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1544,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1575,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1524,
									"end": 1575,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1548,
									"end": 1575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1548,
									"end": 1575,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1548,
									"end": 1575,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1575,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1524,
									"end": 1575,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1520,
									"end": 1600,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1520,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1520,
									"end": 1600,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6C4247B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1584,
									"end": 1600,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1520,
									"end": 1600,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1520,
									"end": 1600,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1621,
									"end": 1643,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1621,
									"end": 1643,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1621,
									"end": 1643,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1621,
									"end": 1643,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1621,
									"end": 1643,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1654,
									"end": 1690,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1654,
									"end": 1690,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1654,
									"end": 1690,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1654,
									"end": 1690,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 759,
									"end": 765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "93A80"
								},
								{
									"begin": 1724,
									"end": 1746,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 759,
									"end": 765,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1739,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1746,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1724,
									"end": 1746,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1746,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1724,
									"end": 1746,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1723,
									"end": 1754,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1723,
									"end": 1754,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1720,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1711,
									"end": 1754,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1754,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1765,
									"end": 1791,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1791,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1802,
									"end": 1812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1802,
									"end": 1824,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 702,
									"end": 919,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 702,
									"end": 919,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 742,
									"end": 743,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 758,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 758,
									"end": 890,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 812,
									"end": 822,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 810,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 824,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 847,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 844,
									"end": 845,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 837,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 875,
									"end": 879,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 872,
									"end": 873,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 880,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 758,
									"end": 890,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 758,
									"end": 890,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 904,
									"end": 913,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 904,
									"end": 913,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 702,
									"end": 919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 997,
									"end": 1006,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 997,
									"end": 1006,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 997,
									"end": 1006,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1028,
									"end": 1037,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1028,
									"end": 1037,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1045,
									"end": 1060,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1045,
									"end": 1060,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1045,
									"end": 1060,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1039,
									"end": 1061,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1039,
									"end": 1061,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1062,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1015,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1015,
									"end": 1183,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1115,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1100,
									"end": 1103,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1096,
									"end": 1116,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1093,
									"end": 1094,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1144,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1137,
									"end": 1138,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1130,
									"end": 1145,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1172,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1165,
									"end": 1166,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1173,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1015,
									"end": 1183,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1015,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 924,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1238"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1235"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 7040,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eac481c53f47676afc425a1b96a5e54985d4eab7cb3cb92dcba9e140abfa79a64736f6c634300081b0033",
									".code": [
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "98A3F422"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "D1D58B25"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "D1D58B25"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "E6E00A8A"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "EEFF799A"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "F6DD9E43"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "98A3F422"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "AF364C05"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "C8F33C91"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "D1AF0C7D"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "78E97925"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "78E97925"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "8736659B"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "925489A8"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "92815606"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "69BF581"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "379607F5"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "6F4A2CD0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 413,
											"end": 7040,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6859,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 5405,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 5405,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1840,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 965,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 941,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 941,
											"end": 965,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 941,
											"end": 965,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 941,
											"end": 965,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 941,
											"end": 965,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 577,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 527,
											"end": 578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 381,
											"end": 584,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 6353,
											"end": 6677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 6353,
											"end": 6677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1383,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1383,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1344,
											"end": 1385,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1344,
											"end": 1385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1204,
											"end": 1391,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1103,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1155,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 892,
											"end": 928,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 892,
											"end": 928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 892,
											"end": 928,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1238"
										},
										{
											"begin": 892,
											"end": 928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 928,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 4194,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 4194,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1046,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1096,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 6708,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 6708,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1258,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6912,
											"end": 6919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6919,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6970,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 6955,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 6954,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 6954,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7016,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 7037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 7037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5493,
											"end": 5537,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "430C2081"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5527,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5493,
											"end": 5537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5498,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "430C2081"
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5537,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 5493,
											"end": 5537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 5493,
											"end": 5537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 5488,
											"end": 5561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5561,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 5488,
											"end": 5561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5596,
											"end": 5606,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5606,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5574,
											"end": 5652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5623,
											"end": 5638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 5623,
											"end": 5640,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5623,
											"end": 5640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 5687,
											"end": 5709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5702,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5687,
											"end": 5709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5687,
											"end": 5709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 5686,
											"end": 5717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5761,
											"end": 5768,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 5781,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 5745,
											"end": 5782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 5745,
											"end": 5782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5803,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 5808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5808,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5793,
											"end": 5828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 5793,
											"end": 5828,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FEC21FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5817,
											"end": 5828,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5793,
											"end": 5828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 5793,
											"end": 5828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5871,
											"end": 5895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5895,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5909,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391044D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5942,
											"end": 5973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 5947,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E441135C"
										},
										{
											"begin": 5942,
											"end": 5964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5973,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5942,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5942,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5920,
											"end": 5939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5973,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6029,
											"end": 6053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 6029,
											"end": 6053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6053,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6141,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6119,
											"end": 6141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6119,
											"end": 6141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6124,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6119,
											"end": 6132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 6119,
											"end": 6132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6119,
											"end": 6141,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 6119,
											"end": 6141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6152,
											"end": 6192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6152,
											"end": 6164,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1238"
										},
										{
											"begin": 6152,
											"end": 6177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6152,
											"end": 6177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6152,
											"end": 6192,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6152,
											"end": 6192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6152,
											"end": 6192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6250,
											"end": 6269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391044D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6240,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6240,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5CE397C9BB9806FE77F5C7C28202740F0805FC106A10F4D38821A4B65C768345"
										},
										{
											"begin": 6218,
											"end": 6303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6271,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": 6271,
											"end": 6293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E441135C"
										},
										{
											"begin": 6271,
											"end": 6293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6302,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6271,
											"end": 6302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 6271,
											"end": 6302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6218,
											"end": 6303,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4168,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4168,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4202,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4131,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6303,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 6345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1840,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1238"
										},
										{
											"begin": 1923,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1923,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 500,
											"end": 518,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1923,
											"end": 1960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1923,
											"end": 1960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1923,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1923,
											"end": 1977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 1977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1988,
											"end": 2027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FEC21FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2027,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1988,
											"end": 2027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 2063,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2078,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2063,
											"end": 2085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2063,
											"end": 2085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2062,
											"end": 2093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 2062,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 2146,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2146,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2132,
											"end": 2160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2132,
											"end": 2160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2131,
											"end": 2168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2131,
											"end": 2168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2193,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2213,
											"end": 2214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2214,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2287,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2287,
											"end": 2327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2287,
											"end": 2327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2189,
											"end": 2632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2452,
											"end": 2468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2449,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2439,
											"end": 2468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2439,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 2500,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2500,
											"end": 2514,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2521,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2539,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2571,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2571,
											"end": 2605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2571,
											"end": 2605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2541,
											"end": 2550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2189,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2644,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2644,
											"end": 2672,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2644,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2672,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2683,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2683,
											"end": 2711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2711,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2771,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "29E98BA00D07F171959C4DDCD2F3020DEBC7C52CF537A034D7E664340D098C6C"
										},
										{
											"begin": 2737,
											"end": 2784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2784,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2805,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2805,
											"end": 2822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2805,
											"end": 2822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 2830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6488,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "430C2081"
										},
										{
											"begin": 6538,
											"end": 6548,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6558,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6558,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6559,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6550,
											"end": 6561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6561,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6562,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 6514,
											"end": 6562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6514,
											"end": 6562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6637,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 6510,
											"end": 6637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6591,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "379607F5"
										},
										{
											"begin": 6598,
											"end": 6606,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6606,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6598,
											"end": 6609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6609,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6587,
											"end": 6610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 6587,
											"end": 6610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 6583,
											"end": 6622,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 6583,
											"end": 6622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6490,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6490,
											"end": 6493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 6449,
											"end": 6648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6665,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 4296,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4311,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4296,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4318,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4296,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4295,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4295,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4344,
											"end": 4381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4344,
											"end": 4381,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 4344,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4381,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4389,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6776,
											"end": 6783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6816,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6776,
											"end": 6783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 6818,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6818,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 6818,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6818,
											"end": 6834,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 6818,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 6817,
											"end": 6842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 6817,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6843,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 500,
											"end": 518,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5093,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5033,
											"end": 5094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5111,
											"end": 5129,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5111,
											"end": 5129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4780,
											"end": 5135,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 3608,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2838,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2923,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2908,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2907,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2907,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2971,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2961,
											"end": 2971,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 2997,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH",
											"source": 12,
											"value": "C2C4C5C1"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3043,
											"end": 3044,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3049,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3043,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3107,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3132,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3107,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1FEBFB9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3091,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": 3175,
											"end": 3194,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3194,
											"name": "PUSH",
											"source": 12,
											"value": "D1FEBFB9"
										},
										{
											"begin": 3175,
											"end": 3194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3175,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3263,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3274,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3344,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3258,
											"end": 3344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3318,
											"end": 3326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3326,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3326,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3314,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3344,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3258,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3422,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3417,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 3404,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3404,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3434,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 3397,
											"end": 3434,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3518,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3521,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 3545,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 3071,
											"end": 3074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3023,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3596,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2838,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5397,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4397,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4529,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4567,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4567,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4567,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 4549,
											"end": 4582,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4549,
											"end": 4582,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 4549,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4639,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4678,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4659,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 4659,
											"end": 4852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9BB79ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4732,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "PUSH",
											"source": 12,
											"value": "1376F3DA"
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4727,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4727,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4695,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4695,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4801,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 4801,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4801,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4800,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4799,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4786,
											"end": 4840,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4786,
											"end": 4840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4659,
											"end": 4852,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 4659,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4937,
											"end": 4939,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4933,
											"end": 4934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4964,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4953,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7028A55D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5009,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "PUSH",
											"source": 12,
											"value": "E0514ABA"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5004,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5004,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5090,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5135,
											"end": 5160,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5160,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5160,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5135,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5177,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5189,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5131,
											"end": 5292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5254,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5231,
											"end": 5266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5238,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 5231,
											"end": 5266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5266,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5231,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5230,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5230,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 5214,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5292,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5131,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "93A80"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 5350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 5350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 4966,
											"end": 4969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4913,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5377,
											"end": 5389,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 5397,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4397,
											"end": 5397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 500,
											"end": 518,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 381,
											"end": 584,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 4186,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3616,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "900CF0CF"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3750,
											"end": 3763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3804,
											"end": 3805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3837,
											"end": 3847,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3883,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3904,
											"end": 3907,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3901,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 3898,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3911,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 3898,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3898,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3897,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1FEBFB9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3883,
											"end": 3916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3883,
											"end": 3916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3931,
											"end": 3956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 3964,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1235"
										},
										{
											"begin": 3959,
											"end": 3978,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3978,
											"name": "PUSH",
											"source": 12,
											"value": "D1FEBFB9"
										},
										{
											"begin": 3959,
											"end": 3978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3959,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 3983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4114,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3784,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4186,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 545,
											"end": 577,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 500,
											"end": 518,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 381,
											"end": 584,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 589,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 589,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 675,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 715,
											"end": 722,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 711,
											"end": 734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 707,
											"end": 739,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 704,
											"end": 756,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 704,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 704,
											"end": 756,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 752,
											"end": 753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 750,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 742,
											"end": 754,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 704,
											"end": 756,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 704,
											"end": 756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 792,
											"end": 801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 779,
											"end": 802,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 814,
											"end": 844,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 811,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 811,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 811,
											"end": 861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 857,
											"end": 858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 847,
											"end": 859,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 811,
											"end": 861,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 811,
											"end": 861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 902,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 880,
											"end": 902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 937,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 925,
											"end": 938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 925,
											"end": 938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 921,
											"end": 948,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 911,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 911,
											"end": 966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 952,
											"end": 964,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 911,
											"end": 966,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 911,
											"end": 966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 989,
											"end": 1005,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1047,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1091,
											"end": 1105,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1083,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1079,
											"end": 1111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1121,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1138,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 1073,
											"end": 1138,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1136,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1138,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 1073,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1168,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 1199,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1972,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1841,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 1947,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1948,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1896,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1977,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2091,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2068,
											"end": 2075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2103,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 2188,
											"end": 2193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2163,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2356,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2229,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2302,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 2326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2578,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2361,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2471,
											"end": 2481,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2466,
											"end": 2469,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2462,
											"end": 2482,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 2511,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2538,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2539,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2417,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2751,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2583,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2720,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2720,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2721,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2674,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2674,
											"end": 2745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2725,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3312,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3035,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3152,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3141,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3153,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3123,
											"end": 3175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3123,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 3123,
											"end": 3175,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3173,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3123,
											"end": 3175,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 3123,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3262,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3242,
											"end": 3263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3222,
											"end": 3282,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3317,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3419,
											"end": 3426,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3443,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 3408,
											"end": 3460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3460,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 3408,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3517,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3517,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3680,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3552,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3674,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3637,
											"end": 3674,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 3654,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3936,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3685,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3794,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 3806,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 3776,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 3776,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3866,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 3875,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4390,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 4265,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4348,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4348,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4348,
											"end": 4384,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 4364,
											"end": 4382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4775,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 4648,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4719,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4700,
											"end": 4720,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4721,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4740,
											"end": 4744,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4737,
											"end": 4738,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4730,
											"end": 4745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4768,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5306,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5140,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5231,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5271,
											"end": 5273,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5282,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 5240,
											"end": 5300,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5294,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5298,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 6212,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5311,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5452,
											"end": 5461,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5435,
											"end": 5468,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5497,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5546,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5578,
											"end": 5584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5574,
											"end": 5590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5641,
											"end": 5663,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5608,
											"end": 5618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5605,
											"end": 5639,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5664,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5599,
											"end": 5786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5687,
											"end": 5719,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5760,
											"end": 5776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5786,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5599,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5802,
											"end": 5804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5841,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5880,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 5841,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5839,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5956,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5914,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5962,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5914,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5897,
											"end": 5912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6029,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6005,
											"end": 6030,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6069,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6136,
											"end": 6138,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6140,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6181,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6181,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 6212,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 6212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6256,
											"end": 6263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6333,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 6320,
											"end": 6337,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 6301,
											"end": 6318,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6338,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6373,
											"end": 6384,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 6358,
											"end": 6385,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6427,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6407,
											"end": 6414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6404,
											"end": 6428,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6394,
											"end": 6452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6432,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6432,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6450,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6432,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6712,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6463,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6550,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6529,
											"end": 6570,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6585,
											"end": 6635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6635,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6647,
											"end": 6681,
											"name": "PUSH",
											"source": 13,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6637,
											"end": 6682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6637,
											"end": 6682,
											"name": "SGT",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6683,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6706,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 6579,
											"end": 6706,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 6686,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6686,
											"end": 6704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6852,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6717,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6794,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6777,
											"end": 6794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6777,
											"end": 6794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 6774,
											"end": 6817,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6797,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IVeSix.sol",
								"contracts/rewardsDistributor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim(uint256)": "379607f5",
							"claimMany(uint256[])": "925489a8",
							"claimable(uint256)": "d1d58b25",
							"distributeRewards()": "6f4a2cd0",
							"getCurrentVeSupply()": "069bf581",
							"getWeeklyRewards(uint256)": "eeff799a",
							"lastUpdateTime()": "c8f33c91",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardsToken()": "d1af0c7d",
							"startTime()": "78e97925",
							"timeCursor()": "8736659b",
							"tokenEpoch(uint256)": "98a3f422",
							"tokenTimeCursor(uint256)": "e6e00a8a",
							"transferOwnership(address)": "f2fde38b",
							"veSix()": "92815606",
							"veSupplyCache(uint256)": "f6dd9e43",
							"weeklyRewards(uint256)": "af364c05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_veSix\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsNotReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxEpoch\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"claimMany\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentVeSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getWeeklyRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veSix\",\"outputs\":[{\"internalType\":\"contract IVeSix\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"veSupplyCache\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weeklyRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewardsDistributor.sol\":\"SixRewardsDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IVeSix.sol\":{\"keccak256\":\"0x045eed15e9b749383b87e8643d726ea9659ba28a75971d6ca25eae432be6cded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3348a0ff72be6e63e03697f131badcbd0a37c2b0f915daa2f818e02193596d3\",\"dweb:/ipfs/QmUUnkp9KZ9RUi7W4SZSCm1YSaHjFACwxQnDCpUF6ireu9\"]},\"contracts/rewardsDistributor.sol\":{\"keccak256\":\"0x7471ccea9dc9c39d277c6caee9d64c9ab490b3917687f6f6b3487b22fbc44929\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dd7632e6ade794d15d8ad3a364fa2d4b6bbc2b636eae3d9f6f45549bee18308\",\"dweb:/ipfs/QmZzafX3V5GPqBczZhKY3tHqsve5JJZE78Z44sP8yhjZvD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1240,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "startTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1242,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1244,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "timeCursor",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1248,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "tokenTimeCursor",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1252,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "tokenEpoch",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1256,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "weeklyRewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1260,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "veSupplyCache",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1262,
								"contract": "contracts/rewardsDistributor.sol:SixRewardsDistributor",
								"label": "rewardsBalance",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1080
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1081,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1080
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1114
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1114,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1115,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 1051,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 387,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 389,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 394,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:6"
									},
									"src": "844:46:6"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 403,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:6"
									},
									"src": "972:109:6"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1343:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 418,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "1395:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1395:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 420,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1412:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1416:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 414,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1353:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:6"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1293:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1293:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1307:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:6"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:6"
									},
									"scope": 791,
									"src": "1271:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1760:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1790:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 444,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1812:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1812:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 446,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 447,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1839:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "1843:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 442,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1770:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:6"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1696:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1696:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1736:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:6"
									},
									"scope": 791,
									"src": "1670:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2600:139:6",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2610:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 471,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2664:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 467,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2633:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2695:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2711:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2726:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2682:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:6"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 456,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2545:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2559:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2576:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:6"
									},
									"scope": 791,
									"src": "2514:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3505:370:6",
										"statements": [
											{
												"id": 526,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:6",
												"statements": [
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 526,
																"src": "3539:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 506,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3597:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3566:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3566:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3623:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 508,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3642:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 517,
														"nodeType": "IfStatement",
														"src": "3619:160:6",
														"trueBody": {
															"id": 516,
															"nodeType": "Block",
															"src": "3661:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 511,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3719:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 512,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "3728:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 513,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "3746:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 510,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "3686:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 515,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3805:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 520,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 521,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "3821:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 522,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "3840:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "3792:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 525,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3438:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3438:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3438:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3452:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3469:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:6"
									},
									"scope": 791,
									"src": "3407:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4529:303:6",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4539:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 543,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4582:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 545,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4598:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4607:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 547,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 541,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:6"
											},
											{
												"condition": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 551,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4654:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 552,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "4661:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 550,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4630:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "4625:201:6",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "4676:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4710:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 559,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "4732:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4732:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 561,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 534,
																						"src": "4748:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 563,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 557,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4690:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4795:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 569,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "4802:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 567,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4775:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4474:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 530,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4474:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4488:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:6"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:6"
									},
									"scope": 791,
									"src": "4452:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5279:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 588,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5293:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5402:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 604,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "5413:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5380:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 615,
													"nodeType": "IfStatement",
													"src": "5375:117:6",
													"trueBody": {
														"id": 614,
														"nodeType": "Block",
														"src": "5420:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "5474:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 608,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "5441:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 613,
																"nodeType": "RevertStatement",
																"src": "5434:47:6"
															}
														]
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "5289:203:6",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "5314:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5341:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 595,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5348:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "5352:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "5328:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5208:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5224:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5236:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5251:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:6"
									},
									"scope": 791,
									"src": "5176:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6017:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 633,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6031:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 648,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6154:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 649,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6160:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 651,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "6171:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6128:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 662,
													"nodeType": "IfStatement",
													"src": "6123:127:6",
													"trueBody": {
														"id": 661,
														"nodeType": "Block",
														"src": "6178:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 657,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6232:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 655,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "6199:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 660,
																"nodeType": "RevertStatement",
																"src": "6192:47:6"
															}
														]
													}
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6027:223:6",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6052:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6083:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 640,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6090:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6096:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6100:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 638,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6066:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5895:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5919:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5941:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5961:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5984:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:6"
									},
									"scope": 791,
									"src": "5850:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7023:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "7037:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 692,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7145:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7149:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 694,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "7156:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 690,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7124:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 705,
													"nodeType": "IfStatement",
													"src": "7119:116:6",
													"trueBody": {
														"id": 704,
														"nodeType": "Block",
														"src": "7163:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 700,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7217:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 698,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 697,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "7184:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 703,
																"nodeType": "RevertStatement",
																"src": "7177:47:6"
															}
														]
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "7033:202:6",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "7058:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7085:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 685,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "7096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "7072:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6952:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6968:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6980:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6995:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:6"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:6"
									},
									"scope": 791,
									"src": "6921:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "7808:650:6",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7818:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:6"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7846:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:6",
													"nodeType": "YulBlock",
													"src": "7900:396:6",
													"statements": [
														{
															"nativeSrc": "7914:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:6"
																		},
																		"nativeSrc": "7934:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nativeSrc": "7951:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:6"
																		},
																		"nativeSrc": "7968:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:6"
																},
																"nativeSrc": "7929:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:6",
																"nodeType": "YulBlock",
																"src": "8050:157:6",
																"statements": [
																	{
																		"nativeSrc": "8068:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:6"
																			},
																			"nativeSrc": "8079:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:6"
																					},
																					"nativeSrc": "8130:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:6"
																			},
																			"nativeSrc": "8107:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:6"
																		},
																		"nativeSrc": "8107:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:6"
																					},
																					"nativeSrc": "8176:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:6"
																			},
																			"nativeSrc": "8164:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:6"
																		},
																		"nativeSrc": "8164:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:6"
																},
																"nativeSrc": "8034:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:6"
															},
															"nativeSrc": "8031:176:6",
															"nodeType": "YulIf",
															"src": "8031:176:6"
														},
														{
															"nativeSrc": "8220:30:6",
															"nodeType": "YulAssignment",
															"src": "8220:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:6"
																},
																"nativeSrc": "8234:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:6"
																}
															]
														},
														{
															"nativeSrc": "8263:23:6",
															"nodeType": "YulAssignment",
															"src": "8263:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:6"
																},
																"nativeSrc": "8278:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:6",
														"valueSize": 1
													},
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:6",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:6",
														"valueSize": 1
													},
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 723,
												"nodeType": "InlineAssembly",
												"src": "7875:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 724,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8310:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 735,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8362:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 729,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "8336:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 727,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "8306:146:6",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "8380:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 742,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "8434:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 740,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 739,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8401:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 745,
															"nodeType": "RevertStatement",
															"src": "8394:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7767:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7781:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:6"
									},
									"scope": 791,
									"src": "7738:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "9049:391:6",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9059:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:6"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9081:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:6"
											},
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9109:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:6",
													"nodeType": "YulBlock",
													"src": "9163:174:6",
													"statements": [
														{
															"nativeSrc": "9177:71:6",
															"nodeType": "YulAssignment",
															"src": "9177:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:6"
																		},
																		"nativeSrc": "9193:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:6"
																		},
																		"nativeSrc": "9210:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:6"
																		},
																		"nativeSrc": "9227:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:6"
																},
																"nativeSrc": "9188:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:6"
																}
															]
														},
														{
															"nativeSrc": "9261:30:6",
															"nodeType": "YulAssignment",
															"src": "9261:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:6"
																},
																"nativeSrc": "9275:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:6"
																}
															]
														},
														{
															"nativeSrc": "9304:23:6",
															"nodeType": "YulAssignment",
															"src": "9304:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:6"
																},
																"nativeSrc": "9319:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:6",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:6",
														"valueSize": 1
													},
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "9138:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "9353:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9365:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 782,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9416:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 776,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 753,
																						"src": "9391:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 774,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 786,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 759,
												"id": 788,
												"nodeType": "Return",
												"src": "9346:87:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "8993:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8993:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8993:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9007:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9043:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:6"
									},
									"scope": 791,
									"src": "8960:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 792,
							"src": "750:8692:6",
							"usedErrors": [
								394,
								403
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Errors": [
							1102
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 1103,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1102,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 801,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 821,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 819,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 824,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													830,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 829,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 831,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 838,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 840,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1050,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 863,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1050,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 889,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 887,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 884,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													898,
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 897,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 899,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 901,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 903,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 908,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 913,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1050,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 937,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 939,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1050,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 955,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 960,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 950,
												"id": 965,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1050,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 979,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 986,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 990,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 1000,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 996,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 999,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1002,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 1003,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1050,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 1017,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1016,
															"id": 1025,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1019,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1050,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5598:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1035,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "5973:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1041,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5994:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "5994:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "5987:26:7"
														}
													]
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "5670:354:7",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "5697:270:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:7",
																"nodeType": "YulBlock",
																"src": "5824:133:7",
																"statements": [
																	{
																		"nativeSrc": "5842:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:7"
																			},
																			"nativeSrc": "5865:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:7"
																					},
																					"nativeSrc": "5906:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:7"
																			},
																			"nativeSrc": "5899:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:7"
																		},
																		"nativeSrc": "5899:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:7"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1039,
															"nodeType": "InlineAssembly",
															"src": "5799:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1050,
									"src": "5543:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1051,
							"src": "233:5799:7",
							"usedErrors": [
								801
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1080,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1067,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1069,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1080,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1075,
												"id": 1077,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1080,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1081,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1090,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1093,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1096,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1101,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1103,
							"src": "411:484:9",
							"usedErrors": [
								1090,
								1093,
								1096,
								1101
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1114,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/interfaces/IVeSix.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IVeSix.sol",
					"exportedSymbols": {
						"IVeSix": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVeSix",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1191,
							"linearizedBaseContracts": [
								1191
							],
							"name": "IVeSix",
							"nameLocation": "70:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IVeSix.Point",
									"id": 1125,
									"members": [
										{
											"constant": false,
											"id": 1118,
											"mutability": "mutable",
											"name": "bias",
											"nameLocation": "115:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "108:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 1117,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "108:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1120,
											"mutability": "mutable",
											"name": "slope",
											"nameLocation": "137:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "130:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 1119,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "130:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1122,
											"mutability": "mutable",
											"name": "ts",
											"nameLocation": "161:2:11",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "153:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "153:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "blk",
											"nameLocation": "182:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "174:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "174:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Point",
									"nameLocation": "91:5:11",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "84:109:11",
									"visibility": "public"
								},
								{
									"functionSelector": "e0514aba",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfNFTAt",
									"nameLocation": "214:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "237:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "229:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "254:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "246:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:36:11"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "288:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:11"
									},
									"scope": 1191,
									"src": "205:92:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "312:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "328:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "320:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:17:11"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "360:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:9:11"
									},
									"scope": 1191,
									"src": "303:66:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "430c2081",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "384:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "410:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "402:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "427:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "419:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:34:11"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "459:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "459:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:6:11"
									},
									"scope": 1191,
									"src": "375:90:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ee99fe28",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit_for",
									"nameLocation": "480:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "500:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "492:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "517:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "509:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:32:11"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:11"
									},
									"scope": 1191,
									"src": "471:62:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1febfb9",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "point_history",
									"nameLocation": "548:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "570:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "562:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:15:11"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "600:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
													"typeString": "struct IVeSix.Point"
												},
												"typeName": {
													"id": 1162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1161,
														"name": "Point",
														"nameLocations": [
															"600:5:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1125,
														"src": "600:5:11"
													},
													"referencedDeclaration": 1125,
													"src": "600:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Point_$1125_storage_ptr",
														"typeString": "struct IVeSix.Point"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:14:11"
									},
									"scope": 1191,
									"src": "539:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1376f3da",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "user_point_history",
									"nameLocation": "629:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "656:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "648:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "loc",
												"nameLocation": "673:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "665:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:30:11"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "701:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
													"typeString": "struct IVeSix.Point"
												},
												"typeName": {
													"id": 1172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1171,
														"name": "Point",
														"nameLocations": [
															"701:5:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1125,
														"src": "701:5:11"
													},
													"referencedDeclaration": 1125,
													"src": "701:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Point_$1125_storage_ptr",
														"typeString": "struct IVeSix.Point"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:14:11"
									},
									"scope": 1191,
									"src": "620:95:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "900cf0cf",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "epoch",
									"nameLocation": "730:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:2:11"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "761:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:9:11"
									},
									"scope": 1191,
									"src": "721:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e441135c",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "user_point_epoch",
									"nameLocation": "785:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "810:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "802:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:11"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "842:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:9:11"
									},
									"scope": 1191,
									"src": "776:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2c4c5c1",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkpoint",
									"nameLocation": "866:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:11"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:11"
									},
									"scope": 1191,
									"src": "857:31:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1192,
							"src": "60:831:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:858:11"
				},
				"id": 11
			},
			"contracts/rewardsDistributor.sol": {
				"ast": {
					"absolutePath": "contracts/rewardsDistributor.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						],
						"IVeSix": [
							1191
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							791
						],
						"SixRewardsDistributor": [
							1955
						]
					},
					"id": 1956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1193,
							"literals": [
								"solidity",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 381,
							"src": "60:70:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1194,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "68:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 792,
							"src": "132:82:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1196,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 791,
										"src": "140:9:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 303,
							"src": "216:85:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1198,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "224:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 148,
							"src": "303:67:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1200,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "311:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IVeSix.sol",
							"file": "./interfaces/IVeSix.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 1192,
							"src": "372:33:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1203,
										"name": "Ownable",
										"nameLocations": [
											"447:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "447:7:12"
									},
									"id": 1204,
									"nodeType": "InheritanceSpecifier",
									"src": "447:7:12"
								},
								{
									"baseName": {
										"id": 1205,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"456:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "456:15:12"
									},
									"id": 1206,
									"nodeType": "InheritanceSpecifier",
									"src": "456:15:12"
								}
							],
							"canonicalName": "SixRewardsDistributor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1955,
							"linearizedBaseContracts": [
								1955,
								302,
								147,
								1080
							],
							"name": "SixRewardsDistributor",
							"nameLocation": "422:21:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1210,
									"libraryName": {
										"id": 1207,
										"name": "SafeERC20",
										"nameLocations": [
											"485:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "485:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "479:27:12",
									"typeName": {
										"id": 1209,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1208,
											"name": "IERC20",
											"nameLocations": [
												"499:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "499:6:12"
										},
										"referencedDeclaration": 380,
										"src": "499:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c",
									"id": 1216,
									"name": "RewardsDistributed",
									"nameLocation": "535:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "562:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "554:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "581:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "573:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:35:12"
									},
									"src": "529:60:12"
								},
								{
									"anonymous": false,
									"eventSelector": "5ce397c9bb9806fe77f5c7c28202740f0805fc106a10f4d38821a4b65c768345",
									"id": 1226,
									"name": "RewardsClaimed",
									"nameLocation": "601:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "632:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "616:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "649:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "641:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentEpoch",
												"nameLocation": "665:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "657:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxEpoch",
												"nameLocation": "687:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "679:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:81:12"
									},
									"src": "595:102:12"
								},
								{
									"constant": true,
									"id": 1229,
									"mutability": "constant",
									"name": "WEEK",
									"nameLocation": "752:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "727:38:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "759:6:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1232,
									"mutability": "constant",
									"name": "MAX_REWARDS_DELAY",
									"nameLocation": "797:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "772:51:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1231,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:6:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "92815606",
									"id": 1235,
									"mutability": "immutable",
									"name": "veSix",
									"nameLocation": "880:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "856:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVeSix_$1191",
										"typeString": "contract IVeSix"
									},
									"typeName": {
										"id": 1234,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1233,
											"name": "IVeSix",
											"nameLocations": [
												"856:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1191,
											"src": "856:6:12"
										},
										"referencedDeclaration": 1191,
										"src": "856:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVeSix_$1191",
											"typeString": "contract IVeSix"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1238,
									"mutability": "immutable",
									"name": "rewardsToken",
									"nameLocation": "916:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "892:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1237,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1236,
											"name": "IERC20",
											"nameLocations": [
												"892:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "892:6:12"
										},
										"referencedDeclaration": 380,
										"src": "892:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 1240,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "956:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "941:24:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1239,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "941:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1242,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "987:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "972:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "972:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8736659b",
									"id": 1244,
									"mutability": "mutable",
									"name": "timeCursor",
									"nameLocation": "1023:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1008:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1008:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6e00a8a",
									"id": 1248,
									"mutability": "mutable",
									"name": "tokenTimeCursor",
									"nameLocation": "1081:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1046:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1247,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1245,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1054:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1046:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1246,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1065:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98a3f422",
									"id": 1252,
									"mutability": "mutable",
									"name": "tokenEpoch",
									"nameLocation": "1138:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1103:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1251,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1111:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1103:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1250,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1122:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af364c05",
									"id": 1256,
									"mutability": "mutable",
									"name": "weeklyRewards",
									"nameLocation": "1190:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1155:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1255,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1253,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1163:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1155:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1254,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1174:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6dd9e43",
									"id": 1260,
									"mutability": "mutable",
									"name": "veSupplyCache",
									"nameLocation": "1245:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1210:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1259,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1257,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1218:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1210:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1258,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1229:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1262,
									"mutability": "mutable",
									"name": "rewardsBalance",
									"nameLocation": "1287:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "1271:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1264,
									"name": "InvalidAddress",
									"nameLocation": "1331:14:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:12"
									},
									"src": "1325:23:12"
								},
								{
									"errorSelector": "e86cae29",
									"id": 1266,
									"name": "RewardsNotReady",
									"nameLocation": "1360:15:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:2:12"
									},
									"src": "1354:24:12"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1268,
									"name": "NotAuthorized",
									"nameLocation": "1390:13:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:12"
									},
									"src": "1384:22:12"
								},
								{
									"errorSelector": "3fb087f4",
									"id": 1270,
									"name": "NoRewards",
									"nameLocation": "1418:9:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:2:12"
									},
									"src": "1412:18:12"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "1509:323:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1281,
															"name": "_veSix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "1524:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1542:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1534:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1534:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1534:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1524:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "_rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "1548:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1573:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1565:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1565:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1565:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1548:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1524:51:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "1520:80:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1294,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "1584:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1584:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1296,
													"nodeType": "RevertStatement",
													"src": "1577:23:12"
												}
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "veSix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "1621:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVeSix_$1191",
															"typeString": "contract IVeSix"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1300,
																"name": "_veSix",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "1636:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1299,
															"name": "IVeSix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "1629:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVeSix_$1191_$",
																"typeString": "type(contract IVeSix)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1629:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVeSix_$1191",
															"typeString": "contract IVeSix"
														}
													},
													"src": "1621:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVeSix_$1191",
														"typeString": "contract IVeSix"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "1621:22:12"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "1654:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1306,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "1676:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1305,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1669:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1669:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1654:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "1654:36:12"
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1310,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1711:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1311,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1724:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1730:9:12",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1724:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1313,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "1742:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1724:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1315,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1316,
															"name": "WEEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "1750:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1723:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1711:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "1711:43:12"
											},
											{
												"expression": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1320,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "1765:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1321,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1782:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1765:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "1765:26:12"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1324,
														"name": "timeCursor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "1802:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1325,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1815:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1802:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "1802:22:12"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1277,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1497:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1501:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1497:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1279,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1276,
												"name": "Ownable",
												"nameLocations": [
													"1489:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1489:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1489:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_veSix",
												"nameLocation": "1458:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1450:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1474:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1466:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:39:12"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:12"
									},
									"scope": 1955,
									"src": "1438:394:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "1891:939:12",
										"statements": [
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "newRewards",
														"nameLocation": "1910:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "1902:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1902:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1340,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1954:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SixRewardsDistributor_$1955",
																			"typeString": "contract SixRewardsDistributor"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SixRewardsDistributor_$1955",
																			"typeString": "contract SixRewardsDistributor"
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1336,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "1923:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1936:9:12",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "1923:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:37:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1343,
														"name": "rewardsBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "1963:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1923:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1902:75:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1346,
														"name": "newRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "1992:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2006:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1992:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "1988:39:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1349,
															"name": "NoRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "2016:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1351,
													"nodeType": "RevertStatement",
													"src": "2009:18:12"
												}
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "currentWeek",
														"nameLocation": "2048:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "2040:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2040:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1355,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2063:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2069:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2063:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1357,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "2081:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2063:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1359,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2062:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1360,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2089:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2062:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2040:53:12"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "weeksSinceUpdate",
														"nameLocation": "2112:16:12",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "2104:24:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2104:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1365,
																	"name": "currentWeek",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "2132:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1366,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "2146:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2132:28:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2131:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1369,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2164:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2131:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2104:64:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "weeksSinceUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "2193:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2213:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2193:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1409,
													"nodeType": "Block",
													"src": "2345:287:12",
													"statements": [
														{
															"assignments": [
																1383
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1383,
																	"mutability": "mutable",
																	"name": "rewardsPerWeek",
																	"nameLocation": "2422:14:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1409,
																	"src": "2414:22:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1387,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1384,
																	"name": "newRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "2439:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1385,
																	"name": "weeksSinceUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "2452:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2439:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2414:54:12"
														},
														{
															"body": {
																"id": 1407,
																"nodeType": "Block",
																"src": "2552:69:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1401,
																					"name": "weeklyRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "2571:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1403,
																				"indexExpression": {
																					"id": 1402,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "2585:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2571:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1404,
																				"name": "rewardsPerWeek",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "2591:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2571:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1406,
																		"nodeType": "ExpressionStatement",
																		"src": "2571:34:12"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "t",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "2523:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1395,
																	"name": "currentWeek",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "2528:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2523:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1408,
															"initializationExpression": {
																"assignments": [
																	1389
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1389,
																		"mutability": "mutable",
																		"name": "t",
																		"nameLocation": "2496:1:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 1408,
																		"src": "2488:9:12",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1388,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2488:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1393,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1390,
																		"name": "lastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "2500:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1391,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "2517:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2500:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2488:33:12"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1397,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "2541:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1398,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "2546:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2541:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1400,
																"nodeType": "ExpressionStatement",
																"src": "2541:9:12"
															},
															"nodeType": "ForStatement",
															"src": "2483:138:12"
														}
													]
												},
												"id": 1410,
												"nodeType": "IfStatement",
												"src": "2189:443:12",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "2216:123:12",
													"statements": [
														{
															"expression": {
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1375,
																		"name": "weeklyRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2287:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1377,
																	"indexExpression": {
																		"id": 1376,
																		"name": "currentWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "2301:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2287:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1378,
																	"name": "newRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "2317:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2287:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1380,
															"nodeType": "ExpressionStatement",
															"src": "2287:40:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "rewardsBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "2644:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1412,
														"name": "newRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "2662:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2644:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "2644:28:12"
											},
											{
												"expression": {
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1415,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "2683:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1416,
														"name": "currentWeek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "2700:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2683:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "2683:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1420,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2756:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2762:9:12",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2756:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1422,
															"name": "newRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "2773:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"name": "RewardsDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2737:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "EmitStatement",
												"src": "2732:52:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1425,
														"name": "_updateVeSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "2805:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "2805:17:12"
											}
										]
									},
									"functionSelector": "6f4a2cd0",
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "nonReentrant",
												"nameLocations": [
													"1878:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "1878:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1878:12:12"
										}
									],
									"name": "distributeRewards",
									"nameLocation": "1849:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:2:12"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:0:12"
									},
									"scope": 1955,
									"src": "1840:990:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "2874:734:12",
										"statements": [
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "2893:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "2885:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2885:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1434,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2908:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2914:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2908:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1436,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "2926:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2908:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1438,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2907:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1439,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2934:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2907:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2885:53:12"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "t",
														"nameLocation": "2957:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "2949:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2949:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"id": 1444,
													"name": "timeCursor",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "2961:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2949:22:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1446,
															"name": "veSix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2992:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVeSix_$1191",
																"typeString": "contract IVeSix"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2998:10:12",
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "2992:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "2992:18:12"
											},
											{
												"body": {
													"id": 1538,
													"nodeType": "Block",
													"src": "3076:490:12",
													"statements": [
														{
															"assignments": [
																1466
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1466,
																	"mutability": "mutable",
																	"name": "epoch",
																	"nameLocation": "3099:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1538,
																	"src": "3091:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1465,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3091:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1470,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1468,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "3130:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1467,
																	"name": "_findEpochForTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "3107:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3107:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3091:41:12"
														},
														{
															"assignments": [
																1475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1475,
																	"mutability": "mutable",
																	"name": "point",
																	"nameLocation": "3167:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1538,
																	"src": "3147:25:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																		"typeString": "struct IVeSix.Point"
																	},
																	"typeName": {
																		"id": 1474,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1473,
																			"name": "IVeSix.Point",
																			"nameLocations": [
																				"3147:6:12",
																				"3154:5:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1125,
																			"src": "3147:12:12"
																		},
																		"referencedDeclaration": 1125,
																		"src": "3147:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Point_$1125_storage_ptr",
																			"typeString": "struct IVeSix.Point"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1480,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1478,
																		"name": "epoch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "3195:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1476,
																		"name": "veSix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "3175:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeSix_$1191",
																			"typeString": "contract IVeSix"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3181:13:12",
																	"memberName": "point_history",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1165,
																	"src": "3175:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Point_$1125_memory_ptr_$",
																		"typeString": "function (uint256) view external returns (struct IVeSix.Point memory)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3175:26:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																	"typeString": "struct IVeSix.Point memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3147:54:12"
														},
														{
															"assignments": [
																1482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1482,
																	"mutability": "mutable",
																	"name": "dt",
																	"nameLocation": "3237:2:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1538,
																	"src": "3230:9:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"typeName": {
																		"id": 1481,
																		"name": "int128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3230:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1484,
															"initialValue": {
																"hexValue": "30",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3242:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3230:13:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1485,
																	"name": "t",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "3262:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1486,
																		"name": "point",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "3266:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																			"typeString": "struct IVeSix.Point memory"
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3272:2:12",
																	"memberName": "ts",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "3266:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3262:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1503,
															"nodeType": "IfStatement",
															"src": "3258:86:12",
															"trueBody": {
																"id": 1502,
																"nodeType": "Block",
																"src": "3276:68:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1489,
																				"name": "dt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "3295:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1497,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1494,
																									"name": "t",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1443,
																									"src": "3314:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"expression": {
																										"id": 1495,
																										"name": "point",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1475,
																										"src": "3318:5:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																											"typeString": "struct IVeSix.Point memory"
																										}
																									},
																									"id": 1496,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3324:2:12",
																									"memberName": "ts",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1122,
																									"src": "3318:8:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3314:12:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1493,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3307:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 1492,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3307:6:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1498,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3307:20:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1491,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3300:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int128_$",
																						"typeString": "type(int128)"
																					},
																					"typeName": {
																						"id": 1490,
																						"name": "int128",
																						"nodeType": "ElementaryTypeName",
																						"src": "3300:6:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3300:28:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"src": "3295:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"id": 1501,
																		"nodeType": "ExpressionStatement",
																		"src": "3295:33:12"
																	}
																]
															}
														},
														{
															"assignments": [
																1505
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1505,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "3380:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1538,
																	"src": "3372:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1504,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3372:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1519,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				},
																				"id": 1516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1510,
																						"name": "point",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1475,
																						"src": "3404:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																							"typeString": "struct IVeSix.Point memory"
																						}
																					},
																					"id": 1511,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3410:4:12",
																					"memberName": "bias",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1118,
																					"src": "3404:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					},
																					"id": 1515,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1512,
																							"name": "point",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1475,
																							"src": "3417:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																								"typeString": "struct IVeSix.Point memory"
																							}
																						},
																						"id": 1513,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3423:5:12",
																						"memberName": "slope",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1120,
																						"src": "3417:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1514,
																						"name": "dt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1482,
																						"src": "3431:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"src": "3417:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"src": "3404:29:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3397:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 1508,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3397:6:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3397:37:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3389:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1506,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3389:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3389:46:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3372:63:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1520,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "3454:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3454:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1527,
															"nodeType": "IfStatement",
															"src": "3450:26:12",
															"trueBody": {
																"expression": {
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1523,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "3466:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3475:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3466:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1526,
																"nodeType": "ExpressionStatement",
																"src": "3466:10:12"
															}
														},
														{
															"expression": {
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1528,
																		"name": "veSupplyCache",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "3505:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1530,
																	"indexExpression": {
																		"id": 1529,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "3519:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3505:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1531,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "3524:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3505:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1533,
															"nodeType": "ExpressionStatement",
															"src": "3505:25:12"
														},
														{
															"expression": {
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1534,
																	"name": "t",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "3545:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1535,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "3550:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3545:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1537,
															"nodeType": "ExpressionStatement",
															"src": "3545:9:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1455,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "3043:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3047:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "3043:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1458,
															"name": "t",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3053:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1459,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "3058:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3053:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3043:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1539,
												"initializationExpression": {
													"assignments": [
														1452
													],
													"declarations": [
														{
															"constant": false,
															"id": 1452,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3036:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1539,
															"src": "3028:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1451,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3028:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1454,
													"initialValue": {
														"hexValue": "30",
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3040:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3028:13:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3071:3:12",
														"subExpression": {
															"id": 1462,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "3071:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1464,
													"nodeType": "ExpressionStatement",
													"src": "3071:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3023:543:12"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1540,
														"name": "timeCursor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "3586:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1541,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "3599:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3586:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "3586:14:12"
											}
										]
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateVeSupply",
									"nameLocation": "2847:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2862:2:12"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2874:0:12"
									},
									"scope": 1955,
									"src": "2838:770:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "3699:487:12",
										"statements": [
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "min",
														"nameLocation": "3718:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "3710:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3710:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"hexValue": "30",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3724:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3710:15:12"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "max",
														"nameLocation": "3744:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "3736:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3736:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1558,
															"name": "veSix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3750:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVeSix_$1191",
																"typeString": "contract IVeSix"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3756:5:12",
														"memberName": "epoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "3750:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3750:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:27:12"
											},
											{
												"body": {
													"id": 1615,
													"nodeType": "Block",
													"src": "3818:330:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1572,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "3837:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1573,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "3844:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3837:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1576,
															"nodeType": "IfStatement",
															"src": "3833:21:12",
															"trueBody": {
																"id": 1575,
																"nodeType": "Break",
																"src": "3849:5:12"
															}
														},
														{
															"assignments": [
																1578
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1578,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "3891:3:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1615,
																	"src": "3883:11:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1577,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3883:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1587,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1579,
																					"name": "min",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1553,
																					"src": "3898:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1580,
																					"name": "max",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "3904:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3898:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3910:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3898:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1584,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3897:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3915:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3897:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3883:33:12"
														},
														{
															"assignments": [
																1592
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1592,
																	"mutability": "mutable",
																	"name": "point",
																	"nameLocation": "3951:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1615,
																	"src": "3931:25:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																		"typeString": "struct IVeSix.Point"
																	},
																	"typeName": {
																		"id": 1591,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1590,
																			"name": "IVeSix.Point",
																			"nameLocations": [
																				"3931:6:12",
																				"3938:5:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1125,
																			"src": "3931:12:12"
																		},
																		"referencedDeclaration": 1125,
																		"src": "3931:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Point_$1125_storage_ptr",
																			"typeString": "struct IVeSix.Point"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1597,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1595,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "3979:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1593,
																		"name": "veSix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "3959:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeSix_$1191",
																			"typeString": "contract IVeSix"
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3965:13:12",
																	"memberName": "point_history",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1165,
																	"src": "3959:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Point_$1125_memory_ptr_$",
																		"typeString": "function (uint256) view external returns (struct IVeSix.Point memory)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3959:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																	"typeString": "struct IVeSix.Point memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3931:52:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1598,
																		"name": "point",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "4016:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																			"typeString": "struct IVeSix.Point memory"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4022:2:12",
																	"memberName": "ts",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "4016:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1600,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "4028:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4016:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1613,
																"nodeType": "Block",
																"src": "4089:48:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1607,
																				"name": "max",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "4108:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1608,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1578,
																					"src": "4114:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4120:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4114:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4108:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1612,
																		"nodeType": "ExpressionStatement",
																		"src": "4108:13:12"
																	}
																]
															},
															"id": 1614,
															"nodeType": "IfStatement",
															"src": "4012:125:12",
															"trueBody": {
																"id": 1606,
																"nodeType": "Block",
																"src": "4039:44:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1602,
																				"name": "min",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1553,
																				"src": "4058:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1603,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1578,
																				"src": "4064:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4058:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1605,
																		"nodeType": "ExpressionStatement",
																		"src": "4058:9:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1566,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3804:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "313238",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3808:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "3804:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1616,
												"initializationExpression": {
													"assignments": [
														1563
													],
													"declarations": [
														{
															"constant": false,
															"id": 1563,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3797:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1616,
															"src": "3789:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1562,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3789:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1565,
													"initialValue": {
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3801:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3789:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3813:3:12",
														"subExpression": {
															"id": 1569,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "3813:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1571,
													"nodeType": "ExpressionStatement",
													"src": "3813:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3784:364:12"
											},
											{
												"expression": {
													"id": 1617,
													"name": "min",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1553,
													"src": "4175:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1618,
												"nodeType": "Return",
												"src": "4168:10:12"
											}
										]
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_findEpochForTimestamp",
									"nameLocation": "3625:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3656:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3648:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:19:12"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3690:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:9:12"
									},
									"scope": 1955,
									"src": "3616:570:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "4262:127:12",
										"statements": [
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "currentWeek",
														"nameLocation": "4281:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "4273:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4273:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1629,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4296:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4302:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4296:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1631,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "4314:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4296:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1633,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4295:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1634,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "4322:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4273:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1638,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "4360:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1639,
															"name": "currentWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "4369:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1637,
														"name": "_calculateClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "4344:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4344:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1641,
												"nodeType": "Return",
												"src": "4337:44:12"
											}
										]
									},
									"functionSelector": "d1d58b25",
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimable",
									"nameLocation": "4203:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4221:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "4213:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4212:17:12"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "4253:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:9:12"
									},
									"scope": 1955,
									"src": "4194:195:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "4488:909:12",
										"statements": [
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "userEpoch",
														"nameLocation": "4507:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "4499:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4499:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"baseExpression": {
														"id": 1654,
														"name": "tokenEpoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "4519:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1656,
													"indexExpression": {
														"id": 1655,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "4530:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4519:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4499:39:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1658,
														"name": "userEpoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "4553:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4553:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "4549:33:12",
												"trueBody": {
													"expression": {
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1661,
															"name": "userEpoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "4569:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4581:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4569:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1664,
													"nodeType": "ExpressionStatement",
													"src": "4569:13:12"
												}
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "weekCursor",
														"nameLocation": "4611:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "4603:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4603:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"baseExpression": {
														"id": 1668,
														"name": "tokenTimeCursor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "4624:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1670,
													"indexExpression": {
														"id": 1669,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "4640:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4624:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4603:45:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1672,
														"name": "weekCursor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "4663:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4677:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4663:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "4659:193:12",
												"trueBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "4680:172:12",
													"statements": [
														{
															"assignments": [
																1679
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1679,
																	"mutability": "mutable",
																	"name": "userPoint",
																	"nameLocation": "4715:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1701,
																	"src": "4695:29:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																		"typeString": "struct IVeSix.Point"
																	},
																	"typeName": {
																		"id": 1678,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1677,
																			"name": "IVeSix.Point",
																			"nameLocations": [
																				"4695:6:12",
																				"4702:5:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1125,
																			"src": "4695:12:12"
																		},
																		"referencedDeclaration": 1125,
																		"src": "4695:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Point_$1125_storage_ptr",
																			"typeString": "struct IVeSix.Point"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1685,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1682,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4752:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1683,
																		"name": "userEpoch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "4761:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1680,
																		"name": "veSix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "4727:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeSix_$1191",
																			"typeString": "contract IVeSix"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4733:18:12",
																	"memberName": "user_point_history",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1175,
																	"src": "4727:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Point_$1125_memory_ptr_$",
																		"typeString": "function (uint256,uint256) view external returns (struct IVeSix.Point memory)"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4727:44:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																	"typeString": "struct IVeSix.Point memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4695:76:12"
														},
														{
															"expression": {
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1686,
																	"name": "weekCursor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4786:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1690,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1687,
																										"name": "userPoint",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1679,
																										"src": "4801:9:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Point_$1125_memory_ptr",
																											"typeString": "struct IVeSix.Point memory"
																										}
																									},
																									"id": 1688,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "4811:2:12",
																									"memberName": "ts",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1122,
																									"src": "4801:12:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 1689,
																									"name": "WEEK",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1229,
																									"src": "4816:4:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4801:19:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1691,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4823:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "4801:23:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1693,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4800:25:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1694,
																					"name": "WEEK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1229,
																					"src": "4828:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4800:32:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1696,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4799:34:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1697,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "4836:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4799:41:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4786:54:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "4786:54:12"
														}
													]
												}
											},
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "toDistribute",
														"nameLocation": "4880:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "4872:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4872:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"nodeType": "VariableDeclarationStatement",
												"src": "4872:20:12"
											},
											{
												"body": {
													"id": 1764,
													"nodeType": "Block",
													"src": "4971:379:12",
													"statements": [
														{
															"assignments": [
																1721
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1721,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "4994:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1764,
																	"src": "4986:15:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1720,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4986:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1727,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1724,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "5025:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1725,
																		"name": "weekCursor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "5034:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1722,
																		"name": "veSix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "5004:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeSix_$1191",
																			"typeString": "contract IVeSix"
																		}
																	},
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5010:14:12",
																	"memberName": "balanceOfNFTAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1134,
																	"src": "5004:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view external returns (uint256)"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5004:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4986:59:12"
														},
														{
															"assignments": [
																1729
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1729,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "5068:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1764,
																	"src": "5060:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1733,
															"initialValue": {
																"baseExpression": {
																	"id": 1730,
																	"name": "veSupplyCache",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "5077:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1732,
																"indexExpression": {
																	"id": 1731,
																	"name": "weekCursor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "5091:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5077:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5060:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1734,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1721,
																			"src": "5135:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5145:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5135:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1737,
																			"name": "supply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "5150:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5159:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5150:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5135:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1741,
																			"name": "weeklyRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "5164:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 1743,
																		"indexExpression": {
																			"id": 1742,
																			"name": "weekCursor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "5178:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5164:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5192:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5164:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5135:58:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1759,
															"nodeType": "IfStatement",
															"src": "5131:161:12",
															"trueBody": {
																"id": 1758,
																"nodeType": "Block",
																"src": "5195:97:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1747,
																				"name": "toDistribute",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1704,
																				"src": "5214:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1752,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1748,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1721,
																								"src": "5231:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 1749,
																									"name": "weeklyRewards",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1256,
																									"src": "5241:13:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 1751,
																								"indexExpression": {
																									"id": 1750,
																									"name": "weekCursor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1667,
																									"src": "5255:10:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5241:25:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5231:35:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1753,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5230:37:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1754,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1729,
																					"src": "5270:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5230:46:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5214:62:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1757,
																		"nodeType": "ExpressionStatement",
																		"src": "5214:62:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1760,
																	"name": "weekCursor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "5320:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1761,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "5334:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5320:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1763,
															"nodeType": "ExpressionStatement",
															"src": "5320:18:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1710,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "4933:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3530",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4937:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "4933:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1713,
															"name": "weekCursor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "4943:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1714,
															"name": "maxTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "4957:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4943:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4933:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1765,
												"initializationExpression": {
													"assignments": [
														1707
													],
													"declarations": [
														{
															"constant": false,
															"id": 1707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4926:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1765,
															"src": "4918:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4918:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1709,
													"initialValue": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4930:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4918:13:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4966:3:12",
														"subExpression": {
															"id": 1717,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "4966:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1719,
													"nodeType": "ExpressionStatement",
													"src": "4966:3:12"
												},
												"nodeType": "ForStatement",
												"src": "4913:437:12"
											},
											{
												"expression": {
													"id": 1766,
													"name": "toDistribute",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1704,
													"src": "5377:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1767,
												"nodeType": "Return",
												"src": "5370:19:12"
											}
										]
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaim",
									"nameLocation": "4406:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4430:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4422:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "maxTime",
												"nameLocation": "4447:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4439:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:34:12"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4479:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:12"
									},
									"scope": 1955,
									"src": "4397:1000:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "5477:868:12",
										"statements": [
											{
												"condition": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5492:45:12",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1780,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5517:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5521:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5517:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1782,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "5529:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1778,
																"name": "veSix",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5493:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeSix_$1191",
																	"typeString": "contract IVeSix"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5499:17:12",
															"memberName": "isApprovedOrOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1150,
															"src": "5493:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) view external returns (bool)"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5493:44:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1788,
												"nodeType": "IfStatement",
												"src": "5488:73:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1785,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "5546:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5546:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1787,
													"nodeType": "RevertStatement",
													"src": "5539:22:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1789,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5578:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5584:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5578:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1791,
														"name": "timeCursor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "5596:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5578:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1797,
												"nodeType": "IfStatement",
												"src": "5574:78:12",
												"trueBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "5608:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1793,
																	"name": "_updateVeSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "5623:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5623:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1795,
															"nodeType": "ExpressionStatement",
															"src": "5623:17:12"
														}
													]
												}
											},
											{
												"assignments": [
													1799
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "currentWeek",
														"nameLocation": "5672:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "5664:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5664:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1807,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1800,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5687:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5693:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5687:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1802,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "5705:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5687:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1804,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5686:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1805,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "5713:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5686:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5664:53:12"
											},
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5736:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "5728:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1808,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5728:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1814,
												"initialValue": {
													"arguments": [
														{
															"id": 1811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "5761:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1812,
															"name": "currentWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "5770:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1810,
														"name": "_calculateClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "5745:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5745:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5728:54:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "5797:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5807:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5797:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1821,
												"nodeType": "IfStatement",
												"src": "5793:35:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1818,
															"name": "NoRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "5817:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5817:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1820,
													"nodeType": "RevertStatement",
													"src": "5810:18:12"
												}
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1822,
															"name": "tokenTimeCursor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "5871:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "5887:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5871:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1825,
														"name": "currentWeek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "5898:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5871:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "5871:38:12"
											},
											{
												"expression": {
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1828,
															"name": "tokenEpoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5920:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1830,
														"indexExpression": {
															"id": 1829,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "5931:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5920:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1833,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "5965:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1831,
																"name": "veSix",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5942:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeSix_$1191",
																	"typeString": "contract IVeSix"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5948:16:12",
															"memberName": "user_point_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "5942:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view external returns (uint256)"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5942:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5920:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "5920:53:12"
											},
											{
												"expression": {
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1837,
														"name": "rewardsBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "6029:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1838,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "6047:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6029:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "6029:24:12"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6111:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "6103:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6103:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"arguments": [
														{
															"id": 1845,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "6133:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1843,
															"name": "veSix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "6119:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVeSix_$1191",
																"typeString": "contract IVeSix"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6125:7:12",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1141,
														"src": "6119:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6119:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6103:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1851,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6178:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6185:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1848,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6152:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6165:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "6152:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6152:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "6152:40:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1856,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "6233:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6242:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1858,
																"name": "tokenEpoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "6250:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1860,
															"indexExpression": {
																"id": 1859,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "6261:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6250:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1863,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "6294:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1861,
																	"name": "veSix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "6271:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVeSix_$1191",
																		"typeString": "contract IVeSix"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6277:16:12",
																"memberName": "user_point_epoch",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1187,
																"src": "6271:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view external returns (uint256)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6271:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "6218:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6218:85:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "EmitStatement",
												"src": "6213:90:12"
											},
											{
												"expression": {
													"id": 1867,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1809,
													"src": "6331:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1777,
												"id": 1868,
												"nodeType": "Return",
												"src": "6324:13:12"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1774,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1773,
												"name": "nonReentrant",
												"nameLocations": [
													"5446:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5446:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5446:12:12"
										}
									],
									"name": "claim",
									"nameLocation": "5414:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5428:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "5420:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:17:12"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "5468:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5467:9:12"
									},
									"scope": 1955,
									"src": "5405:940:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "6438:239:12",
										"statements": [
											{
												"body": {
													"id": 1912,
													"nodeType": "Block",
													"src": "6495:153:12",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1893,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6538:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6542:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6538:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1895,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "6550:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1897,
																		"indexExpression": {
																			"id": 1896,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "6559:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6550:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1891,
																		"name": "veSix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "6514:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeSix_$1191",
																			"typeString": "contract IVeSix"
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6520:17:12",
																	"memberName": "isApprovedOrOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1150,
																	"src": "6514:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) view external returns (bool)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6514:48:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1911,
															"nodeType": "IfStatement",
															"src": "6510:127:12",
															"trueBody": {
																"id": 1910,
																"nodeType": "Block",
																"src": "6564:73:12",
																"statements": [
																	{
																		"clauses": [
																			{
																				"block": {
																					"id": 1905,
																					"nodeType": "Block",
																					"src": "6611:2:12",
																					"statements": []
																				},
																				"errorName": "",
																				"id": 1906,
																				"nodeType": "TryCatchClause",
																				"src": "6611:2:12"
																			},
																			{
																				"block": {
																					"id": 1907,
																					"nodeType": "Block",
																					"src": "6620:2:12",
																					"statements": []
																				},
																				"errorName": "",
																				"id": 1908,
																				"nodeType": "TryCatchClause",
																				"src": "6614:8:12"
																			}
																		],
																		"externalCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1901,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1873,
																						"src": "6598:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 1903,
																					"indexExpression": {
																						"id": 1902,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1881,
																						"src": "6607:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6598:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1899,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6587:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SixRewardsDistributor_$1955",
																						"typeString": "contract SixRewardsDistributor"
																					}
																				},
																				"id": 1900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6592:5:12",
																				"memberName": "claim",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1870,
																				"src": "6587:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) external returns (uint256)"
																				}
																			},
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6587:23:12",
																			"tryCall": true,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1909,
																		"nodeType": "TryStatement",
																		"src": "6583:39:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "6469:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1885,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "6473:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6482:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6473:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6469:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"initializationExpression": {
													"assignments": [
														1881
													],
													"declarations": [
														{
															"constant": false,
															"id": 1881,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6462:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1913,
															"src": "6454:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1880,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6454:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1883,
													"initialValue": {
														"hexValue": "30",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6466:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6454:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6490:3:12",
														"subExpression": {
															"id": 1888,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "6490:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1890,
													"nodeType": "ExpressionStatement",
													"src": "6490:3:12"
												},
												"nodeType": "ForStatement",
												"src": "6449:199:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6665:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1879,
												"id": 1915,
												"nodeType": "Return",
												"src": "6658:11:12"
											}
										]
									},
									"functionSelector": "925489a8",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1876,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1875,
												"name": "nonReentrant",
												"nameLocations": [
													"6410:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "6410:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6410:12:12"
										}
									],
									"name": "claimMany",
									"nameLocation": "6362:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "6391:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6372:27:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1871,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6372:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1872,
													"nodeType": "ArrayTypeName",
													"src": "6372:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:29:12"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6432:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6432:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6431:6:12"
									},
									"scope": 1955,
									"src": "6353:324:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "6785:66:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1924,
														"name": "weeklyRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "6803:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1931,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1925,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "6818:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1926,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "6830:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6818:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1928,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6817:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1929,
															"name": "WEEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "6838:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6817:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6803:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1932,
												"nodeType": "Return",
												"src": "6796:47:12"
											}
										]
									},
									"functionSelector": "eeff799a",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWeeklyRewards",
									"nameLocation": "6717:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6742:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "6734:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6734:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6733:19:12"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "6776:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:12"
									},
									"scope": 1955,
									"src": "6708:143:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "6921:116:12",
										"statements": [
											{
												"assignments": [
													1940
												],
												"declarations": [
													{
														"constant": false,
														"id": 1940,
														"mutability": "mutable",
														"name": "currentWeek",
														"nameLocation": "6940:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1953,
														"src": "6932:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6932:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1941,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6955:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6961:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6955:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1943,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "6973:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6955:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1945,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6954:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1946,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "6981:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6954:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6932:53:12"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1949,
														"name": "veSupplyCache",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "7003:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1951,
													"indexExpression": {
														"id": 1950,
														"name": "currentWeek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "7017:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7003:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1938,
												"id": 1952,
												"nodeType": "Return",
												"src": "6996:33:12"
											}
										]
									},
									"functionSelector": "069bf581",
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVeSupply",
									"nameLocation": "6868:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6886:2:12"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "6912:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6911:9:12"
									},
									"scope": 1955,
									"src": "6859:178:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1956,
							"src": "413:6627:12",
							"usedErrors": [
								13,
								18,
								394,
								1264,
								1266,
								1268,
								1270
							],
							"usedEvents": [
								24,
								1216,
								1226
							]
						}
					],
					"src": "33:7007:12"
				},
				"id": 12
			}
		}
	}
}